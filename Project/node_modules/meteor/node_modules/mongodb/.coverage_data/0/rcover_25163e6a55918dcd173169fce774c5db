{
  "files": {
    "/Users/ck/coding/projects/node-mongodb-native/lib/mongodb/index.js": {
      "stats": {
        "percentage": 0.89171974522293,
        "lines": [
          {
            "lineno": 108
          },
          {
            "lineno": 110
          },
          {
            "lineno": 131
          },
          {
            "lineno": 133
          },
          {
            "lineno": 138
          },
          {
            "lineno": 139
          },
          {
            "lineno": 140
          },
          {
            "lineno": 141
          },
          {
            "lineno": 142
          },
          {
            "lineno": 143
          },
          {
            "lineno": 144
          },
          {
            "lineno": 145
          },
          {
            "lineno": 146
          },
          {
            "lineno": 147
          },
          {
            "lineno": 150
          },
          {
            "lineno": 153
          },
          {
            "lineno": 156
          }
        ],
        "missing": 17,
        "seen": 140,
        "seen_lines": [
          {
            "s": 2,
            "e": 2
          },
          {
            "s": 2,
            "e": 2
          },
          {
            "s": 3,
            "e": 3
          },
          {
            "s": 3,
            "e": 3
          },
          {
            "s": 8,
            "e": 51
          },
          {
            "s": 8,
            "e": 51
          },
          {
            "s": 29,
            "e": 29
          },
          {
            "s": 29,
            "e": 29
          },
          {
            "s": 29,
            "e": 29
          },
          {
            "s": 29,
            "e": 29
          },
          {
            "s": 31,
            "e": 31
          },
          {
            "s": 35,
            "e": 35
          },
          {
            "s": 38,
            "e": 38
          },
          {
            "s": 38,
            "e": 38
          },
          {
            "s": 39,
            "e": 39
          },
          {
            "s": 39,
            "e": 39
          },
          {
            "s": 40,
            "e": 40
          },
          {
            "s": 40,
            "e": 40
          },
          {
            "s": 41,
            "e": 41
          },
          {
            "s": 41,
            "e": 41
          },
          {
            "s": 42,
            "e": 42
          },
          {
            "s": 42,
            "e": 42
          },
          {
            "s": 43,
            "e": 43
          },
          {
            "s": 43,
            "e": 43
          },
          {
            "s": 44,
            "e": 44
          },
          {
            "s": 44,
            "e": 44
          },
          {
            "s": 45,
            "e": 45
          },
          {
            "s": 45,
            "e": 45
          },
          {
            "s": 46,
            "e": 46
          },
          {
            "s": 46,
            "e": 46
          },
          {
            "s": 47,
            "e": 47
          },
          {
            "s": 47,
            "e": 47
          },
          {
            "s": 50,
            "e": 50
          },
          {
            "s": 50,
            "e": 50
          },
          {
            "s": 54,
            "e": 107
          },
          {
            "s": 55,
            "e": 55
          },
          {
            "s": 57,
            "e": 82
          },
          {
            "s": 57,
            "e": 82
          },
          {
            "s": 78,
            "e": 78
          },
          {
            "s": 78,
            "e": 78
          },
          {
            "s": 78,
            "e": 78
          },
          {
            "s": 78,
            "e": 78
          },
          {
            "s": 80,
            "e": 80
          },
          {
            "s": 85,
            "e": 85
          },
          {
            "s": 88,
            "e": 88
          },
          {
            "s": 88,
            "e": 88
          },
          {
            "s": 89,
            "e": 89
          },
          {
            "s": 89,
            "e": 89
          },
          {
            "s": 90,
            "e": 90
          },
          {
            "s": 90,
            "e": 90
          },
          {
            "s": 91,
            "e": 91
          },
          {
            "s": 91,
            "e": 91
          },
          {
            "s": 92,
            "e": 92
          },
          {
            "s": 92,
            "e": 92
          },
          {
            "s": 93,
            "e": 93
          },
          {
            "s": 93,
            "e": 93
          },
          {
            "s": 94,
            "e": 94
          },
          {
            "s": 94,
            "e": 94
          },
          {
            "s": 95,
            "e": 95
          },
          {
            "s": 95,
            "e": 95
          },
          {
            "s": 96,
            "e": 96
          },
          {
            "s": 96,
            "e": 96
          },
          {
            "s": 97,
            "e": 97
          },
          {
            "s": 97,
            "e": 97
          },
          {
            "s": 100,
            "e": 100
          },
          {
            "s": 100,
            "e": 100
          },
          {
            "s": 103,
            "e": 103
          },
          {
            "s": 107,
            "e": 158
          }
        ],
        "total": 157,
        "coverage": {
          "108": {
            "partial": false,
            "source": "  var classes = {};",
            "missing": [
              {
                "startCol": 2,
                "endCol": 19
              }
            ]
          },
          "110": {
            "partial": false,
            "source": "  [ 'commands/base_command'",
            "missing": [
              {}
            ]
          },
          "111": {
            "partial": false,
            "source": "    , 'commands/db_command'",
            "missing": [
              {}
            ]
          },
          "112": {
            "partial": false,
            "source": "    , 'commands/delete_command'",
            "missing": [
              {}
            ]
          },
          "113": {
            "partial": false,
            "source": "    , 'commands/get_more_command'",
            "missing": [
              {}
            ]
          },
          "114": {
            "partial": false,
            "source": "    , 'commands/insert_command'",
            "missing": [
              {}
            ]
          },
          "115": {
            "partial": false,
            "source": "    , 'commands/kill_cursor_command'",
            "missing": [
              {}
            ]
          },
          "116": {
            "partial": false,
            "source": "    , 'commands/query_command'",
            "missing": [
              {}
            ]
          },
          "117": {
            "partial": false,
            "source": "    , 'commands/update_command'",
            "missing": [
              {}
            ]
          },
          "118": {
            "partial": false,
            "source": "    , 'responses/mongo_reply'",
            "missing": [
              {}
            ]
          },
          "119": {
            "partial": false,
            "source": "    , 'admin'",
            "missing": [
              {}
            ]
          },
          "120": {
            "partial": false,
            "source": "    , 'collection'",
            "missing": [
              {}
            ]
          },
          "121": {
            "partial": false,
            "source": "    , 'connection/read_preference'",
            "missing": [
              {}
            ]
          },
          "122": {
            "partial": false,
            "source": "    , 'connection/connection'",
            "missing": [
              {}
            ]
          },
          "123": {
            "partial": false,
            "source": "    , 'connection/server'",
            "missing": [
              {}
            ]
          },
          "124": {
            "partial": false,
            "source": "    , 'connection/mongos'",
            "missing": [
              {}
            ]
          },
          "125": {
            "partial": false,
            "source": "    , 'connection/repl_set'",
            "missing": [
              {}
            ]
          },
          "126": {
            "partial": false,
            "source": "    , 'cursor'",
            "missing": [
              {}
            ]
          },
          "127": {
            "partial": false,
            "source": "    , 'db'",
            "missing": [
              {}
            ]
          },
          "128": {
            "partial": false,
            "source": "    , 'gridfs/grid'",
            "missing": [
              {}
            ]
          },
          "129": {
            "partial": false,
            "source": "    ,\t'gridfs/chunk'",
            "missing": [
              {}
            ]
          },
          "130": {
            "partial": false,
            "source": "    , 'gridfs/gridstore'].forEach(function (path) {",
            "missing": [
              {}
            ]
          },
          "131": {
            "partial": false,
            "source": "    \tvar module = require('./' + path);",
            "missing": [
              {
                "startCol": 5,
                "endCol": 39
              },
              {
                "startCol": 18,
                "endCol": 38
              },
              {},
              {
                "startCol": 26,
                "endCol": 37
              },
              {
                "startCol": 33,
                "endCol": 37
              }
            ]
          },
          "132": {
            "partial": false,
            "source": "    \tfor (var i in module) {",
            "missing": [
              {}
            ]
          },
          "133": {
            "partial": false,
            "source": "    \t\tclasses[i] = module[i];",
            "missing": [
              {},
              {
                "startCol": 6,
                "endCol": 29
              }
            ]
          },
          "134": {
            "partial": false,
            "source": "      }",
            "missing": [
              {}
            ]
          },
          "135": {
            "partial": false,
            "source": "  });",
            "missing": [
              {}
            ]
          },
          "138": {
            "partial": false,
            "source": "  classes.Binary = require('bson').Binary;",
            "missing": [
              {
                "startCol": 2,
                "endCol": 42
              },
              {
                "startCol": 26,
                "endCol": 34
              }
            ]
          },
          "139": {
            "partial": false,
            "source": "  classes.Code = require('bson').Code;",
            "missing": [
              {
                "startCol": 2,
                "endCol": 38
              },
              {
                "startCol": 24,
                "endCol": 32
              }
            ]
          },
          "140": {
            "partial": false,
            "source": "  classes.DBRef = require('bson').DBRef;",
            "missing": [
              {
                "startCol": 2,
                "endCol": 40
              },
              {
                "startCol": 25,
                "endCol": 33
              }
            ]
          },
          "141": {
            "partial": false,
            "source": "  classes.Double = require('bson').Double;",
            "missing": [
              {
                "startCol": 2,
                "endCol": 42
              },
              {
                "startCol": 26,
                "endCol": 34
              }
            ]
          },
          "142": {
            "partial": false,
            "source": "  classes.Long = require('bson').Long;",
            "missing": [
              {
                "startCol": 2,
                "endCol": 38
              },
              {
                "startCol": 24,
                "endCol": 32
              }
            ]
          },
          "143": {
            "partial": false,
            "source": "  classes.MinKey = require('bson').MinKey;",
            "missing": [
              {
                "startCol": 2,
                "endCol": 42
              },
              {
                "startCol": 26,
                "endCol": 34
              }
            ]
          },
          "144": {
            "partial": false,
            "source": "  classes.MaxKey = require('bson').MaxKey;",
            "missing": [
              {
                "startCol": 2,
                "endCol": 42
              },
              {
                "startCol": 26,
                "endCol": 34
              }
            ]
          },
          "145": {
            "partial": false,
            "source": "  classes.ObjectID = require('bson').ObjectID;",
            "missing": [
              {
                "startCol": 2,
                "endCol": 46
              },
              {
                "startCol": 28,
                "endCol": 36
              }
            ]
          },
          "146": {
            "partial": false,
            "source": "  classes.Symbol = require('bson').Symbol;",
            "missing": [
              {
                "startCol": 2,
                "endCol": 42
              },
              {
                "startCol": 26,
                "endCol": 34
              }
            ]
          },
          "147": {
            "partial": false,
            "source": "  classes.Timestamp = require('bson').Timestamp;",
            "missing": [
              {
                "startCol": 2,
                "endCol": 48
              },
              {
                "startCol": 29,
                "endCol": 37
              }
            ]
          },
          "150": {
            "partial": false,
            "source": "  classes.ReplSetServers = exports.ReplSet;",
            "missing": [
              {
                "startCol": 2,
                "endCol": 43
              }
            ]
          },
          "153": {
            "partial": false,
            "source": "  classes.BSON = require('bson').BSONNative.BSON;",
            "missing": [
              {
                "startCol": 2,
                "endCol": 49
              },
              {
                "startCol": 24,
                "endCol": 32
              }
            ]
          },
          "156": {
            "partial": false,
            "source": "  return classes;",
            "missing": [
              {
                "startCol": 2,
                "endCol": 17
              }
            ]
          }
        },
        "source": "try {\n  exports.BSONPure = require('bson').BSONPure;\n  exports.BSONNative = require('bson').BSONNative;\n} catch(err) {\n  // do nothing\n}\n\n[ 'commands/base_command'\n  , 'commands/db_command'\n  , 'commands/delete_command'\n  , 'commands/get_more_command'\n  , 'commands/insert_command'\n  , 'commands/kill_cursor_command'\n  , 'commands/query_command'\n  , 'commands/update_command'\n  , 'responses/mongo_reply'\n  , 'admin'\n  , 'collection'\n  , 'connection/read_preference'\n  , 'connection/connection'\n  , 'connection/server'\n  , 'connection/mongos'\n  , 'connection/repl_set'\n  , 'cursor'\n  , 'db'\n  , 'gridfs/grid'\n  ,\t'gridfs/chunk'\n  , 'gridfs/gridstore'].forEach(function (path) {\n  \tvar module = require('./' + path);\n  \tfor (var i in module) {\n  \t\texports[i] = module[i];\n    }\n\n    // backwards compat\n    exports.ReplSetServers = exports.ReplSet;\n    \n    // Add BSON Classes\n    exports.Binary = require('bson').Binary;\n    exports.Code = require('bson').Code;\n    exports.DBRef = require('bson').DBRef;\n    exports.Double = require('bson').Double;\n    exports.Long = require('bson').Long;\n    exports.MinKey = require('bson').MinKey;\n    exports.MaxKey = require('bson').MaxKey;\n    exports.ObjectID = require('bson').ObjectID;\n    exports.Symbol = require('bson').Symbol;\n    exports.Timestamp = require('bson').Timestamp;  \n    \n    // Add BSON Parser\n    exports.BSON = require('bson').BSONPure.BSON;\n});\n\n// Exports all the classes for the PURE JS BSON Parser\nexports.pure = function() {\n  var classes = {};\n  // Map all the classes\n  [ 'commands/base_command'\n    , 'commands/db_command'\n    , 'commands/delete_command'\n    , 'commands/get_more_command'\n    , 'commands/insert_command'\n    , 'commands/kill_cursor_command'\n    , 'commands/query_command'\n    , 'commands/update_command'\n    , 'responses/mongo_reply'\n    , 'admin'\n    , 'collection'\n    , 'connection/read_preference'\n    , 'connection/connection'\n    , 'connection/server'\n    , 'connection/mongos'\n    , 'connection/repl_set'\n    , 'cursor'\n    , 'db'\n    , 'gridfs/grid'\n    ,\t'gridfs/chunk'\n    , 'gridfs/gridstore'].forEach(function (path) {\n    \tvar module = require('./' + path);\n    \tfor (var i in module) {\n    \t\tclasses[i] = module[i];\n      }\n  });\n\n  // backwards compat\n  classes.ReplSetServers = exports.ReplSet;\n\n  // Add BSON Classes\n  classes.Binary = require('bson').Binary;\n  classes.Code = require('bson').Code;\n  classes.DBRef = require('bson').DBRef;\n  classes.Double = require('bson').Double;\n  classes.Long = require('bson').Long;\n  classes.MinKey = require('bson').MinKey;\n  classes.MaxKey = require('bson').MaxKey;\n  classes.ObjectID = require('bson').ObjectID;\n  classes.Symbol = require('bson').Symbol;\n  classes.Timestamp = require('bson').Timestamp;\n\n  // Add BSON Parser\n  classes.BSON = require('bson').BSONPure.BSON;\n\n  // Return classes list\n  return classes;\n}\n\n// Exports all the classes for the PURE JS BSON Parser\nexports.native = function() {\n  var classes = {};\n  // Map all the classes\n  [ 'commands/base_command'\n    , 'commands/db_command'\n    , 'commands/delete_command'\n    , 'commands/get_more_command'\n    , 'commands/insert_command'\n    , 'commands/kill_cursor_command'\n    , 'commands/query_command'\n    , 'commands/update_command'\n    , 'responses/mongo_reply'\n    , 'admin'\n    , 'collection'\n    , 'connection/read_preference'\n    , 'connection/connection'\n    , 'connection/server'\n    , 'connection/mongos'\n    , 'connection/repl_set'\n    , 'cursor'\n    , 'db'\n    , 'gridfs/grid'\n    ,\t'gridfs/chunk'\n    , 'gridfs/gridstore'].forEach(function (path) {\n    \tvar module = require('./' + path);\n    \tfor (var i in module) {\n    \t\tclasses[i] = module[i];\n      }\n  });\n\n  // Add BSON Classes\n  classes.Binary = require('bson').Binary;\n  classes.Code = require('bson').Code;\n  classes.DBRef = require('bson').DBRef;\n  classes.Double = require('bson').Double;\n  classes.Long = require('bson').Long;\n  classes.MinKey = require('bson').MinKey;\n  classes.MaxKey = require('bson').MaxKey;\n  classes.ObjectID = require('bson').ObjectID;\n  classes.Symbol = require('bson').Symbol;\n  classes.Timestamp = require('bson').Timestamp;\n\n  // backwards compat\n  classes.ReplSetServers = exports.ReplSet;\n\n  // Add BSON Parser\n  classes.BSON = require('bson').BSONNative.BSON;\n\n  // Return classes list\n  return classes;\n}",
        "blocks": {
          "total": 10,
          "seen": 6,
          "missing": 4,
          "percentage": 0.6
        }
      },
      "hash": "660a0d56765db9e03c5965e754d6d4c9"
    },
    "/Users/ck/coding/projects/node-mongodb-native/lib/mongodb/commands/base_command.js": {
      "stats": {
        "percentage": 0.9310344827586207,
        "lines": [
          {
            "lineno": 16
          },
          {
            "lineno": 17
          }
        ],
        "missing": 2,
        "seen": 27,
        "seen_lines": [
          {
            "s": 4,
            "e": 5
          },
          {
            "s": 7,
            "e": 7
          },
          {
            "s": 8,
            "e": 11
          },
          {
            "s": 9,
            "e": 9
          },
          {
            "s": 9,
            "e": 9
          },
          {
            "s": 9,
            "e": 9
          },
          {
            "s": 10,
            "e": 10
          },
          {
            "s": 13,
            "e": 15
          },
          {
            "s": 15,
            "e": 18
          },
          {
            "s": 21,
            "e": 21
          },
          {
            "s": 22,
            "e": 22
          },
          {
            "s": 23,
            "e": 23
          },
          {
            "s": 24,
            "e": 24
          },
          {
            "s": 25,
            "e": 25
          },
          {
            "s": 26,
            "e": 26
          },
          {
            "s": 27,
            "e": 27
          },
          {
            "s": 28,
            "e": 28
          },
          {
            "s": 29,
            "e": 29
          }
        ],
        "total": 29,
        "coverage": {
          "16": {
            "partial": false,
            "source": "  this.requestId = id++;",
            "missing": [
              {
                "startCol": 2,
                "endCol": 24
              },
              {
                "startCol": 19,
                "endCol": 23
              }
            ]
          },
          "17": {
            "partial": false,
            "source": "  return this.requestId;",
            "missing": [
              {
                "startCol": 2,
                "endCol": 24
              }
            ]
          }
        },
        "source": "/**\n  Base object used for common functionality\n**/\nvar BaseCommand = exports.BaseCommand = function BaseCommand() {\n};\n\nvar id = 1;\nBaseCommand.prototype.getRequestId = function getRequestId() {\n  if (!this.requestId) this.requestId = id++;\n  return this.requestId;\n};\n\nBaseCommand.prototype.setMongosReadPreference = function setMongosReadPreference(readPreference, tags) {}\n\nBaseCommand.prototype.updateRequestId = function() {\n  this.requestId = id++;\n  return this.requestId;\n};\n\n// OpCodes\nBaseCommand.OP_REPLY = 1;\nBaseCommand.OP_MSG = 1000;\nBaseCommand.OP_UPDATE = 2001;\nBaseCommand.OP_INSERT =\t2002;\nBaseCommand.OP_GET_BY_OID = 2003;\nBaseCommand.OP_QUERY = 2004;\nBaseCommand.OP_GET_MORE = 2005;\nBaseCommand.OP_DELETE =\t2006;\nBaseCommand.OP_KILL_CURSORS =\t2007;",
        "blocks": {
          "total": 5,
          "seen": 3,
          "missing": 2,
          "percentage": 0.6
        }
      },
      "hash": "a50ae4b0fa3eb1628f09bd6b9b2c4080"
    },
    "/Users/ck/coding/projects/node-mongodb-native/lib/mongodb/commands/db_command.js": {
      "stats": {
        "percentage": 0.6682242990654206,
        "lines": [
          {
            "lineno": 20
          },
          {
            "lineno": 23
          },
          {
            "lineno": 44
          },
          {
            "lineno": 48
          },
          {
            "lineno": 52
          },
          {
            "lineno": 57
          },
          {
            "lineno": 59
          },
          {
            "lineno": 60
          },
          {
            "lineno": 62
          },
          {
            "lineno": 63
          },
          {
            "lineno": 64
          },
          {
            "lineno": 66
          },
          {
            "lineno": 68
          },
          {
            "lineno": 72
          },
          {
            "lineno": 76
          },
          {
            "lineno": 79
          },
          {
            "lineno": 82
          },
          {
            "lineno": 86
          },
          {
            "lineno": 90
          },
          {
            "lineno": 91
          },
          {
            "lineno": 92
          },
          {
            "lineno": 97
          },
          {
            "lineno": 98
          },
          {
            "lineno": 99
          },
          {
            "lineno": 102
          },
          {
            "lineno": 104
          },
          {
            "lineno": 106
          },
          {
            "lineno": 111
          },
          {
            "lineno": 117
          },
          {
            "lineno": 121
          },
          {
            "lineno": 125
          },
          {
            "lineno": 126
          },
          {
            "lineno": 127
          },
          {
            "lineno": 130
          },
          {
            "lineno": 131
          },
          {
            "lineno": 132
          },
          {
            "lineno": 133
          },
          {
            "lineno": 134
          },
          {
            "lineno": 135
          },
          {
            "lineno": 136
          },
          {
            "lineno": 137
          },
          {
            "lineno": 138
          },
          {
            "lineno": 139
          },
          {
            "lineno": 140
          },
          {
            "lineno": 141
          },
          {
            "lineno": 142
          },
          {
            "lineno": 143
          },
          {
            "lineno": 144
          },
          {
            "lineno": 145
          },
          {
            "lineno": 151
          },
          {
            "lineno": 152
          },
          {
            "lineno": 153
          },
          {
            "lineno": 154
          },
          {
            "lineno": 155
          },
          {
            "lineno": 160
          },
          {
            "lineno": 162
          },
          {
            "lineno": 165
          },
          {
            "lineno": 167
          },
          {
            "lineno": 170
          },
          {
            "lineno": 172
          },
          {
            "lineno": 173
          },
          {
            "lineno": 177
          },
          {
            "lineno": 179
          },
          {
            "lineno": 183
          },
          {
            "lineno": 185
          },
          {
            "lineno": 189
          },
          {
            "lineno": 193
          },
          {
            "lineno": 201
          },
          {
            "lineno": 205
          },
          {
            "lineno": 209
          },
          {
            "lineno": 213
          }
        ],
        "missing": 71,
        "seen": 143,
        "seen_lines": [
          {
            "s": 1,
            "e": 4
          },
          {
            "s": 1,
            "e": 1
          },
          {
            "s": 2,
            "e": 2
          },
          {
            "s": 3,
            "e": 3
          },
          {
            "s": 4,
            "e": 4
          },
          {
            "s": 9,
            "e": 25
          },
          {
            "s": 10,
            "e": 10
          },
          {
            "s": 10,
            "e": 10
          },
          {
            "s": 11,
            "e": 11
          },
          {
            "s": 12,
            "e": 12
          },
          {
            "s": 13,
            "e": 13
          },
          {
            "s": 14,
            "e": 14
          },
          {
            "s": 15,
            "e": 15
          },
          {
            "s": 16,
            "e": 16
          },
          {
            "s": 17,
            "e": 17
          },
          {
            "s": 20,
            "e": 20
          },
          {
            "s": 20,
            "e": 20
          },
          {
            "s": 20,
            "e": 20
          },
          {
            "s": 20,
            "e": 20
          },
          {
            "s": 22,
            "e": 22
          },
          {
            "s": 22,
            "e": 22
          },
          {
            "s": 27,
            "e": 27
          },
          {
            "s": 27,
            "e": 27
          },
          {
            "s": 30,
            "e": 30
          },
          {
            "s": 31,
            "e": 31
          },
          {
            "s": 32,
            "e": 32
          },
          {
            "s": 33,
            "e": 33
          },
          {
            "s": 34,
            "e": 34
          },
          {
            "s": 35,
            "e": 35
          },
          {
            "s": 38,
            "e": 40
          },
          {
            "s": 39,
            "e": 39
          },
          {
            "s": 39,
            "e": 39
          },
          {
            "s": 39,
            "e": 39
          },
          {
            "s": 39,
            "e": 39
          },
          {
            "s": 39,
            "e": 39
          },
          {
            "s": 43,
            "e": 45
          },
          {
            "s": 47,
            "e": 49
          },
          {
            "s": 51,
            "e": 53
          },
          {
            "s": 55,
            "e": 69
          },
          {
            "s": 71,
            "e": 73
          },
          {
            "s": 75,
            "e": 83
          },
          {
            "s": 85,
            "e": 87
          },
          {
            "s": 89,
            "e": 93
          },
          {
            "s": 95,
            "e": 112
          },
          {
            "s": 114,
            "e": 114
          },
          {
            "s": 116,
            "e": 118
          },
          {
            "s": 120,
            "e": 122
          },
          {
            "s": 124,
            "e": 180
          },
          {
            "s": 182,
            "e": 188
          },
          {
            "s": 188,
            "e": 190
          },
          {
            "s": 192,
            "e": 194
          },
          {
            "s": 196,
            "e": 198
          },
          {
            "s": 197,
            "e": 197
          },
          {
            "s": 197,
            "e": 197
          },
          {
            "s": 197,
            "e": 197
          },
          {
            "s": 197,
            "e": 197
          },
          {
            "s": 200,
            "e": 202
          },
          {
            "s": 204,
            "e": 206
          },
          {
            "s": 208,
            "e": 210
          },
          {
            "s": 212,
            "e": 214
          }
        ],
        "total": 214,
        "coverage": {
          "20": {
            "partial": true,
            "source": "  options = options == null ? {} : options;",
            "missing": [
              {
                "startCol": 35,
                "endCol": 42
              }
            ]
          },
          "23": {
            "partial": false,
            "source": "    this.serializeFunctions = true;",
            "missing": [
              {
                "startCol": 4,
                "endCol": 35
              }
            ]
          },
          "44": {
            "partial": false,
            "source": "  return new DbCommand(db, db.databaseName + \".\" + DbCommand.SYSTEM_COMMAND_COLLECTION, QueryCommand.OPTS_NO_CURSOR_TIMEOUT, 0, -1, {'ismaster':1}, null);",
            "missing": [
              {
                "startCol": 2,
                "endCol": 154
              },
              {
                "startCol": 27,
                "endCol": 48
              },
              {
                "startCol": 128,
                "endCol": 130
              }
            ]
          },
          "48": {
            "partial": false,
            "source": "  return new DbCommand(db, db.databaseName + \".\" + DbCommand.SYSTEM_NAMESPACE_COLLECTION, QueryCommand.OPTS_NO_CURSOR_TIMEOUT, 0, 0, selector, null);",
            "missing": [
              {
                "startCol": 2,
                "endCol": 149
              },
              {
                "startCol": 27,
                "endCol": 48
              }
            ]
          },
          "52": {
            "partial": false,
            "source": "  return new DbCommand(db, db.databaseName + \".\" + DbCommand.SYSTEM_COMMAND_COLLECTION, QueryCommand.OPTS_NO_CURSOR_TIMEOUT, 0, -1, {'getnonce':1}, null);",
            "missing": [
              {
                "startCol": 2,
                "endCol": 154
              },
              {
                "startCol": 27,
                "endCol": 48
              },
              {
                "startCol": 128,
                "endCol": 130
              }
            ]
          },
          "57": {
            "partial": false,
            "source": "  var md5 = crypto.createHash('md5');",
            "missing": [
              {
                "startCol": 2,
                "endCol": 37
              },
              {
                "startCol": 12,
                "endCol": 36
              }
            ]
          },
          "59": {
            "partial": false,
            "source": "  md5.update(username + \":mongo:\" + password);",
            "missing": [
              {
                "startCol": 2,
                "endCol": 45
              },
              {
                "startCol": 13,
                "endCol": 21
              },
              {
                "startCol": 36,
                "endCol": 44
              }
            ]
          },
          "60": {
            "partial": false,
            "source": "  var hash_password = md5.digest('hex');",
            "missing": [
              {
                "startCol": 2,
                "endCol": 40
              },
              {
                "startCol": 22,
                "endCol": 39
              }
            ]
          },
          "62": {
            "partial": false,
            "source": "  md5 = crypto.createHash('md5');",
            "missing": [
              {
                "startCol": 2,
                "endCol": 33
              },
              {
                "startCol": 8,
                "endCol": 32
              }
            ]
          },
          "63": {
            "partial": false,
            "source": "  md5.update(nonce + username + hash_password);",
            "missing": [
              {
                "startCol": 2,
                "endCol": 46
              },
              {
                "startCol": 13,
                "endCol": 18
              },
              {
                "startCol": 21,
                "endCol": 29
              },
              {
                "startCol": 32,
                "endCol": 45
              }
            ]
          },
          "64": {
            "partial": false,
            "source": "  var key = md5.digest('hex');",
            "missing": [
              {
                "startCol": 2,
                "endCol": 30
              },
              {
                "startCol": 12,
                "endCol": 29
              }
            ]
          },
          "66": {
            "partial": false,
            "source": "  var selector = {'authenticate':1, 'user':username, 'nonce':nonce, 'key':key};",
            "missing": [
              {
                "startCol": 2,
                "endCol": 79
              }
            ]
          },
          "68": {
            "partial": false,
            "source": "  return new DbCommand(db, authdb + \".\" + DbCommand.SYSTEM_COMMAND_COLLECTION, QueryCommand.OPTS_NONE, 0, -1, selector, null);",
            "missing": [
              {
                "startCol": 2,
                "endCol": 126
              },
              {
                "startCol": 27,
                "endCol": 33
              },
              {
                "startCol": 106,
                "endCol": 108
              }
            ]
          },
          "72": {
            "partial": false,
            "source": "  return new DbCommand(db, db.databaseName + \".\" + DbCommand.SYSTEM_COMMAND_COLLECTION, QueryCommand.OPTS_NO_CURSOR_TIMEOUT, 0, -1, {'logout':1}, null);",
            "missing": [
              {
                "startCol": 2,
                "endCol": 152
              },
              {
                "startCol": 27,
                "endCol": 48
              },
              {
                "startCol": 128,
                "endCol": 130
              }
            ]
          },
          "76": {
            "partial": false,
            "source": "  var selector = {'create':collectionName};",
            "missing": [
              {
                "startCol": 2,
                "endCol": 43
              }
            ]
          },
          "79": {
            "partial": false,
            "source": "    if(options[name] != null && options[name].constructor != Function) selector[name] = options[name];",
            "missing": [
              {
                "startCol": 7,
                "endCol": 28
              },
              {
                "startCol": 32,
                "endCol": 69
              },
              {
                "startCol": 61,
                "endCol": 69
              },
              {
                "startCol": 71,
                "endCol": 102
              }
            ]
          },
          "82": {
            "partial": false,
            "source": "  return new DbCommand(db, db.databaseName + \".\" + DbCommand.SYSTEM_COMMAND_COLLECTION, QueryCommand.OPTS_NO_CURSOR_TIMEOUT, 0, -1, selector, null);",
            "missing": [
              {
                "startCol": 2,
                "endCol": 148
              },
              {
                "startCol": 27,
                "endCol": 48
              },
              {
                "startCol": 128,
                "endCol": 130
              }
            ]
          },
          "86": {
            "partial": false,
            "source": "  return new DbCommand(db, db.databaseName + \".\" + DbCommand.SYSTEM_COMMAND_COLLECTION, QueryCommand.OPTS_NO_CURSOR_TIMEOUT, 0, -1, {'drop':collectionName}, null);",
            "missing": [
              {
                "startCol": 2,
                "endCol": 163
              },
              {
                "startCol": 27,
                "endCol": 48
              },
              {
                "startCol": 128,
                "endCol": 130
              }
            ]
          },
          "90": {
            "partial": false,
            "source": "  var renameCollection = db.databaseName + \".\" + fromCollectionName;",
            "missing": [
              {
                "startCol": 2,
                "endCol": 68
              },
              {
                "startCol": 25,
                "endCol": 46
              },
              {
                "startCol": 49,
                "endCol": 67
              }
            ]
          },
          "91": {
            "partial": false,
            "source": "  var toCollection = db.databaseName + \".\" + toCollectionName;",
            "missing": [
              {
                "startCol": 2,
                "endCol": 62
              },
              {
                "startCol": 21,
                "endCol": 42
              },
              {
                "startCol": 45,
                "endCol": 61
              }
            ]
          },
          "92": {
            "partial": false,
            "source": "  return new DbCommand(db, \"admin.\" + DbCommand.SYSTEM_COMMAND_COLLECTION, QueryCommand.OPTS_NO_CURSOR_TIMEOUT, 0, -1, {'renameCollection':renameCollection, 'to':toCollection}, null);",
            "missing": [
              {
                "startCol": 2,
                "endCol": 183
              },
              {
                "startCol": 27,
                "endCol": 73
              },
              {
                "startCol": 115,
                "endCol": 117
              }
            ]
          },
          "97": {
            "partial": false,
            "source": "  if (typeof db === 'undefined') {",
            "missing": [
              {
                "startCol": 6,
                "endCol": 15
              },
              {
                "startCol": 13,
                "endCol": 15
              }
            ]
          },
          "98": {
            "partial": false,
            "source": "    db =  options;",
            "missing": [
              {
                "startCol": 4,
                "endCol": 18
              }
            ]
          },
          "99": {
            "partial": false,
            "source": "    options = {};",
            "missing": [
              {
                "startCol": 4,
                "endCol": 17
              }
            ]
          },
          "102": {
            "partial": false,
            "source": "  var command = {'getlasterror':1};",
            "missing": [
              {
                "startCol": 2,
                "endCol": 35
              }
            ]
          },
          "104": {
            "partial": false,
            "source": "  if('object' === typeof options) {",
            "missing": [
              {
                "startCol": 5,
                "endCol": 32
              },
              {
                "startCol": 18,
                "endCol": 32
              },
              {
                "startCol": 25,
                "endCol": 32
              }
            ]
          },
          "106": {
            "partial": false,
            "source": "      command[name] = options[name]",
            "missing": [
              {}
            ]
          },
          "107": {
            "partial": false,
            "source": "    }",
            "missing": [
              {}
            ]
          },
          "111": {
            "partial": false,
            "source": "  return new DbCommand(db, db.databaseName + \".\" + DbCommand.SYSTEM_COMMAND_COLLECTION, QueryCommand.OPTS_NO_CURSOR_TIMEOUT, 0, -1, command, null);",
            "missing": [
              {
                "startCol": 2,
                "endCol": 147
              },
              {
                "startCol": 27,
                "endCol": 48
              },
              {
                "startCol": 128,
                "endCol": 130
              }
            ]
          },
          "117": {
            "partial": false,
            "source": "  return new DbCommand(db, db.databaseName + \".\" + DbCommand.SYSTEM_COMMAND_COLLECTION, QueryCommand.OPTS_NO_CURSOR_TIMEOUT, 0, -1, {'getpreverror':1}, null);",
            "missing": [
              {
                "startCol": 2,
                "endCol": 158
              },
              {
                "startCol": 27,
                "endCol": 48
              },
              {
                "startCol": 128,
                "endCol": 130
              }
            ]
          },
          "121": {
            "partial": false,
            "source": "  return new DbCommand(db, db.databaseName + \".\" + DbCommand.SYSTEM_COMMAND_COLLECTION, QueryCommand.OPTS_NO_CURSOR_TIMEOUT, 0, -1, {'reseterror':1}, null);",
            "missing": [
              {
                "startCol": 2,
                "endCol": 156
              },
              {
                "startCol": 27,
                "endCol": 48
              },
              {
                "startCol": 128,
                "endCol": 130
              }
            ]
          },
          "125": {
            "partial": false,
            "source": "  var fieldHash = {};",
            "missing": [
              {
                "startCol": 2,
                "endCol": 21
              }
            ]
          },
          "126": {
            "partial": false,
            "source": "  var indexes = [];",
            "missing": [
              {
                "startCol": 2,
                "endCol": 19
              }
            ]
          },
          "127": {
            "partial": false,
            "source": "  var keys;",
            "missing": [
              {
                "startCol": 2,
                "endCol": 11
              }
            ]
          },
          "130": {
            "partial": false,
            "source": "  if (fieldOrSpec.constructor === String) {             // 'type'",
            "missing": [
              {
                "startCol": 6,
                "endCol": 40
              },
              {
                "startCol": 34,
                "endCol": 40
              }
            ]
          },
          "131": {
            "partial": false,
            "source": "    indexes.push(fieldOrSpec + '_' + 1);",
            "missing": [
              {
                "startCol": 4,
                "endCol": 39
              },
              {
                "startCol": 17,
                "endCol": 28
              }
            ]
          },
          "132": {
            "partial": false,
            "source": "    fieldHash[fieldOrSpec] = 1;",
            "missing": [
              {
                "startCol": 4,
                "endCol": 31
              }
            ]
          },
          "133": {
            "partial": false,
            "source": "  } else if (fieldOrSpec.constructor === Array) {       // [{location:'2d'}, ...]",
            "missing": [
              {
                "startCol": 13,
                "endCol": 46
              },
              {
                "startCol": 41,
                "endCol": 46
              }
            ]
          },
          "134": {
            "partial": false,
            "source": "    fieldOrSpec.forEach(function(f) {",
            "missing": [
              {}
            ]
          },
          "135": {
            "partial": false,
            "source": "      if (f.constructor === String) {                   // [{location:'2d'}, 'type']",
            "missing": [
              {},
              {
                "startCol": 10,
                "endCol": 34
              },
              {
                "startCol": 28,
                "endCol": 34
              }
            ]
          },
          "136": {
            "partial": false,
            "source": "        indexes.push(f + '_' + 1);",
            "missing": [
              {
                "startCol": 8,
                "endCol": 33
              },
              {},
              {
                "startCol": 21,
                "endCol": 22
              }
            ]
          },
          "137": {
            "partial": false,
            "source": "        fieldHash[f] = 1;",
            "missing": [
              {},
              {
                "startCol": 8,
                "endCol": 25
              }
            ]
          },
          "138": {
            "partial": false,
            "source": "      } else if (f.constructor === Array) {             // [['location', '2d'],['type', 1]]",
            "missing": [
              {},
              {
                "startCol": 17,
                "endCol": 40
              },
              {
                "startCol": 35,
                "endCol": 40
              }
            ]
          },
          "139": {
            "partial": false,
            "source": "        indexes.push(f[0] + '_' + (f[1] || 1));",
            "missing": [
              {
                "startCol": 21,
                "endCol": 31
              },
              {},
              {
                "startCol": 34,
                "endCol": 45
              },
              {
                "startCol": 8,
                "endCol": 47
              }
            ]
          },
          "140": {
            "partial": false,
            "source": "        fieldHash[f[0]] = f[1] || 1;",
            "missing": [
              {},
              {
                "startCol": 8,
                "endCol": 36
              },
              {
                "startCol": 26,
                "endCol": 35
              }
            ]
          },
          "141": {
            "partial": false,
            "source": "      } else if (f.constructor === Object) {            // [{location:'2d'}, {type:1}]",
            "missing": [
              {
                "startCol": 35,
                "endCol": 41
              },
              {},
              {
                "startCol": 17,
                "endCol": 41
              }
            ]
          },
          "142": {
            "partial": false,
            "source": "        keys = Object.keys(f);",
            "missing": [
              {
                "startCol": 8,
                "endCol": 30
              },
              {
                "startCol": 15,
                "endCol": 29
              },
              {}
            ]
          },
          "143": {
            "partial": false,
            "source": "        keys.forEach(function(k) {",
            "missing": [
              {}
            ]
          },
          "144": {
            "partial": false,
            "source": "          indexes.push(k + '_' + f[k]);",
            "missing": [
              {
                "startCol": 10,
                "endCol": 38
              },
              {
                "startCol": 23,
                "endCol": 24
              },
              {}
            ]
          },
          "145": {
            "partial": false,
            "source": "          fieldHash[k] = f[k];",
            "missing": [
              {},
              {
                "startCol": 10,
                "endCol": 30
              }
            ]
          },
          "146": {
            "partial": false,
            "source": "      });",
            "missing": [
              {}
            ]
          },
          "147": {
            "partial": false,
            "source": "      } else {",
            "missing": [
              {}
            ]
          },
          "148": {
            "partial": false,
            "source": "        // undefined",
            "missing": [
              {}
            ]
          },
          "149": {
            "partial": false,
            "source": "      }",
            "missing": [
              {}
            ]
          },
          "150": {
            "partial": false,
            "source": "    });",
            "missing": [
              {}
            ]
          },
          "151": {
            "partial": false,
            "source": "  } else if (fieldOrSpec.constructor === Object) {  // {location:'2d', type:1}",
            "missing": [
              {
                "startCol": 13,
                "endCol": 47
              },
              {
                "startCol": 41,
                "endCol": 47
              }
            ]
          },
          "152": {
            "partial": false,
            "source": "    keys = Object.keys(fieldOrSpec);",
            "missing": [
              {
                "startCol": 4,
                "endCol": 36
              },
              {
                "startCol": 11,
                "endCol": 35
              }
            ]
          },
          "153": {
            "partial": false,
            "source": "    keys.forEach(function(key) {",
            "missing": [
              {}
            ]
          },
          "154": {
            "partial": false,
            "source": "      indexes.push(key + '_' + fieldOrSpec[key]);",
            "missing": [
              {
                "startCol": 6,
                "endCol": 48
              },
              {},
              {
                "startCol": 19,
                "endCol": 22
              }
            ]
          },
          "155": {
            "partial": false,
            "source": "      fieldHash[key] = fieldOrSpec[key];",
            "missing": [
              {
                "startCol": 6,
                "endCol": 40
              },
              {}
            ]
          },
          "156": {
            "partial": false,
            "source": "    });",
            "missing": [
              {}
            ]
          },
          "160": {
            "partial": false,
            "source": "  var indexName = typeof options.name == 'string' ? options.name : indexes.join(\"_\");",
            "missing": [
              {
                "startCol": 2,
                "endCol": 85
              },
              {
                "startCol": 18,
                "endCol": 37
              },
              {
                "startCol": 52,
                "endCol": 64
              },
              {
                "startCol": 67,
                "endCol": 84
              }
            ]
          },
          "162": {
            "partial": false,
            "source": "  var selector = {'ns':(db.databaseName + \".\" + collectionName), 'key':fieldHash, 'name':indexName};",
            "missing": [
              {
                "startCol": 2,
                "endCol": 100
              },
              {
                "startCol": 23,
                "endCol": 63
              },
              {
                "startCol": 24,
                "endCol": 45
              },
              {
                "startCol": 48,
                "endCol": 62
              }
            ]
          },
          "165": {
            "partial": false,
            "source": "  var finalUnique = options == null || 'object' === typeof options ? false : options;",
            "missing": [
              {
                "startCol": 2,
                "endCol": 85
              },
              {
                "startCol": 20,
                "endCol": 27
              },
              {
                "startCol": 39,
                "endCol": 66
              },
              {
                "startCol": 52,
                "endCol": 66
              },
              {
                "startCol": 59,
                "endCol": 66
              },
              {
                "startCol": 69,
                "endCol": 74
              },
              {
                "startCol": 77,
                "endCol": 84
              }
            ]
          },
          "167": {
            "partial": false,
            "source": "  options = options == null || typeof options == 'boolean' ? {} : options;",
            "missing": [
              {
                "startCol": 2,
                "endCol": 74
              },
              {
                "startCol": 12,
                "endCol": 19
              },
              {
                "startCol": 31,
                "endCol": 45
              },
              {
                "startCol": 38,
                "endCol": 45
              },
              {
                "startCol": 61,
                "endCol": 63
              },
              {
                "startCol": 66,
                "endCol": 73
              }
            ]
          },
          "170": {
            "partial": false,
            "source": "  var keys = Object.keys(options);",
            "missing": [
              {
                "startCol": 2,
                "endCol": 34
              },
              {
                "startCol": 13,
                "endCol": 33
              }
            ]
          },
          "172": {
            "partial": false,
            "source": "  for(var i = 0; i < keys.length; i++) {",
            "missing": [
              {
                "startCol": 17,
                "endCol": 18
              },
              {
                "startCol": 34,
                "endCol": 37
              }
            ]
          },
          "173": {
            "partial": false,
            "source": "    selector[keys[i]] = options[keys[i]];",
            "missing": [
              {
                "startCol": 4,
                "endCol": 41
              }
            ]
          },
          "177": {
            "partial": false,
            "source": "  if(selector['unique'] == null) selector['unique'] = finalUnique;",
            "missing": [
              {
                "startCol": 5,
                "endCol": 31
              },
              {
                "startCol": 33,
                "endCol": 66
              }
            ]
          },
          "179": {
            "partial": false,
            "source": "  return new InsertCommand(db, db.databaseName + \".\" + DbCommand.SYSTEM_INDEX_COLLECTION, false).add(selector);",
            "missing": [
              {
                "startCol": 2,
                "endCol": 111
              },
              {
                "startCol": 9,
                "endCol": 110
              },
              {
                "startCol": 31,
                "endCol": 52
              }
            ]
          },
          "183": {
            "partial": false,
            "source": "  var dbName = options != null && options['authdb'] != null ? options['authdb'] : db.databaseName;",
            "missing": [
              {
                "startCol": 2,
                "endCol": 98
              },
              {
                "startCol": 15,
                "endCol": 22
              },
              {
                "startCol": 34,
                "endCol": 59
              },
              {
                "startCol": 62,
                "endCol": 79
              },
              {
                "startCol": 82,
                "endCol": 97
              }
            ]
          },
          "185": {
            "partial": false,
            "source": "  return new DbCommand(db, dbName + \".\" + DbCommand.SYSTEM_COMMAND_COLLECTION, QueryCommand.OPTS_NO_CURSOR_TIMEOUT, 0, -1, command_hash, null);",
            "missing": [
              {
                "startCol": 2,
                "endCol": 143
              },
              {
                "startCol": 27,
                "endCol": 33
              },
              {
                "startCol": 119,
                "endCol": 121
              }
            ]
          },
          "189": {
            "partial": false,
            "source": "  return new DbCommand(db, db.databaseName + \".\" + DbCommand.SYSTEM_COMMAND_COLLECTION, QueryCommand.OPTS_NO_CURSOR_TIMEOUT, 0, -1, {'deleteIndexes':collectionName, 'index':indexName}, null);",
            "missing": [
              {
                "startCol": 2,
                "endCol": 191
              },
              {
                "startCol": 27,
                "endCol": 48
              },
              {
                "startCol": 128,
                "endCol": 130
              }
            ]
          },
          "193": {
            "partial": false,
            "source": "  return new DbCommand(db, db.databaseName + \".\" + DbCommand.SYSTEM_COMMAND_COLLECTION, QueryCommand.OPTS_NO_CURSOR_TIMEOUT, 0, -1, {'reIndex':collectionName}, null);",
            "missing": [
              {
                "startCol": 2,
                "endCol": 166
              },
              {
                "startCol": 27,
                "endCol": 48
              },
              {
                "startCol": 128,
                "endCol": 130
              }
            ]
          },
          "201": {
            "partial": false,
            "source": "  return new DbCommand(db, db.databaseName + \".\" + DbCommand.SYSTEM_COMMAND_COLLECTION, QueryCommand.OPTS_NO_CURSOR_TIMEOUT, 0, -1, command_hash, null, options);",
            "missing": [
              {
                "startCol": 2,
                "endCol": 161
              },
              {
                "startCol": 27,
                "endCol": 48
              },
              {
                "startCol": 128,
                "endCol": 130
              }
            ]
          },
          "205": {
            "partial": false,
            "source": "  return new DbCommand(db, \"admin.\" + DbCommand.SYSTEM_COMMAND_COLLECTION, QueryCommand.OPTS_NO_CURSOR_TIMEOUT, 0, -1, command_hash, null);",
            "missing": [
              {
                "startCol": 2,
                "endCol": 139
              },
              {
                "startCol": 27,
                "endCol": 73
              },
              {
                "startCol": 115,
                "endCol": 117
              }
            ]
          },
          "209": {
            "partial": false,
            "source": "  return new DbCommand(db, \"admin.\" + DbCommand.SYSTEM_COMMAND_COLLECTION, QueryCommand.OPTS_NO_CURSOR_TIMEOUT | QueryCommand.OPTS_SLAVE, 0, -1, command_hash, null);",
            "missing": [
              {
                "startCol": 2,
                "endCol": 165
              },
              {
                "startCol": 27,
                "endCol": 73
              },
              {
                "startCol": 75,
                "endCol": 136
              },
              {
                "startCol": 141,
                "endCol": 143
              }
            ]
          },
          "213": {
            "partial": false,
            "source": "  return new DbCommand(db, db.databaseName + \".\" + DbCommand.SYSTEM_COMMAND_COLLECTION, QueryCommand.OPTS_NO_CURSOR_TIMEOUT | QueryCommand.OPTS_SLAVE, 0, -1, command_hash, null, options);",
            "missing": [
              {
                "startCol": 2,
                "endCol": 187
              },
              {
                "startCol": 27,
                "endCol": 48
              },
              {
                "startCol": 88,
                "endCol": 149
              },
              {
                "startCol": 154,
                "endCol": 156
              }
            ]
          }
        },
        "source": "var QueryCommand = require('./query_command').QueryCommand,\n  InsertCommand = require('./insert_command').InsertCommand,\n  inherits = require('util').inherits,\n  crypto = require('crypto');\n\n/**\n  Db Command\n**/\nvar DbCommand = exports.DbCommand = function(dbInstance, collectionName, queryOptions, numberToSkip, numberToReturn, query, returnFieldSelector, options) {\n  QueryCommand.call(this);\n  this.collectionName = collectionName;\n  this.queryOptions = queryOptions;\n  this.numberToSkip = numberToSkip;\n  this.numberToReturn = numberToReturn;\n  this.query = query;\n  this.returnFieldSelector = returnFieldSelector;\n  this.db = dbInstance;\n\n  // Make sure we don't get a null exception\n  options = options == null ? {} : options;\n  // Let us defined on a command basis if we want functions to be serialized or not\n  if(options['serializeFunctions'] != null && options['serializeFunctions']) {\n    this.serializeFunctions = true;\n  }\n};\n\ninherits(DbCommand, QueryCommand);\n\n// Constants\nDbCommand.SYSTEM_NAMESPACE_COLLECTION = \"system.namespaces\";\nDbCommand.SYSTEM_INDEX_COLLECTION = \"system.indexes\";\nDbCommand.SYSTEM_PROFILE_COLLECTION = \"system.profile\";\nDbCommand.SYSTEM_USER_COLLECTION = \"system.users\";\nDbCommand.SYSTEM_COMMAND_COLLECTION = \"$cmd\";\nDbCommand.SYSTEM_JS_COLLECTION = \"system.js\";\n\n// New commands\nDbCommand.NcreateIsMasterCommand = function(db, databaseName) {\n  return new DbCommand(db, databaseName + \".\" + DbCommand.SYSTEM_COMMAND_COLLECTION, QueryCommand.OPTS_NO_CURSOR_TIMEOUT, 0, -1, {'ismaster':1}, null);\n};\n\n// Provide constructors for different db commands\nDbCommand.createIsMasterCommand = function(db) {\n  return new DbCommand(db, db.databaseName + \".\" + DbCommand.SYSTEM_COMMAND_COLLECTION, QueryCommand.OPTS_NO_CURSOR_TIMEOUT, 0, -1, {'ismaster':1}, null);\n};\n\nDbCommand.createCollectionInfoCommand = function(db, selector) {\n  return new DbCommand(db, db.databaseName + \".\" + DbCommand.SYSTEM_NAMESPACE_COLLECTION, QueryCommand.OPTS_NO_CURSOR_TIMEOUT, 0, 0, selector, null);\n};\n\nDbCommand.createGetNonceCommand = function(db, options) {\n  return new DbCommand(db, db.databaseName + \".\" + DbCommand.SYSTEM_COMMAND_COLLECTION, QueryCommand.OPTS_NO_CURSOR_TIMEOUT, 0, -1, {'getnonce':1}, null);\n};\n\nDbCommand.createAuthenticationCommand = function(db, username, password, nonce, authdb) {\n  // Use node md5 generator\n  var md5 = crypto.createHash('md5');\n  // Generate keys used for authentication\n  md5.update(username + \":mongo:\" + password);\n  var hash_password = md5.digest('hex');\n  // Final key\n  md5 = crypto.createHash('md5');\n  md5.update(nonce + username + hash_password);\n  var key = md5.digest('hex');\n  // Creat selector\n  var selector = {'authenticate':1, 'user':username, 'nonce':nonce, 'key':key};\n  // Create db command\n  return new DbCommand(db, authdb + \".\" + DbCommand.SYSTEM_COMMAND_COLLECTION, QueryCommand.OPTS_NONE, 0, -1, selector, null);\n};\n\nDbCommand.createLogoutCommand = function(db) {\n  return new DbCommand(db, db.databaseName + \".\" + DbCommand.SYSTEM_COMMAND_COLLECTION, QueryCommand.OPTS_NO_CURSOR_TIMEOUT, 0, -1, {'logout':1}, null);\n};\n\nDbCommand.createCreateCollectionCommand = function(db, collectionName, options) {\n  var selector = {'create':collectionName};\n  // Modify the options to ensure correct behaviour\n  for(var name in options) {\n    if(options[name] != null && options[name].constructor != Function) selector[name] = options[name];\n  }\n  // Execute the command\n  return new DbCommand(db, db.databaseName + \".\" + DbCommand.SYSTEM_COMMAND_COLLECTION, QueryCommand.OPTS_NO_CURSOR_TIMEOUT, 0, -1, selector, null);\n};\n\nDbCommand.createDropCollectionCommand = function(db, collectionName) {\n  return new DbCommand(db, db.databaseName + \".\" + DbCommand.SYSTEM_COMMAND_COLLECTION, QueryCommand.OPTS_NO_CURSOR_TIMEOUT, 0, -1, {'drop':collectionName}, null);\n};\n\nDbCommand.createRenameCollectionCommand = function(db, fromCollectionName, toCollectionName) {\n  var renameCollection = db.databaseName + \".\" + fromCollectionName;\n  var toCollection = db.databaseName + \".\" + toCollectionName;\n  return new DbCommand(db, \"admin.\" + DbCommand.SYSTEM_COMMAND_COLLECTION, QueryCommand.OPTS_NO_CURSOR_TIMEOUT, 0, -1, {'renameCollection':renameCollection, 'to':toCollection}, null);\n};\n\nDbCommand.createGetLastErrorCommand = function(options, db) {\n\n  if (typeof db === 'undefined') {\n    db =  options;\n    options = {};\n  }\n  // Final command\n  var command = {'getlasterror':1};\n  // If we have an options Object let's merge in the fields (fsync/wtimeout/w)\n  if('object' === typeof options) {\n    for(var name in options) {\n      command[name] = options[name]\n    }\n  }\n\n  // Execute command\n  return new DbCommand(db, db.databaseName + \".\" + DbCommand.SYSTEM_COMMAND_COLLECTION, QueryCommand.OPTS_NO_CURSOR_TIMEOUT, 0, -1, command, null);\n};\n\nDbCommand.createGetLastStatusCommand = DbCommand.createGetLastErrorCommand;\n\nDbCommand.createGetPreviousErrorsCommand = function(db) {\n  return new DbCommand(db, db.databaseName + \".\" + DbCommand.SYSTEM_COMMAND_COLLECTION, QueryCommand.OPTS_NO_CURSOR_TIMEOUT, 0, -1, {'getpreverror':1}, null);\n};\n\nDbCommand.createResetErrorHistoryCommand = function(db) {\n  return new DbCommand(db, db.databaseName + \".\" + DbCommand.SYSTEM_COMMAND_COLLECTION, QueryCommand.OPTS_NO_CURSOR_TIMEOUT, 0, -1, {'reseterror':1}, null);\n};\n\nDbCommand.createCreateIndexCommand = function(db, collectionName, fieldOrSpec, options) {\n  var fieldHash = {};\n  var indexes = [];\n  var keys;\n\n  // Get all the fields accordingly\n  if (fieldOrSpec.constructor === String) {             // 'type'\n    indexes.push(fieldOrSpec + '_' + 1);\n    fieldHash[fieldOrSpec] = 1;\n  } else if (fieldOrSpec.constructor === Array) {       // [{location:'2d'}, ...]\n    fieldOrSpec.forEach(function(f) {\n      if (f.constructor === String) {                   // [{location:'2d'}, 'type']\n        indexes.push(f + '_' + 1);\n        fieldHash[f] = 1;\n      } else if (f.constructor === Array) {             // [['location', '2d'],['type', 1]]\n        indexes.push(f[0] + '_' + (f[1] || 1));\n        fieldHash[f[0]] = f[1] || 1;\n      } else if (f.constructor === Object) {            // [{location:'2d'}, {type:1}]\n        keys = Object.keys(f);\n        keys.forEach(function(k) {\n          indexes.push(k + '_' + f[k]);\n          fieldHash[k] = f[k];\n      });\n      } else {\n        // undefined\n      }\n    });\n  } else if (fieldOrSpec.constructor === Object) {  // {location:'2d', type:1}\n    keys = Object.keys(fieldOrSpec);\n    keys.forEach(function(key) {\n      indexes.push(key + '_' + fieldOrSpec[key]);\n      fieldHash[key] = fieldOrSpec[key];\n    });\n  }\n\n  // Generate the index name\n  var indexName = typeof options.name == 'string' ? options.name : indexes.join(\"_\");\n  // Build the selector\n  var selector = {'ns':(db.databaseName + \".\" + collectionName), 'key':fieldHash, 'name':indexName};\n\n  // Ensure we have a correct finalUnique\n  var finalUnique = options == null || 'object' === typeof options ? false : options;\n  // Set up options\n  options = options == null || typeof options == 'boolean' ? {} : options;\n\n  // Add all the options\n  var keys = Object.keys(options);\n  // Add all the fields to the selector\n  for(var i = 0; i < keys.length; i++) {\n    selector[keys[i]] = options[keys[i]];\n  }\n\n  // If we don't have the unique property set on the selector\n  if(selector['unique'] == null) selector['unique'] = finalUnique;\n  // Create the insert command for the index and return the document\n  return new InsertCommand(db, db.databaseName + \".\" + DbCommand.SYSTEM_INDEX_COLLECTION, false).add(selector);\n};\n\nDbCommand.logoutCommand = function(db, command_hash, options) {\n  var dbName = options != null && options['authdb'] != null ? options['authdb'] : db.databaseName;\n  // Create logout command\n  return new DbCommand(db, dbName + \".\" + DbCommand.SYSTEM_COMMAND_COLLECTION, QueryCommand.OPTS_NO_CURSOR_TIMEOUT, 0, -1, command_hash, null);\n}\n\nDbCommand.createDropIndexCommand = function(db, collectionName, indexName) {\n  return new DbCommand(db, db.databaseName + \".\" + DbCommand.SYSTEM_COMMAND_COLLECTION, QueryCommand.OPTS_NO_CURSOR_TIMEOUT, 0, -1, {'deleteIndexes':collectionName, 'index':indexName}, null);\n};\n\nDbCommand.createReIndexCommand = function(db, collectionName) {\n  return new DbCommand(db, db.databaseName + \".\" + DbCommand.SYSTEM_COMMAND_COLLECTION, QueryCommand.OPTS_NO_CURSOR_TIMEOUT, 0, -1, {'reIndex':collectionName}, null);\n};\n\nDbCommand.createDropDatabaseCommand = function(db) {\n  return new DbCommand(db, db.databaseName + \".\" + DbCommand.SYSTEM_COMMAND_COLLECTION, QueryCommand.OPTS_NO_CURSOR_TIMEOUT, 0, -1, {'dropDatabase':1}, null);\n};\n\nDbCommand.createDbCommand = function(db, command_hash, options) {\n  return new DbCommand(db, db.databaseName + \".\" + DbCommand.SYSTEM_COMMAND_COLLECTION, QueryCommand.OPTS_NO_CURSOR_TIMEOUT, 0, -1, command_hash, null, options);\n};\n\nDbCommand.createAdminDbCommand = function(db, command_hash) {\n  return new DbCommand(db, \"admin.\" + DbCommand.SYSTEM_COMMAND_COLLECTION, QueryCommand.OPTS_NO_CURSOR_TIMEOUT, 0, -1, command_hash, null);\n};\n\nDbCommand.createAdminDbCommandSlaveOk = function(db, command_hash) {\n  return new DbCommand(db, \"admin.\" + DbCommand.SYSTEM_COMMAND_COLLECTION, QueryCommand.OPTS_NO_CURSOR_TIMEOUT | QueryCommand.OPTS_SLAVE, 0, -1, command_hash, null);\n};\n\nDbCommand.createDbSlaveOkCommand = function(db, command_hash, options) {\n  return new DbCommand(db, db.databaseName + \".\" + DbCommand.SYSTEM_COMMAND_COLLECTION, QueryCommand.OPTS_NO_CURSOR_TIMEOUT | QueryCommand.OPTS_SLAVE, 0, -1, command_hash, null, options);\n};",
        "blocks": {
          "total": 40,
          "seen": 3,
          "missing": 37,
          "percentage": 0.075
        }
      },
      "hash": "74e27a7c0b95077af56a45e06ed85bcb"
    },
    "/Users/ck/coding/projects/node-mongodb-native/lib/mongodb/commands/query_command.js": {
      "stats": {
        "percentage": 0.7816091954022989,
        "lines": [
          {
            "lineno": 14
          },
          {
            "lineno": 15
          },
          {
            "lineno": 16
          },
          {
            "lineno": 17
          },
          {
            "lineno": 18
          },
          {
            "lineno": 24
          },
          {
            "lineno": 25
          },
          {
            "lineno": 26
          },
          {
            "lineno": 27
          },
          {
            "lineno": 28
          },
          {
            "lineno": 33
          },
          {
            "lineno": 49
          },
          {
            "lineno": 62
          },
          {
            "lineno": 63
          },
          {
            "lineno": 64
          },
          {
            "lineno": 65
          },
          {
            "lineno": 69
          },
          {
            "lineno": 70
          },
          {
            "lineno": 74
          },
          {
            "lineno": 75
          },
          {
            "lineno": 79
          },
          {
            "lineno": 81
          },
          {
            "lineno": 82
          },
          {
            "lineno": 84
          },
          {
            "lineno": 89
          },
          {
            "lineno": 90
          },
          {
            "lineno": 91
          },
          {
            "lineno": 93
          },
          {
            "lineno": 96
          },
          {
            "lineno": 97
          },
          {
            "lineno": 118
          },
          {
            "lineno": 124
          },
          {
            "lineno": 125
          },
          {
            "lineno": 126
          },
          {
            "lineno": 129
          },
          {
            "lineno": 196
          },
          {
            "lineno": 198
          },
          {
            "lineno": 215
          },
          {
            "lineno": 216
          },
          {
            "lineno": 217
          },
          {
            "lineno": 219
          },
          {
            "lineno": 220
          },
          {
            "lineno": 221
          },
          {
            "lineno": 222
          },
          {
            "lineno": 224
          },
          {
            "lineno": 226
          },
          {
            "lineno": 228
          },
          {
            "lineno": 230
          },
          {
            "lineno": 231
          },
          {
            "lineno": 234
          },
          {
            "lineno": 236
          },
          {
            "lineno": 239
          },
          {
            "lineno": 240
          },
          {
            "lineno": 241
          },
          {
            "lineno": 242
          },
          {
            "lineno": 244
          },
          {
            "lineno": 246
          }
        ],
        "missing": 57,
        "seen": 204,
        "seen_lines": [
          {
            "s": 1,
            "e": 2
          },
          {
            "s": 1,
            "e": 1
          },
          {
            "s": 2,
            "e": 2
          },
          {
            "s": 7,
            "e": 51
          },
          {
            "s": 8,
            "e": 8
          },
          {
            "s": 8,
            "e": 8
          },
          {
            "s": 11,
            "e": 12
          },
          {
            "s": 13,
            "e": 13
          },
          {
            "s": 22,
            "e": 22
          },
          {
            "s": 23,
            "e": 23
          },
          {
            "s": 33,
            "e": 33
          },
          {
            "s": 33,
            "e": 33
          },
          {
            "s": 33,
            "e": 33
          },
          {
            "s": 33,
            "e": 33
          },
          {
            "s": 35,
            "e": 35
          },
          {
            "s": 36,
            "e": 36
          },
          {
            "s": 37,
            "e": 37
          },
          {
            "s": 38,
            "e": 38
          },
          {
            "s": 41,
            "e": 41
          },
          {
            "s": 41,
            "e": 41
          },
          {
            "s": 41,
            "e": 41
          },
          {
            "s": 41,
            "e": 41
          },
          {
            "s": 41,
            "e": 41
          },
          {
            "s": 43,
            "e": 43
          },
          {
            "s": 44,
            "e": 44
          },
          {
            "s": 45,
            "e": 45
          },
          {
            "s": 48,
            "e": 48
          },
          {
            "s": 48,
            "e": 48
          },
          {
            "s": 53,
            "e": 53
          },
          {
            "s": 53,
            "e": 53
          },
          {
            "s": 55,
            "e": 55
          },
          {
            "s": 60,
            "e": 113
          },
          {
            "s": 113,
            "e": 251
          },
          {
            "s": 115,
            "e": 115
          },
          {
            "s": 117,
            "e": 117
          },
          {
            "s": 120,
            "e": 120
          },
          {
            "s": 120,
            "e": 120
          },
          {
            "s": 120,
            "e": 120
          },
          {
            "s": 120,
            "e": 120
          },
          {
            "s": 120,
            "e": 120
          },
          {
            "s": 120,
            "e": 120
          },
          {
            "s": 120,
            "e": 120
          },
          {
            "s": 120,
            "e": 120
          },
          {
            "s": 120,
            "e": 120
          },
          {
            "s": 120,
            "e": 120
          },
          {
            "s": 124,
            "e": 124
          },
          {
            "s": 124,
            "e": 124
          },
          {
            "s": 128,
            "e": 128
          },
          {
            "s": 133,
            "e": 133
          },
          {
            "s": 134,
            "e": 134
          },
          {
            "s": 136,
            "e": 136
          },
          {
            "s": 136,
            "e": 136
          },
          {
            "s": 136,
            "e": 136
          },
          {
            "s": 136,
            "e": 136
          },
          {
            "s": 136,
            "e": 136
          },
          {
            "s": 136,
            "e": 136
          },
          {
            "s": 137,
            "e": 137
          },
          {
            "s": 137,
            "e": 137
          },
          {
            "s": 137,
            "e": 137
          },
          {
            "s": 137,
            "e": 137
          },
          {
            "s": 137,
            "e": 137
          },
          {
            "s": 137,
            "e": 137
          },
          {
            "s": 138,
            "e": 138
          },
          {
            "s": 138,
            "e": 138
          },
          {
            "s": 138,
            "e": 138
          },
          {
            "s": 138,
            "e": 138
          },
          {
            "s": 138,
            "e": 138
          },
          {
            "s": 138,
            "e": 138
          },
          {
            "s": 139,
            "e": 139
          },
          {
            "s": 139,
            "e": 139
          },
          {
            "s": 139,
            "e": 139
          },
          {
            "s": 141,
            "e": 141
          },
          {
            "s": 141,
            "e": 141
          },
          {
            "s": 141,
            "e": 141
          },
          {
            "s": 143,
            "e": 143
          },
          {
            "s": 143,
            "e": 143
          },
          {
            "s": 143,
            "e": 143
          },
          {
            "s": 143,
            "e": 143
          },
          {
            "s": 143,
            "e": 143
          },
          {
            "s": 144,
            "e": 144
          },
          {
            "s": 144,
            "e": 144
          },
          {
            "s": 144,
            "e": 144
          },
          {
            "s": 144,
            "e": 144
          },
          {
            "s": 144,
            "e": 144
          },
          {
            "s": 145,
            "e": 145
          },
          {
            "s": 145,
            "e": 145
          },
          {
            "s": 145,
            "e": 145
          },
          {
            "s": 145,
            "e": 145
          },
          {
            "s": 145,
            "e": 145
          },
          {
            "s": 146,
            "e": 146
          },
          {
            "s": 146,
            "e": 146
          },
          {
            "s": 148,
            "e": 148
          },
          {
            "s": 148,
            "e": 148
          },
          {
            "s": 148,
            "e": 148
          },
          {
            "s": 150,
            "e": 150
          },
          {
            "s": 150,
            "e": 150
          },
          {
            "s": 151,
            "e": 151
          },
          {
            "s": 151,
            "e": 151
          },
          {
            "s": 152,
            "e": 152
          },
          {
            "s": 152,
            "e": 152
          },
          {
            "s": 153,
            "e": 153
          },
          {
            "s": 153,
            "e": 153
          },
          {
            "s": 155,
            "e": 155
          },
          {
            "s": 155,
            "e": 155
          },
          {
            "s": 155,
            "e": 155
          },
          {
            "s": 155,
            "e": 155
          },
          {
            "s": 155,
            "e": 155
          },
          {
            "s": 156,
            "e": 156
          },
          {
            "s": 156,
            "e": 156
          },
          {
            "s": 156,
            "e": 156
          },
          {
            "s": 156,
            "e": 156
          },
          {
            "s": 156,
            "e": 156
          },
          {
            "s": 157,
            "e": 157
          },
          {
            "s": 157,
            "e": 157
          },
          {
            "s": 157,
            "e": 157
          },
          {
            "s": 157,
            "e": 157
          },
          {
            "s": 157,
            "e": 157
          },
          {
            "s": 158,
            "e": 158
          },
          {
            "s": 158,
            "e": 158
          },
          {
            "s": 160,
            "e": 160
          },
          {
            "s": 160,
            "e": 160
          },
          {
            "s": 160,
            "e": 160
          },
          {
            "s": 163,
            "e": 163
          },
          {
            "s": 163,
            "e": 163
          },
          {
            "s": 163,
            "e": 163
          },
          {
            "s": 163,
            "e": 163
          },
          {
            "s": 163,
            "e": 163
          },
          {
            "s": 164,
            "e": 164
          },
          {
            "s": 164,
            "e": 164
          },
          {
            "s": 164,
            "e": 164
          },
          {
            "s": 164,
            "e": 164
          },
          {
            "s": 164,
            "e": 164
          },
          {
            "s": 165,
            "e": 165
          },
          {
            "s": 165,
            "e": 165
          },
          {
            "s": 165,
            "e": 165
          },
          {
            "s": 165,
            "e": 165
          },
          {
            "s": 165,
            "e": 165
          },
          {
            "s": 166,
            "e": 166
          },
          {
            "s": 166,
            "e": 166
          },
          {
            "s": 168,
            "e": 168
          },
          {
            "s": 168,
            "e": 168
          },
          {
            "s": 168,
            "e": 168
          },
          {
            "s": 171,
            "e": 171
          },
          {
            "s": 171,
            "e": 171
          },
          {
            "s": 171,
            "e": 171
          },
          {
            "s": 171,
            "e": 171
          },
          {
            "s": 171,
            "e": 171
          },
          {
            "s": 172,
            "e": 172
          },
          {
            "s": 172,
            "e": 172
          },
          {
            "s": 172,
            "e": 172
          },
          {
            "s": 175,
            "e": 175
          },
          {
            "s": 175,
            "e": 175
          },
          {
            "s": 175,
            "e": 175
          },
          {
            "s": 175,
            "e": 175
          },
          {
            "s": 175,
            "e": 175
          },
          {
            "s": 176,
            "e": 176
          },
          {
            "s": 176,
            "e": 176
          },
          {
            "s": 176,
            "e": 176
          },
          {
            "s": 176,
            "e": 176
          },
          {
            "s": 176,
            "e": 176
          },
          {
            "s": 177,
            "e": 177
          },
          {
            "s": 177,
            "e": 177
          },
          {
            "s": 177,
            "e": 177
          },
          {
            "s": 177,
            "e": 177
          },
          {
            "s": 177,
            "e": 177
          },
          {
            "s": 178,
            "e": 178
          },
          {
            "s": 178,
            "e": 178
          },
          {
            "s": 180,
            "e": 180
          },
          {
            "s": 180,
            "e": 180
          },
          {
            "s": 180,
            "e": 180
          },
          {
            "s": 183,
            "e": 183
          },
          {
            "s": 183,
            "e": 183
          },
          {
            "s": 183,
            "e": 183
          },
          {
            "s": 183,
            "e": 183
          },
          {
            "s": 183,
            "e": 183
          },
          {
            "s": 184,
            "e": 184
          },
          {
            "s": 184,
            "e": 184
          },
          {
            "s": 184,
            "e": 184
          },
          {
            "s": 184,
            "e": 184
          },
          {
            "s": 184,
            "e": 184
          },
          {
            "s": 185,
            "e": 185
          },
          {
            "s": 185,
            "e": 185
          },
          {
            "s": 185,
            "e": 185
          },
          {
            "s": 185,
            "e": 185
          },
          {
            "s": 185,
            "e": 185
          },
          {
            "s": 186,
            "e": 186
          },
          {
            "s": 186,
            "e": 186
          },
          {
            "s": 188,
            "e": 188
          },
          {
            "s": 188,
            "e": 188
          },
          {
            "s": 188,
            "e": 188
          },
          {
            "s": 191,
            "e": 192
          },
          {
            "s": 192,
            "e": 192
          },
          {
            "s": 195,
            "e": 195
          },
          {
            "s": 201,
            "e": 201
          },
          {
            "s": 201,
            "e": 201
          },
          {
            "s": 201,
            "e": 201
          },
          {
            "s": 201,
            "e": 201
          },
          {
            "s": 201,
            "e": 201
          },
          {
            "s": 205,
            "e": 205
          },
          {
            "s": 205,
            "e": 205
          },
          {
            "s": 205,
            "e": 205
          },
          {
            "s": 205,
            "e": 205
          },
          {
            "s": 205,
            "e": 205
          },
          {
            "s": 205,
            "e": 205
          },
          {
            "s": 206,
            "e": 206
          },
          {
            "s": 206,
            "e": 206
          },
          {
            "s": 206,
            "e": 206
          },
          {
            "s": 206,
            "e": 206
          },
          {
            "s": 206,
            "e": 206
          },
          {
            "s": 206,
            "e": 206
          },
          {
            "s": 207,
            "e": 207
          },
          {
            "s": 207,
            "e": 207
          },
          {
            "s": 207,
            "e": 207
          },
          {
            "s": 207,
            "e": 207
          },
          {
            "s": 207,
            "e": 207
          },
          {
            "s": 207,
            "e": 207
          },
          {
            "s": 208,
            "e": 208
          },
          {
            "s": 208,
            "e": 208
          },
          {
            "s": 208,
            "e": 208
          },
          {
            "s": 210,
            "e": 210
          },
          {
            "s": 210,
            "e": 210
          },
          {
            "s": 210,
            "e": 210
          },
          {
            "s": 210,
            "e": 210
          },
          {
            "s": 212,
            "e": 212
          },
          {
            "s": 212,
            "e": 212
          },
          {
            "s": 212,
            "e": 212
          },
          {
            "s": 215,
            "e": 215
          },
          {
            "s": 215,
            "e": 215
          },
          {
            "s": 228,
            "e": 228
          },
          {
            "s": 228,
            "e": 228
          },
          {
            "s": 250,
            "e": 250
          },
          {
            "s": 254,
            "e": 254
          },
          {
            "s": 255,
            "e": 255
          },
          {
            "s": 256,
            "e": 256
          },
          {
            "s": 257,
            "e": 257
          },
          {
            "s": 258,
            "e": 258
          },
          {
            "s": 259,
            "e": 259
          },
          {
            "s": 260,
            "e": 260
          },
          {
            "s": 261,
            "e": 261
          }
        ],
        "total": 261,
        "coverage": {
          "14": {
            "partial": false,
            "source": "    object_size = object[0] | object[1] << 8 | object[2] << 16 | object[3] << 24;",
            "missing": [
              {
                "startCol": 4,
                "endCol": 81
              },
              {
                "startCol": 18,
                "endCol": 44
              },
              {
                "startCol": 30,
                "endCol": 44
              },
              {
                "startCol": 47,
                "endCol": 62
              },
              {
                "startCol": 65,
                "endCol": 80
              }
            ]
          },
          "15": {
            "partial": false,
            "source": "    if(object_size != object.length) {",
            "missing": [
              {
                "startCol": 7,
                "endCol": 18
              }
            ]
          },
          "16": {
            "partial": false,
            "source": "      var error = new Error(\"query selector raw message size does not match message header size [\" + object.length + \"] != [\" + object_size + \"]\");",
            "missing": [
              {
                "startCol": 6,
                "endCol": 147
              },
              {
                "startCol": 28,
                "endCol": 114
              },
              {
                "startCol": 128,
                "endCol": 139
              }
            ]
          },
          "17": {
            "partial": false,
            "source": "      error.name = 'MongoError';",
            "missing": [
              {
                "startCol": 6,
                "endCol": 32
              }
            ]
          },
          "18": {
            "partial": false,
            "source": "      throw error;",
            "missing": [
              {
                "startCol": 6,
                "endCol": 18
              }
            ]
          },
          "24": {
            "partial": false,
            "source": "    object_size = object[0] | object[1] << 8 | object[2] << 16 | object[3] << 24;",
            "missing": [
              {
                "startCol": 4,
                "endCol": 81
              },
              {
                "startCol": 18,
                "endCol": 44
              },
              {
                "startCol": 30,
                "endCol": 44
              },
              {
                "startCol": 47,
                "endCol": 62
              },
              {
                "startCol": 65,
                "endCol": 80
              }
            ]
          },
          "25": {
            "partial": false,
            "source": "    if(object_size != object.length) {",
            "missing": [
              {
                "startCol": 7,
                "endCol": 18
              }
            ]
          },
          "26": {
            "partial": false,
            "source": "      var error = new Error(\"query fields raw message size does not match message header size [\" + object.length + \"] != [\" + object_size + \"]\");",
            "missing": [
              {
                "startCol": 6,
                "endCol": 145
              },
              {
                "startCol": 28,
                "endCol": 112
              },
              {
                "startCol": 126,
                "endCol": 137
              }
            ]
          },
          "27": {
            "partial": false,
            "source": "      error.name = 'MongoError';",
            "missing": [
              {
                "startCol": 6,
                "endCol": 32
              }
            ]
          },
          "28": {
            "partial": false,
            "source": "      throw error;",
            "missing": [
              {
                "startCol": 6,
                "endCol": 18
              }
            ]
          },
          "33": {
            "partial": true,
            "source": "  options = options == null ? {} : options;",
            "missing": [
              {
                "startCol": 35,
                "endCol": 42
              }
            ]
          },
          "49": {
            "partial": false,
            "source": "    this.serializeFunctions = true;",
            "missing": [
              {
                "startCol": 4,
                "endCol": 35
              }
            ]
          },
          "62": {
            "partial": false,
            "source": "  if(readPreference == true) {",
            "missing": [
              {
                "startCol": 5,
                "endCol": 19
              }
            ]
          },
          "63": {
            "partial": false,
            "source": "    readPreference = 'secondaryPreferred';",
            "missing": [
              {
                "startCol": 4,
                "endCol": 42
              }
            ]
          },
          "64": {
            "partial": false,
            "source": "  } else if(readPreference == 'false') {",
            "missing": [
              {
                "startCol": 12,
                "endCol": 26
              }
            ]
          },
          "65": {
            "partial": false,
            "source": "    readPreference = 'primary';",
            "missing": [
              {
                "startCol": 4,
                "endCol": 31
              }
            ]
          },
          "69": {
            "partial": false,
            "source": "  if(readPreference != false && readPreference != 'primary') {",
            "missing": [
              {
                "startCol": 5,
                "endCol": 19
              },
              {
                "startCol": 32,
                "endCol": 46
              }
            ]
          },
          "70": {
            "partial": false,
            "source": "    this.queryOptions |= QueryCommand.OPTS_SLAVE;",
            "missing": [
              {
                "startCol": 4,
                "endCol": 49
              }
            ]
          },
          "74": {
            "partial": false,
            "source": "  if((readPreference != null || tags != null) && this.query['$query'] == null) {",
            "missing": [
              {
                "startCol": 5,
                "endCol": 45
              },
              {
                "startCol": 6,
                "endCol": 20
              },
              {
                "startCol": 32,
                "endCol": 36
              },
              {
                "startCol": 49,
                "endCol": 77
              }
            ]
          },
          "75": {
            "partial": false,
            "source": "    this.query = {'$query': this.query};",
            "missing": [
              {
                "startCol": 4,
                "endCol": 40
              }
            ]
          },
          "79": {
            "partial": false,
            "source": "  if(readPreference == null && tags == null) {",
            "missing": [
              {
                "startCol": 5,
                "endCol": 19
              },
              {
                "startCol": 31,
                "endCol": 35
              }
            ]
          },
          "81": {
            "partial": false,
            "source": "    if(this.queryOptions & QueryCommand.OPTS_SLAVE) {",
            "missing": [
              {
                "startCol": 7,
                "endCol": 50
              }
            ]
          },
          "82": {
            "partial": false,
            "source": "      this.query['$readPreference'] = {mode: 'secondary'}",
            "missing": [
              {}
            ]
          },
          "83": {
            "partial": false,
            "source": "    } else {",
            "missing": [
              {}
            ]
          },
          "84": {
            "partial": false,
            "source": "      this.query['$readPreference'] = {mode: 'primary'}",
            "missing": [
              {}
            ]
          },
          "85": {
            "partial": false,
            "source": "    }",
            "missing": [
              {}
            ]
          },
          "89": {
            "partial": false,
            "source": "  if(typeof readPreference == 'object' && readPreference['_type'] == 'ReadPreference') {",
            "missing": [
              {
                "startCol": 5,
                "endCol": 26
              },
              {
                "startCol": 12,
                "endCol": 26
              },
              {
                "startCol": 42,
                "endCol": 85
              }
            ]
          },
          "90": {
            "partial": false,
            "source": "    this.query['$readPreference'] = readPreference.toObject();",
            "missing": [
              {
                "startCol": 4,
                "endCol": 62
              },
              {
                "startCol": 36,
                "endCol": 61
              }
            ]
          },
          "91": {
            "partial": false,
            "source": "  } else if(readPreference != null) {",
            "missing": [
              {
                "startCol": 12,
                "endCol": 26
              }
            ]
          },
          "93": {
            "partial": false,
            "source": "    this.query['$readPreference'] = {mode: readPreference};",
            "missing": [
              {
                "startCol": 4,
                "endCol": 59
              }
            ]
          },
          "96": {
            "partial": false,
            "source": "    if(tags != null) {",
            "missing": [
              {
                "startCol": 7,
                "endCol": 11
              }
            ]
          },
          "97": {
            "partial": false,
            "source": "      this.query['$readPreference']['tags'] = tags;",
            "missing": [
              {
                "startCol": 6,
                "endCol": 51
              }
            ]
          },
          "118": {
            "partial": false,
            "source": "    totalLengthOfCommand = 4 + Buffer.byteLength(this.collectionName) + 1 + 4 + 4 + this.query.length + (4 * 4);",
            "missing": [
              {
                "startCol": 4,
                "endCol": 112
              },
              {
                "startCol": 27,
                "endCol": 69
              },
              {
                "startCol": 31,
                "endCol": 69
              },
              {
                "startCol": 104,
                "endCol": 111
              }
            ]
          },
          "124": {
            "partial": true,
            "source": "  if(this.returnFieldSelector != null && !(Buffer.isBuffer(this.returnFieldSelector)))  {",
            "missing": [
              {
                "startCol": 41,
                "endCol": 85
              },
              {
                "startCol": 42,
                "endCol": 85
              }
            ]
          },
          "125": {
            "partial": false,
            "source": "    if(Object.keys(this.returnFieldSelector).length > 0) {",
            "missing": [
              {
                "startCol": 7,
                "endCol": 55
              },
              {
                "startCol": 18,
                "endCol": 44
              }
            ]
          },
          "126": {
            "partial": false,
            "source": "      totalLengthOfCommand += this.db.bson.calculateObjectSize(this.returnFieldSelector, this.serializeFunctions, true);",
            "missing": [
              {
                "startCol": 6,
                "endCol": 120
              },
              {
                "startCol": 30,
                "endCol": 119
              }
            ]
          },
          "129": {
            "partial": false,
            "source": "    totalLengthOfCommand += this.returnFieldSelector.length;",
            "missing": [
              {
                "startCol": 4,
                "endCol": 60
              }
            ]
          },
          "196": {
            "partial": false,
            "source": "    documentLength = object.length;",
            "missing": [
              {
                "startCol": 4,
                "endCol": 35
              }
            ]
          },
          "198": {
            "partial": false,
            "source": "    object.copy(_command, _index);",
            "missing": [
              {
                "startCol": 4,
                "endCol": 33
              }
            ]
          },
          "215": {
            "partial": true,
            "source": "  if(this.returnFieldSelector != null && !(Buffer.isBuffer(this.returnFieldSelector)))  {",
            "missing": [
              {
                "startCol": 41,
                "endCol": 85
              },
              {
                "startCol": 42,
                "endCol": 85
              }
            ]
          },
          "216": {
            "partial": false,
            "source": "    if(Object.keys(this.returnFieldSelector).length > 0) {",
            "missing": [
              {
                "startCol": 7,
                "endCol": 55
              },
              {
                "startCol": 18,
                "endCol": 44
              }
            ]
          },
          "217": {
            "partial": false,
            "source": "      var documentLength = this.db.bson.serializeWithBufferAndIndex(this.returnFieldSelector, this.checkKeys, _command, _index, this.serializeFunctions) - _index + 1;",
            "missing": [
              {
                "startCol": 6,
                "endCol": 166
              },
              {
                "startCol": 27,
                "endCol": 152
              },
              {
                "startCol": 155,
                "endCol": 161
              }
            ]
          },
          "219": {
            "partial": false,
            "source": "      _command[_index + 3] = (documentLength >> 24) & 0xff;",
            "missing": [
              {
                "startCol": 6,
                "endCol": 59
              },
              {
                "startCol": 15,
                "endCol": 21
              },
              {
                "startCol": 29,
                "endCol": 51
              },
              {
                "startCol": 30,
                "endCol": 44
              }
            ]
          },
          "220": {
            "partial": false,
            "source": "      _command[_index + 2] = (documentLength >> 16) & 0xff;",
            "missing": [
              {
                "startCol": 6,
                "endCol": 59
              },
              {
                "startCol": 15,
                "endCol": 21
              },
              {
                "startCol": 29,
                "endCol": 51
              },
              {
                "startCol": 30,
                "endCol": 44
              }
            ]
          },
          "221": {
            "partial": false,
            "source": "      _command[_index + 1] = (documentLength >> 8) & 0xff;",
            "missing": [
              {
                "startCol": 6,
                "endCol": 58
              },
              {
                "startCol": 15,
                "endCol": 21
              },
              {
                "startCol": 29,
                "endCol": 50
              },
              {
                "startCol": 30,
                "endCol": 44
              }
            ]
          },
          "222": {
            "partial": false,
            "source": "      _command[_index] = documentLength & 0xff;",
            "missing": [
              {
                "startCol": 6,
                "endCol": 47
              },
              {
                "startCol": 25,
                "endCol": 39
              }
            ]
          },
          "224": {
            "partial": false,
            "source": "      _index = _index + documentLength;",
            "missing": [
              {
                "startCol": 6,
                "endCol": 39
              },
              {
                "startCol": 15,
                "endCol": 21
              },
              {
                "startCol": 24,
                "endCol": 38
              }
            ]
          },
          "226": {
            "partial": false,
            "source": "      _command[_index - 1] = 0;",
            "missing": [
              {
                "startCol": 6,
                "endCol": 31
              },
              {
                "startCol": 15,
                "endCol": 21
              }
            ]
          },
          "228": {
            "partial": true,
            "source": "  } if(this.returnFieldSelector != null && Buffer.isBuffer(this.returnFieldSelector))  {",
            "missing": [
              {
                "startCol": 43,
                "endCol": 84
              }
            ]
          },
          "230": {
            "partial": false,
            "source": "    var documentLength = 0",
            "missing": [
              {}
            ]
          },
          "231": {
            "partial": false,
            "source": "    var object = this.returnFieldSelector;",
            "missing": [
              {},
              {
                "startCol": 4,
                "endCol": 42
              }
            ]
          },
          "234": {
            "partial": false,
            "source": "    documentLength = object.length;",
            "missing": [
              {
                "startCol": 4,
                "endCol": 35
              }
            ]
          },
          "236": {
            "partial": false,
            "source": "    object.copy(_command, _index);",
            "missing": [
              {
                "startCol": 4,
                "endCol": 33
              }
            ]
          },
          "239": {
            "partial": false,
            "source": "    _command[_index + 3] = (documentLength >> 24) & 0xff;",
            "missing": [
              {
                "startCol": 4,
                "endCol": 57
              },
              {
                "startCol": 13,
                "endCol": 19
              },
              {
                "startCol": 27,
                "endCol": 49
              },
              {
                "startCol": 28,
                "endCol": 42
              }
            ]
          },
          "240": {
            "partial": false,
            "source": "    _command[_index + 2] = (documentLength >> 16) & 0xff;",
            "missing": [
              {
                "startCol": 4,
                "endCol": 57
              },
              {
                "startCol": 13,
                "endCol": 19
              },
              {
                "startCol": 27,
                "endCol": 49
              },
              {
                "startCol": 28,
                "endCol": 42
              }
            ]
          },
          "241": {
            "partial": false,
            "source": "    _command[_index + 1] = (documentLength >> 8) & 0xff;",
            "missing": [
              {
                "startCol": 4,
                "endCol": 56
              },
              {
                "startCol": 13,
                "endCol": 19
              },
              {
                "startCol": 27,
                "endCol": 48
              },
              {
                "startCol": 28,
                "endCol": 42
              }
            ]
          },
          "242": {
            "partial": false,
            "source": "    _command[_index] = documentLength & 0xff;",
            "missing": [
              {
                "startCol": 4,
                "endCol": 45
              },
              {
                "startCol": 23,
                "endCol": 37
              }
            ]
          },
          "244": {
            "partial": false,
            "source": "    _index = _index + documentLength;",
            "missing": [
              {
                "startCol": 4,
                "endCol": 37
              },
              {
                "startCol": 13,
                "endCol": 19
              },
              {
                "startCol": 22,
                "endCol": 36
              }
            ]
          },
          "246": {
            "partial": false,
            "source": "    _command[_index - 1] = 0;",
            "missing": [
              {
                "startCol": 4,
                "endCol": 29
              },
              {
                "startCol": 13,
                "endCol": 19
              }
            ]
          }
        },
        "source": "var BaseCommand = require('./base_command').BaseCommand,\n  inherits = require('util').inherits;\n\n/**\n  Insert Document Command\n**/\nvar QueryCommand = exports.QueryCommand = function(db, collectionName, queryOptions, numberToSkip, numberToReturn, query, returnFieldSelector, options) {\n  BaseCommand.call(this);\n\n  // Validate correctness off the selector\n  var object = query,\n    object_size;\n  if(Buffer.isBuffer(object)) {\n    object_size = object[0] | object[1] << 8 | object[2] << 16 | object[3] << 24;\n    if(object_size != object.length) {\n      var error = new Error(\"query selector raw message size does not match message header size [\" + object.length + \"] != [\" + object_size + \"]\");\n      error.name = 'MongoError';\n      throw error;\n    }\n  }\n\n  object = returnFieldSelector;\n  if(Buffer.isBuffer(object)) {\n    object_size = object[0] | object[1] << 8 | object[2] << 16 | object[3] << 24;\n    if(object_size != object.length) {\n      var error = new Error(\"query fields raw message size does not match message header size [\" + object.length + \"] != [\" + object_size + \"]\");\n      error.name = 'MongoError';\n      throw error;\n    }\n  }\n\n  // Make sure we don't get a null exception\n  options = options == null ? {} : options;\n  // Set up options\n  this.collectionName = collectionName;\n  this.queryOptions = queryOptions;\n  this.numberToSkip = numberToSkip;\n  this.numberToReturn = numberToReturn;\n\n  // Ensure we have no null query\n  query = query == null ? {} : query;\n  // Wrap query in the $query parameter so we can add read preferences for mongos\n  this.query = query;\n  this.returnFieldSelector = returnFieldSelector;\n  this.db = db;\n\n  // Let us defined on a command basis if we want functions to be serialized or not\n  if(options['serializeFunctions'] != null && options['serializeFunctions']) {\n    this.serializeFunctions = true;\n  }\n};\n\ninherits(QueryCommand, BaseCommand);\n\nQueryCommand.OP_QUERY = 2004;\n\n/*\n * Adds the read prefrence to the current command\n */\nQueryCommand.prototype.setMongosReadPreference = function(readPreference, tags) {\n  // If we have readPreference set to true set to secondary prefered\n  if(readPreference == true) {\n    readPreference = 'secondaryPreferred';\n  } else if(readPreference == 'false') {\n    readPreference = 'primary';\n  }\n\n  // Force the slave ok flag to be set if we are not using primary read preference\n  if(readPreference != false && readPreference != 'primary') {\n    this.queryOptions |= QueryCommand.OPTS_SLAVE;\n  }\n\n  // Backward compatibility, ensure $query only set on read preference so 1.8.X works\n  if((readPreference != null || tags != null) && this.query['$query'] == null) {\n    this.query = {'$query': this.query};\n  }\n\n  // If we have no readPreference set and no tags, check if the slaveOk bit is set\n  if(readPreference == null && tags == null) {\n    // If we have a slaveOk bit set the read preference for MongoS\n    if(this.queryOptions & QueryCommand.OPTS_SLAVE) {\n      this.query['$readPreference'] = {mode: 'secondary'}\n    } else {\n      this.query['$readPreference'] = {mode: 'primary'}\n    }\n  }\n\n  // Build read preference object\n  if(typeof readPreference == 'object' && readPreference['_type'] == 'ReadPreference') {\n    this.query['$readPreference'] = readPreference.toObject();\n  } else if(readPreference != null) {\n    // Add the read preference\n    this.query['$readPreference'] = {mode: readPreference};\n\n    // If we have tags let's add them\n    if(tags != null) {\n      this.query['$readPreference']['tags'] = tags;\n    }\n  }\n}\n\n/*\nstruct {\n    MsgHeader header;                 // standard message header\n    int32     opts;                   // query options.  See below for details.\n    cstring   fullCollectionName;     // \"dbname.collectionname\"\n    int32     numberToSkip;           // number of documents to skip when returning results\n    int32     numberToReturn;         // number of documents to return in the first OP_REPLY\n    BSON      query ;                 // query object.  See below for details.\n  [ BSON      returnFieldSelector; ]  // OPTIONAL : selector indicating the fields to return.  See below for details.\n}\n*/\nQueryCommand.prototype.toBinary = function() {\n  // Total length of the command\n  var totalLengthOfCommand = 0;\n  // Calculate total length of the document\n  if(Buffer.isBuffer(this.query)) {\n    totalLengthOfCommand = 4 + Buffer.byteLength(this.collectionName) + 1 + 4 + 4 + this.query.length + (4 * 4);\n  } else {\n    totalLengthOfCommand = 4 + Buffer.byteLength(this.collectionName) + 1 + 4 + 4 + this.db.bson.calculateObjectSize(this.query, this.serializeFunctions, true) + (4 * 4);\n  }\n\n  // Calculate extra fields size\n  if(this.returnFieldSelector != null && !(Buffer.isBuffer(this.returnFieldSelector)))  {\n    if(Object.keys(this.returnFieldSelector).length > 0) {\n      totalLengthOfCommand += this.db.bson.calculateObjectSize(this.returnFieldSelector, this.serializeFunctions, true);\n    }\n  } else if(Buffer.isBuffer(this.returnFieldSelector)) {\n    totalLengthOfCommand += this.returnFieldSelector.length;\n  }\n\n  // Let's build the single pass buffer command\n  var _index = 0;\n  var _command = new Buffer(totalLengthOfCommand);\n  // Write the header information to the buffer\n  _command[_index + 3] = (totalLengthOfCommand >> 24) & 0xff;\n  _command[_index + 2] = (totalLengthOfCommand >> 16) & 0xff;\n  _command[_index + 1] = (totalLengthOfCommand >> 8) & 0xff;\n  _command[_index] = totalLengthOfCommand & 0xff;\n  // Adjust index\n  _index = _index + 4;\n  // Write the request ID\n  _command[_index + 3] = (this.requestId >> 24) & 0xff;\n  _command[_index + 2] = (this.requestId >> 16) & 0xff;\n  _command[_index + 1] = (this.requestId >> 8) & 0xff;\n  _command[_index] = this.requestId & 0xff;\n  // Adjust index\n  _index = _index + 4;\n  // Write zero\n  _command[_index++] = 0;\n  _command[_index++] = 0;\n  _command[_index++] = 0;\n  _command[_index++] = 0;\n  // Write the op_code for the command\n  _command[_index + 3] = (QueryCommand.OP_QUERY >> 24) & 0xff;\n  _command[_index + 2] = (QueryCommand.OP_QUERY >> 16) & 0xff;\n  _command[_index + 1] = (QueryCommand.OP_QUERY >> 8) & 0xff;\n  _command[_index] = QueryCommand.OP_QUERY & 0xff;\n  // Adjust index\n  _index = _index + 4;\n\n  // Write the query options\n  _command[_index + 3] = (this.queryOptions >> 24) & 0xff;\n  _command[_index + 2] = (this.queryOptions >> 16) & 0xff;\n  _command[_index + 1] = (this.queryOptions >> 8) & 0xff;\n  _command[_index] = this.queryOptions & 0xff;\n  // Adjust index\n  _index = _index + 4;\n\n  // Write the collection name to the command\n  _index = _index + _command.write(this.collectionName, _index, 'utf8') + 1;\n  _command[_index - 1] = 0;\n\n  // Write the number of documents to skip\n  _command[_index + 3] = (this.numberToSkip >> 24) & 0xff;\n  _command[_index + 2] = (this.numberToSkip >> 16) & 0xff;\n  _command[_index + 1] = (this.numberToSkip >> 8) & 0xff;\n  _command[_index] = this.numberToSkip & 0xff;\n  // Adjust index\n  _index = _index + 4;\n\n  // Write the number of documents to return\n  _command[_index + 3] = (this.numberToReturn >> 24) & 0xff;\n  _command[_index + 2] = (this.numberToReturn >> 16) & 0xff;\n  _command[_index + 1] = (this.numberToReturn >> 8) & 0xff;\n  _command[_index] = this.numberToReturn & 0xff;\n  // Adjust index\n  _index = _index + 4;\n\n  // Document binary length\n  var documentLength = 0\n  var object = this.query;\n\n  // Serialize the selector\n  if(Buffer.isBuffer(object)) {\n    documentLength = object.length;\n    // Copy the data into the current buffer\n    object.copy(_command, _index);\n  } else {\n    // Serialize the document straight to the buffer\n    documentLength = this.db.bson.serializeWithBufferAndIndex(object, this.checkKeys, _command, _index, this.serializeFunctions) - _index + 1;\n  }\n\n  // Write the length to the document\n  _command[_index + 3] = (documentLength >> 24) & 0xff;\n  _command[_index + 2] = (documentLength >> 16) & 0xff;\n  _command[_index + 1] = (documentLength >> 8) & 0xff;\n  _command[_index] = documentLength & 0xff;\n  // Update index in buffer\n  _index = _index + documentLength;\n  // Add terminating 0 for the object\n  _command[_index - 1] = 0;\n\n  // Push field selector if available\n  if(this.returnFieldSelector != null && !(Buffer.isBuffer(this.returnFieldSelector)))  {\n    if(Object.keys(this.returnFieldSelector).length > 0) {\n      var documentLength = this.db.bson.serializeWithBufferAndIndex(this.returnFieldSelector, this.checkKeys, _command, _index, this.serializeFunctions) - _index + 1;\n      // Write the length to the document\n      _command[_index + 3] = (documentLength >> 24) & 0xff;\n      _command[_index + 2] = (documentLength >> 16) & 0xff;\n      _command[_index + 1] = (documentLength >> 8) & 0xff;\n      _command[_index] = documentLength & 0xff;\n      // Update index in buffer\n      _index = _index + documentLength;\n      // Add terminating 0 for the object\n      _command[_index - 1] = 0;\n    }\n  } if(this.returnFieldSelector != null && Buffer.isBuffer(this.returnFieldSelector))  {\n    // Document binary length\n    var documentLength = 0\n    var object = this.returnFieldSelector;\n\n    // Serialize the selector\n    documentLength = object.length;\n    // Copy the data into the current buffer\n    object.copy(_command, _index);\n\n    // Write the length to the document\n    _command[_index + 3] = (documentLength >> 24) & 0xff;\n    _command[_index + 2] = (documentLength >> 16) & 0xff;\n    _command[_index + 1] = (documentLength >> 8) & 0xff;\n    _command[_index] = documentLength & 0xff;\n    // Update index in buffer\n    _index = _index + documentLength;\n    // Add terminating 0 for the object\n    _command[_index - 1] = 0;\n  }\n\n  // Return finished command\n  return _command;\n};\n\n// Constants\nQueryCommand.OPTS_NONE = 0;\nQueryCommand.OPTS_TAILABLE_CURSOR = 2;\nQueryCommand.OPTS_SLAVE = 4;\nQueryCommand.OPTS_OPLOG_REPLY = 8;\nQueryCommand.OPTS_NO_CURSOR_TIMEOUT = 16;\nQueryCommand.OPTS_AWAIT_DATA = 32;\nQueryCommand.OPTS_EXHAUST = 64;\nQueryCommand.OPTS_PARTIAL = 128;",
        "blocks": {
          "total": 28,
          "seen": 4,
          "missing": 24,
          "percentage": 0.14285714285714285
        }
      },
      "hash": "1724db8924b31cdfbf14be9aa9bb9677"
    },
    "/Users/ck/coding/projects/node-mongodb-native/lib/mongodb/commands/insert_command.js": {
      "stats": {
        "percentage": 0.9115646258503401,
        "lines": [
          {
            "lineno": 12
          },
          {
            "lineno": 18
          },
          {
            "lineno": 23
          },
          {
            "lineno": 29
          },
          {
            "lineno": 34
          },
          {
            "lineno": 45
          },
          {
            "lineno": 46
          },
          {
            "lineno": 47
          },
          {
            "lineno": 48
          },
          {
            "lineno": 49
          },
          {
            "lineno": 71
          },
          {
            "lineno": 127
          },
          {
            "lineno": 129
          }
        ],
        "missing": 13,
        "seen": 134,
        "seen_lines": [
          {
            "s": 1,
            "e": 2
          },
          {
            "s": 1,
            "e": 1
          },
          {
            "s": 2,
            "e": 2
          },
          {
            "s": 7,
            "e": 36
          },
          {
            "s": 8,
            "e": 8
          },
          {
            "s": 8,
            "e": 8
          },
          {
            "s": 10,
            "e": 10
          },
          {
            "s": 11,
            "e": 11
          },
          {
            "s": 12,
            "e": 12
          },
          {
            "s": 12,
            "e": 12
          },
          {
            "s": 12,
            "e": 12
          },
          {
            "s": 12,
            "e": 12
          },
          {
            "s": 13,
            "e": 13
          },
          {
            "s": 14,
            "e": 14
          },
          {
            "s": 15,
            "e": 15
          },
          {
            "s": 18,
            "e": 18
          },
          {
            "s": 18,
            "e": 18
          },
          {
            "s": 18,
            "e": 18
          },
          {
            "s": 18,
            "e": 18
          },
          {
            "s": 21,
            "e": 21
          },
          {
            "s": 21,
            "e": 21
          },
          {
            "s": 27,
            "e": 27
          },
          {
            "s": 27,
            "e": 27
          },
          {
            "s": 33,
            "e": 33
          },
          {
            "s": 33,
            "e": 33
          },
          {
            "s": 38,
            "e": 38
          },
          {
            "s": 38,
            "e": 38
          },
          {
            "s": 41,
            "e": 41
          },
          {
            "s": 43,
            "e": 55
          },
          {
            "s": 44,
            "e": 44
          },
          {
            "s": 53,
            "e": 53
          },
          {
            "s": 53,
            "e": 53
          },
          {
            "s": 54,
            "e": 54
          },
          {
            "s": 65,
            "e": 147
          },
          {
            "s": 67,
            "e": 67
          },
          {
            "s": 67,
            "e": 67
          },
          {
            "s": 67,
            "e": 67
          },
          {
            "s": 67,
            "e": 67
          },
          {
            "s": 67,
            "e": 67
          },
          {
            "s": 67,
            "e": 67
          },
          {
            "s": 69,
            "e": 69
          },
          {
            "s": 69,
            "e": 69
          },
          {
            "s": 69,
            "e": 69
          },
          {
            "s": 70,
            "e": 70
          },
          {
            "s": 74,
            "e": 74
          },
          {
            "s": 74,
            "e": 74
          },
          {
            "s": 79,
            "e": 79
          },
          {
            "s": 80,
            "e": 80
          },
          {
            "s": 82,
            "e": 82
          },
          {
            "s": 82,
            "e": 82
          },
          {
            "s": 82,
            "e": 82
          },
          {
            "s": 82,
            "e": 82
          },
          {
            "s": 82,
            "e": 82
          },
          {
            "s": 82,
            "e": 82
          },
          {
            "s": 83,
            "e": 83
          },
          {
            "s": 83,
            "e": 83
          },
          {
            "s": 83,
            "e": 83
          },
          {
            "s": 83,
            "e": 83
          },
          {
            "s": 83,
            "e": 83
          },
          {
            "s": 83,
            "e": 83
          },
          {
            "s": 84,
            "e": 84
          },
          {
            "s": 84,
            "e": 84
          },
          {
            "s": 84,
            "e": 84
          },
          {
            "s": 84,
            "e": 84
          },
          {
            "s": 84,
            "e": 84
          },
          {
            "s": 84,
            "e": 84
          },
          {
            "s": 85,
            "e": 85
          },
          {
            "s": 85,
            "e": 85
          },
          {
            "s": 85,
            "e": 85
          },
          {
            "s": 87,
            "e": 87
          },
          {
            "s": 87,
            "e": 87
          },
          {
            "s": 87,
            "e": 87
          },
          {
            "s": 89,
            "e": 89
          },
          {
            "s": 89,
            "e": 89
          },
          {
            "s": 89,
            "e": 89
          },
          {
            "s": 89,
            "e": 89
          },
          {
            "s": 89,
            "e": 89
          },
          {
            "s": 90,
            "e": 90
          },
          {
            "s": 90,
            "e": 90
          },
          {
            "s": 90,
            "e": 90
          },
          {
            "s": 90,
            "e": 90
          },
          {
            "s": 90,
            "e": 90
          },
          {
            "s": 91,
            "e": 91
          },
          {
            "s": 91,
            "e": 91
          },
          {
            "s": 91,
            "e": 91
          },
          {
            "s": 91,
            "e": 91
          },
          {
            "s": 91,
            "e": 91
          },
          {
            "s": 92,
            "e": 92
          },
          {
            "s": 92,
            "e": 92
          },
          {
            "s": 94,
            "e": 94
          },
          {
            "s": 94,
            "e": 94
          },
          {
            "s": 94,
            "e": 94
          },
          {
            "s": 96,
            "e": 96
          },
          {
            "s": 96,
            "e": 96
          },
          {
            "s": 97,
            "e": 97
          },
          {
            "s": 97,
            "e": 97
          },
          {
            "s": 98,
            "e": 98
          },
          {
            "s": 98,
            "e": 98
          },
          {
            "s": 99,
            "e": 99
          },
          {
            "s": 99,
            "e": 99
          },
          {
            "s": 101,
            "e": 101
          },
          {
            "s": 101,
            "e": 101
          },
          {
            "s": 101,
            "e": 101
          },
          {
            "s": 101,
            "e": 101
          },
          {
            "s": 101,
            "e": 101
          },
          {
            "s": 102,
            "e": 102
          },
          {
            "s": 102,
            "e": 102
          },
          {
            "s": 102,
            "e": 102
          },
          {
            "s": 102,
            "e": 102
          },
          {
            "s": 102,
            "e": 102
          },
          {
            "s": 103,
            "e": 103
          },
          {
            "s": 103,
            "e": 103
          },
          {
            "s": 103,
            "e": 103
          },
          {
            "s": 103,
            "e": 103
          },
          {
            "s": 103,
            "e": 103
          },
          {
            "s": 104,
            "e": 104
          },
          {
            "s": 104,
            "e": 104
          },
          {
            "s": 106,
            "e": 106
          },
          {
            "s": 106,
            "e": 106
          },
          {
            "s": 106,
            "e": 106
          },
          {
            "s": 108,
            "e": 108
          },
          {
            "s": 108,
            "e": 108
          },
          {
            "s": 108,
            "e": 108
          },
          {
            "s": 108,
            "e": 108
          },
          {
            "s": 108,
            "e": 108
          },
          {
            "s": 109,
            "e": 109
          },
          {
            "s": 109,
            "e": 109
          },
          {
            "s": 109,
            "e": 109
          },
          {
            "s": 109,
            "e": 109
          },
          {
            "s": 109,
            "e": 109
          },
          {
            "s": 110,
            "e": 110
          },
          {
            "s": 110,
            "e": 110
          },
          {
            "s": 110,
            "e": 110
          },
          {
            "s": 110,
            "e": 110
          },
          {
            "s": 110,
            "e": 110
          },
          {
            "s": 111,
            "e": 111
          },
          {
            "s": 111,
            "e": 111
          },
          {
            "s": 113,
            "e": 113
          },
          {
            "s": 113,
            "e": 113
          },
          {
            "s": 113,
            "e": 113
          },
          {
            "s": 115,
            "e": 115
          },
          {
            "s": 115,
            "e": 115
          },
          {
            "s": 115,
            "e": 115
          },
          {
            "s": 115,
            "e": 115
          },
          {
            "s": 115,
            "e": 115
          },
          {
            "s": 116,
            "e": 116
          },
          {
            "s": 116,
            "e": 116
          },
          {
            "s": 116,
            "e": 116
          },
          {
            "s": 119,
            "e": 119
          },
          {
            "s": 119,
            "e": 119
          },
          {
            "s": 119,
            "e": 119
          },
          {
            "s": 121,
            "e": 122
          },
          {
            "s": 122,
            "e": 122
          },
          {
            "s": 126,
            "e": 126
          },
          {
            "s": 132,
            "e": 132
          },
          {
            "s": 132,
            "e": 132
          },
          {
            "s": 132,
            "e": 132
          },
          {
            "s": 132,
            "e": 132
          },
          {
            "s": 132,
            "e": 132
          },
          {
            "s": 136,
            "e": 136
          },
          {
            "s": 136,
            "e": 136
          },
          {
            "s": 136,
            "e": 136
          },
          {
            "s": 136,
            "e": 136
          },
          {
            "s": 136,
            "e": 136
          },
          {
            "s": 136,
            "e": 136
          },
          {
            "s": 137,
            "e": 137
          },
          {
            "s": 137,
            "e": 137
          },
          {
            "s": 137,
            "e": 137
          },
          {
            "s": 137,
            "e": 137
          },
          {
            "s": 137,
            "e": 137
          },
          {
            "s": 137,
            "e": 137
          },
          {
            "s": 138,
            "e": 138
          },
          {
            "s": 138,
            "e": 138
          },
          {
            "s": 138,
            "e": 138
          },
          {
            "s": 138,
            "e": 138
          },
          {
            "s": 138,
            "e": 138
          },
          {
            "s": 138,
            "e": 138
          },
          {
            "s": 139,
            "e": 139
          },
          {
            "s": 139,
            "e": 139
          },
          {
            "s": 139,
            "e": 139
          },
          {
            "s": 141,
            "e": 141
          },
          {
            "s": 141,
            "e": 141
          },
          {
            "s": 141,
            "e": 141
          },
          {
            "s": 141,
            "e": 141
          },
          {
            "s": 143,
            "e": 143
          },
          {
            "s": 143,
            "e": 143
          },
          {
            "s": 143,
            "e": 143
          },
          {
            "s": 146,
            "e": 146
          }
        ],
        "total": 147,
        "coverage": {
          "12": {
            "partial": true,
            "source": "  this.checkKeys = checkKeys == null ? true : checkKeys;",
            "missing": [
              {
                "startCol": 39,
                "endCol": 43
              }
            ]
          },
          "18": {
            "partial": true,
            "source": "  options = options == null ? {} : options;",
            "missing": [
              {
                "startCol": 30,
                "endCol": 32
              }
            ]
          },
          "23": {
            "partial": false,
            "source": "    this.flags = 1;",
            "missing": [
              {
                "startCol": 4,
                "endCol": 19
              }
            ]
          },
          "29": {
            "partial": false,
            "source": "    this.flags = 1;",
            "missing": [
              {
                "startCol": 4,
                "endCol": 19
              }
            ]
          },
          "34": {
            "partial": false,
            "source": "    this.serializeFunctions = true;",
            "missing": [
              {
                "startCol": 4,
                "endCol": 35
              }
            ]
          },
          "45": {
            "partial": false,
            "source": "    var object_size = document[0] | document[1] << 8 | document[2] << 16 | document[3] << 24;",
            "missing": [
              {
                "startCol": 4,
                "endCol": 93
              },
              {
                "startCol": 22,
                "endCol": 52
              },
              {
                "startCol": 36,
                "endCol": 52
              },
              {
                "startCol": 55,
                "endCol": 72
              },
              {
                "startCol": 75,
                "endCol": 92
              }
            ]
          },
          "46": {
            "partial": false,
            "source": "    if(object_size != document.length)  {",
            "missing": [
              {
                "startCol": 7,
                "endCol": 18
              }
            ]
          },
          "47": {
            "partial": false,
            "source": "      var error = new Error(\"insert raw message size does not match message header size [\" + document.length + \"] != [\" + object_size + \"]\");",
            "missing": [
              {
                "startCol": 6,
                "endCol": 141
              },
              {
                "startCol": 28,
                "endCol": 108
              },
              {
                "startCol": 122,
                "endCol": 133
              }
            ]
          },
          "48": {
            "partial": false,
            "source": "      error.name = 'MongoError';",
            "missing": [
              {
                "startCol": 6,
                "endCol": 32
              }
            ]
          },
          "49": {
            "partial": false,
            "source": "      throw error;",
            "missing": [
              {
                "startCol": 6,
                "endCol": 18
              }
            ]
          },
          "71": {
            "partial": false,
            "source": "      totalLengthOfCommand += this.documents[i].length;",
            "missing": [
              {
                "startCol": 6,
                "endCol": 55
              }
            ]
          },
          "127": {
            "partial": false,
            "source": "      documentLength = object.length;",
            "missing": [
              {
                "startCol": 6,
                "endCol": 37
              }
            ]
          },
          "129": {
            "partial": false,
            "source": "      object.copy(_command, _index);",
            "missing": [
              {
                "startCol": 6,
                "endCol": 35
              }
            ]
          }
        },
        "source": "var BaseCommand = require('./base_command').BaseCommand,\n  inherits = require('util').inherits;\n\n/**\n  Insert Document Command\n**/\nvar InsertCommand = exports.InsertCommand = function(db, collectionName, checkKeys, options) {\n  BaseCommand.call(this);\n\n  this.collectionName = collectionName;\n  this.documents = [];\n  this.checkKeys = checkKeys == null ? true : checkKeys;\n  this.db = db;\n  this.flags = 0;\n  this.serializeFunctions = false;\n\n  // Ensure valid options hash\n  options = options == null ? {} : options;\n\n  // Check if we have keepGoing set -> set flag if it's the case\n  if(options['keepGoing'] != null && options['keepGoing']) {\n    // This will finish inserting all non-index violating documents even if it returns an error\n    this.flags = 1;\n  }\n\n  // Check if we have keepGoing set -> set flag if it's the case\n  if(options['continueOnError'] != null && options['continueOnError']) {\n    // This will finish inserting all non-index violating documents even if it returns an error\n    this.flags = 1;\n  }\n\n  // Let us defined on a command basis if we want functions to be serialized or not\n  if(options['serializeFunctions'] != null && options['serializeFunctions']) {\n    this.serializeFunctions = true;\n  }\n};\n\ninherits(InsertCommand, BaseCommand);\n\n// OpCodes\nInsertCommand.OP_INSERT =\t2002;\n\nInsertCommand.prototype.add = function(document) {\n  if(Buffer.isBuffer(document)) {\n    var object_size = document[0] | document[1] << 8 | document[2] << 16 | document[3] << 24;\n    if(object_size != document.length)  {\n      var error = new Error(\"insert raw message size does not match message header size [\" + document.length + \"] != [\" + object_size + \"]\");\n      error.name = 'MongoError';\n      throw error;\n    }\n  }\n\n  this.documents.push(document);\n  return this;\n};\n\n/*\nstruct {\n    MsgHeader header;             // standard message header\n    int32     ZERO;               // 0 - reserved for future use\n    cstring   fullCollectionName; // \"dbname.collectionname\"\n    BSON[]    documents;          // one or more documents to insert into the collection\n}\n*/\nInsertCommand.prototype.toBinary = function() {\n  // Calculate total length of the document\n  var totalLengthOfCommand = 4 + Buffer.byteLength(this.collectionName) + 1 + (4 * 4);\n  // var docLength = 0\n  for(var i = 0; i < this.documents.length; i++) {\n    if(Buffer.isBuffer(this.documents[i])) {\n      totalLengthOfCommand += this.documents[i].length;\n    } else {\n      // Calculate size of document\n      totalLengthOfCommand += this.db.bson.calculateObjectSize(this.documents[i], this.serializeFunctions, true);\n    }\n  }\n\n  // Let's build the single pass buffer command\n  var _index = 0;\n  var _command = new Buffer(totalLengthOfCommand);\n  // Write the header information to the buffer\n  _command[_index + 3] = (totalLengthOfCommand >> 24) & 0xff;\n  _command[_index + 2] = (totalLengthOfCommand >> 16) & 0xff;\n  _command[_index + 1] = (totalLengthOfCommand >> 8) & 0xff;\n  _command[_index] = totalLengthOfCommand & 0xff;\n  // Adjust index\n  _index = _index + 4;\n  // Write the request ID\n  _command[_index + 3] = (this.requestId >> 24) & 0xff;\n  _command[_index + 2] = (this.requestId >> 16) & 0xff;\n  _command[_index + 1] = (this.requestId >> 8) & 0xff;\n  _command[_index] = this.requestId & 0xff;\n  // Adjust index\n  _index = _index + 4;\n  // Write zero\n  _command[_index++] = 0;\n  _command[_index++] = 0;\n  _command[_index++] = 0;\n  _command[_index++] = 0;\n  // Write the op_code for the command\n  _command[_index + 3] = (InsertCommand.OP_INSERT >> 24) & 0xff;\n  _command[_index + 2] = (InsertCommand.OP_INSERT >> 16) & 0xff;\n  _command[_index + 1] = (InsertCommand.OP_INSERT >> 8) & 0xff;\n  _command[_index] = InsertCommand.OP_INSERT & 0xff;\n  // Adjust index\n  _index = _index + 4;\n  // Write flags if any\n  _command[_index + 3] = (this.flags >> 24) & 0xff;\n  _command[_index + 2] = (this.flags >> 16) & 0xff;\n  _command[_index + 1] = (this.flags >> 8) & 0xff;\n  _command[_index] = this.flags & 0xff;\n  // Adjust index\n  _index = _index + 4;\n  // Write the collection name to the command\n  _index = _index + _command.write(this.collectionName, _index, 'utf8') + 1;\n  _command[_index - 1] = 0;\n\n  // Write all the bson documents to the buffer at the index offset\n  for(var i = 0; i < this.documents.length; i++) {\n    // Document binary length\n    var documentLength = 0\n    var object = this.documents[i];\n\n    // Serialize the selector\n    // If we are passing a raw buffer, do minimal validation\n    if(Buffer.isBuffer(object)) {\n      documentLength = object.length;\n      // Copy the data into the current buffer\n      object.copy(_command, _index);\n    } else {\n      // Serialize the document straight to the buffer\n      documentLength = this.db.bson.serializeWithBufferAndIndex(object, this.checkKeys, _command, _index, this.serializeFunctions) - _index + 1;\n    }\n\n    // Write the length to the document\n    _command[_index + 3] = (documentLength >> 24) & 0xff;\n    _command[_index + 2] = (documentLength >> 16) & 0xff;\n    _command[_index + 1] = (documentLength >> 8) & 0xff;\n    _command[_index] = documentLength & 0xff;\n    // Update index in buffer\n    _index = _index + documentLength;\n    // Add terminating 0 for the object\n    _command[_index - 1] = 0;\n  }\n\n  return _command;\n};",
        "blocks": {
          "total": 14,
          "seen": 7,
          "missing": 7,
          "percentage": 0.5
        }
      },
      "hash": "a63e5c6e5d649e1881850051f724691b"
    },
    "/Users/ck/coding/projects/node-mongodb-native/lib/mongodb/commands/delete_command.js": {
      "stats": {
        "percentage": 0.5,
        "lines": [
          {
            "lineno": 8
          },
          {
            "lineno": 11
          },
          {
            "lineno": 12
          },
          {
            "lineno": 13
          },
          {
            "lineno": 14
          },
          {
            "lineno": 15
          },
          {
            "lineno": 16
          },
          {
            "lineno": 17
          },
          {
            "lineno": 21
          },
          {
            "lineno": 22
          },
          {
            "lineno": 23
          },
          {
            "lineno": 24
          },
          {
            "lineno": 42
          },
          {
            "lineno": 44
          },
          {
            "lineno": 45
          },
          {
            "lineno": 47
          },
          {
            "lineno": 48
          },
          {
            "lineno": 49
          },
          {
            "lineno": 50
          },
          {
            "lineno": 52
          },
          {
            "lineno": 54
          },
          {
            "lineno": 55
          },
          {
            "lineno": 56
          },
          {
            "lineno": 57
          },
          {
            "lineno": 59
          },
          {
            "lineno": 61
          },
          {
            "lineno": 62
          },
          {
            "lineno": 63
          },
          {
            "lineno": 64
          },
          {
            "lineno": 66
          },
          {
            "lineno": 67
          },
          {
            "lineno": 68
          },
          {
            "lineno": 69
          },
          {
            "lineno": 71
          },
          {
            "lineno": 74
          },
          {
            "lineno": 75
          },
          {
            "lineno": 76
          },
          {
            "lineno": 77
          },
          {
            "lineno": 80
          },
          {
            "lineno": 81
          },
          {
            "lineno": 84
          },
          {
            "lineno": 85
          },
          {
            "lineno": 86
          },
          {
            "lineno": 87
          },
          {
            "lineno": 89
          },
          {
            "lineno": 92
          },
          {
            "lineno": 96
          },
          {
            "lineno": 97
          },
          {
            "lineno": 99
          },
          {
            "lineno": 101
          },
          {
            "lineno": 105
          },
          {
            "lineno": 106
          },
          {
            "lineno": 107
          },
          {
            "lineno": 108
          },
          {
            "lineno": 110
          },
          {
            "lineno": 112
          },
          {
            "lineno": 113
          }
        ],
        "missing": 57,
        "seen": 57,
        "seen_lines": [
          {
            "s": 1,
            "e": 2
          },
          {
            "s": 1,
            "e": 1
          },
          {
            "s": 2,
            "e": 2
          },
          {
            "s": 7,
            "e": 25
          },
          {
            "s": 27,
            "e": 27
          },
          {
            "s": 27,
            "e": 27
          },
          {
            "s": 29,
            "e": 29
          },
          {
            "s": 40,
            "e": 114
          }
        ],
        "total": 114,
        "coverage": {
          "8": {
            "partial": false,
            "source": "  BaseCommand.call(this);",
            "missing": [
              {
                "startCol": 2,
                "endCol": 24
              }
            ]
          },
          "11": {
            "partial": false,
            "source": "  var object = selector;",
            "missing": [
              {
                "startCol": 2,
                "endCol": 24
              }
            ]
          },
          "12": {
            "partial": false,
            "source": "  if(Buffer.isBuffer(object)) {",
            "missing": [
              {
                "startCol": 5,
                "endCol": 28
              }
            ]
          },
          "13": {
            "partial": false,
            "source": "    var object_size = object[0] | object[1] << 8 | object[2] << 16 | object[3] << 24;        ",
            "missing": [
              {
                "startCol": 4,
                "endCol": 85
              },
              {
                "startCol": 22,
                "endCol": 48
              },
              {
                "startCol": 34,
                "endCol": 48
              },
              {
                "startCol": 51,
                "endCol": 66
              },
              {
                "startCol": 69,
                "endCol": 84
              }
            ]
          },
          "14": {
            "partial": false,
            "source": "    if(object_size != object.length)  {",
            "missing": [
              {
                "startCol": 7,
                "endCol": 18
              }
            ]
          },
          "15": {
            "partial": false,
            "source": "      var error = new Error(\"delete raw message size does not match message header size [\" + object.length + \"] != [\" + object_size + \"]\");",
            "missing": [
              {
                "startCol": 6,
                "endCol": 139
              },
              {
                "startCol": 28,
                "endCol": 106
              },
              {
                "startCol": 120,
                "endCol": 131
              }
            ]
          },
          "16": {
            "partial": false,
            "source": "      error.name = 'MongoError';",
            "missing": [
              {
                "startCol": 6,
                "endCol": 32
              }
            ]
          },
          "17": {
            "partial": false,
            "source": "      throw error;",
            "missing": [
              {
                "startCol": 6,
                "endCol": 18
              }
            ]
          },
          "21": {
            "partial": false,
            "source": "  this.flags = flags;",
            "missing": [
              {
                "startCol": 2,
                "endCol": 21
              }
            ]
          },
          "22": {
            "partial": false,
            "source": "  this.collectionName = collectionName;",
            "missing": [
              {
                "startCol": 2,
                "endCol": 39
              }
            ]
          },
          "23": {
            "partial": false,
            "source": "  this.selector = selector;",
            "missing": [
              {
                "startCol": 2,
                "endCol": 27
              }
            ]
          },
          "24": {
            "partial": false,
            "source": "  this.db = db;",
            "missing": [
              {
                "startCol": 2,
                "endCol": 15
              }
            ]
          },
          "42": {
            "partial": false,
            "source": "  var totalLengthOfCommand = 4 + Buffer.byteLength(this.collectionName) + 1 + 4 + this.db.bson.calculateObjectSize(this.selector, false, true) + (4 * 4);",
            "missing": [
              {
                "startCol": 2,
                "endCol": 153
              },
              {
                "startCol": 29,
                "endCol": 71
              },
              {
                "startCol": 33,
                "endCol": 71
              },
              {
                "startCol": 82,
                "endCol": 142
              },
              {
                "startCol": 145,
                "endCol": 152
              }
            ]
          },
          "44": {
            "partial": false,
            "source": "  var _index = 0;",
            "missing": [
              {
                "startCol": 2,
                "endCol": 17
              }
            ]
          },
          "45": {
            "partial": false,
            "source": "  var _command = new Buffer(totalLengthOfCommand);",
            "missing": [
              {
                "startCol": 2,
                "endCol": 50
              }
            ]
          },
          "47": {
            "partial": false,
            "source": "  _command[_index + 3] = (totalLengthOfCommand >> 24) & 0xff;     ",
            "missing": [
              {
                "startCol": 2,
                "endCol": 61
              },
              {
                "startCol": 11,
                "endCol": 17
              },
              {
                "startCol": 25,
                "endCol": 53
              },
              {
                "startCol": 26,
                "endCol": 46
              }
            ]
          },
          "48": {
            "partial": false,
            "source": "  _command[_index + 2] = (totalLengthOfCommand >> 16) & 0xff;",
            "missing": [
              {
                "startCol": 2,
                "endCol": 61
              },
              {
                "startCol": 11,
                "endCol": 17
              },
              {
                "startCol": 25,
                "endCol": 53
              },
              {
                "startCol": 26,
                "endCol": 46
              }
            ]
          },
          "49": {
            "partial": false,
            "source": "  _command[_index + 1] = (totalLengthOfCommand >> 8) & 0xff;",
            "missing": [
              {
                "startCol": 2,
                "endCol": 60
              },
              {
                "startCol": 11,
                "endCol": 17
              },
              {
                "startCol": 25,
                "endCol": 52
              },
              {
                "startCol": 26,
                "endCol": 46
              }
            ]
          },
          "50": {
            "partial": false,
            "source": "  _command[_index] = totalLengthOfCommand & 0xff;",
            "missing": [
              {
                "startCol": 2,
                "endCol": 49
              },
              {
                "startCol": 21,
                "endCol": 41
              }
            ]
          },
          "52": {
            "partial": false,
            "source": "  _index = _index + 4;",
            "missing": [
              {
                "startCol": 2,
                "endCol": 22
              },
              {
                "startCol": 11,
                "endCol": 17
              }
            ]
          },
          "54": {
            "partial": false,
            "source": "  _command[_index + 3] = (this.requestId >> 24) & 0xff;     ",
            "missing": [
              {
                "startCol": 2,
                "endCol": 55
              },
              {
                "startCol": 11,
                "endCol": 17
              },
              {
                "startCol": 25,
                "endCol": 47
              }
            ]
          },
          "55": {
            "partial": false,
            "source": "  _command[_index + 2] = (this.requestId >> 16) & 0xff;",
            "missing": [
              {
                "startCol": 2,
                "endCol": 55
              },
              {
                "startCol": 11,
                "endCol": 17
              },
              {
                "startCol": 25,
                "endCol": 47
              }
            ]
          },
          "56": {
            "partial": false,
            "source": "  _command[_index + 1] = (this.requestId >> 8) & 0xff;",
            "missing": [
              {
                "startCol": 2,
                "endCol": 54
              },
              {
                "startCol": 11,
                "endCol": 17
              },
              {
                "startCol": 25,
                "endCol": 46
              }
            ]
          },
          "57": {
            "partial": false,
            "source": "  _command[_index] = this.requestId & 0xff;",
            "missing": [
              {
                "startCol": 2,
                "endCol": 43
              },
              {
                "startCol": 21,
                "endCol": 42
              }
            ]
          },
          "59": {
            "partial": false,
            "source": "  _index = _index + 4;",
            "missing": [
              {
                "startCol": 2,
                "endCol": 22
              },
              {
                "startCol": 11,
                "endCol": 17
              }
            ]
          },
          "61": {
            "partial": false,
            "source": "  _command[_index++] = 0;",
            "missing": [
              {
                "startCol": 2,
                "endCol": 25
              },
              {
                "startCol": 11,
                "endCol": 19
              }
            ]
          },
          "62": {
            "partial": false,
            "source": "  _command[_index++] = 0;",
            "missing": [
              {
                "startCol": 2,
                "endCol": 25
              },
              {
                "startCol": 11,
                "endCol": 19
              }
            ]
          },
          "63": {
            "partial": false,
            "source": "  _command[_index++] = 0;",
            "missing": [
              {
                "startCol": 2,
                "endCol": 25
              },
              {
                "startCol": 11,
                "endCol": 19
              }
            ]
          },
          "64": {
            "partial": false,
            "source": "  _command[_index++] = 0;",
            "missing": [
              {
                "startCol": 2,
                "endCol": 25
              },
              {
                "startCol": 11,
                "endCol": 19
              }
            ]
          },
          "66": {
            "partial": false,
            "source": "  _command[_index + 3] = (DeleteCommand.OP_DELETE >> 24) & 0xff;     ",
            "missing": [
              {
                "startCol": 2,
                "endCol": 64
              },
              {
                "startCol": 11,
                "endCol": 17
              },
              {
                "startCol": 25,
                "endCol": 56
              }
            ]
          },
          "67": {
            "partial": false,
            "source": "  _command[_index + 2] = (DeleteCommand.OP_DELETE >> 16) & 0xff;",
            "missing": [
              {
                "startCol": 2,
                "endCol": 64
              },
              {
                "startCol": 11,
                "endCol": 17
              },
              {
                "startCol": 25,
                "endCol": 56
              }
            ]
          },
          "68": {
            "partial": false,
            "source": "  _command[_index + 1] = (DeleteCommand.OP_DELETE >> 8) & 0xff;",
            "missing": [
              {
                "startCol": 2,
                "endCol": 63
              },
              {
                "startCol": 11,
                "endCol": 17
              },
              {
                "startCol": 25,
                "endCol": 55
              }
            ]
          },
          "69": {
            "partial": false,
            "source": "  _command[_index] = DeleteCommand.OP_DELETE & 0xff;",
            "missing": [
              {
                "startCol": 2,
                "endCol": 52
              },
              {
                "startCol": 21,
                "endCol": 51
              }
            ]
          },
          "71": {
            "partial": false,
            "source": "  _index = _index + 4;",
            "missing": [
              {
                "startCol": 2,
                "endCol": 22
              },
              {
                "startCol": 11,
                "endCol": 17
              }
            ]
          },
          "74": {
            "partial": false,
            "source": "  _command[_index++] = 0;",
            "missing": [
              {
                "startCol": 2,
                "endCol": 25
              },
              {
                "startCol": 11,
                "endCol": 19
              }
            ]
          },
          "75": {
            "partial": false,
            "source": "  _command[_index++] = 0;",
            "missing": [
              {
                "startCol": 2,
                "endCol": 25
              },
              {
                "startCol": 11,
                "endCol": 19
              }
            ]
          },
          "76": {
            "partial": false,
            "source": "  _command[_index++] = 0;",
            "missing": [
              {
                "startCol": 2,
                "endCol": 25
              },
              {
                "startCol": 11,
                "endCol": 19
              }
            ]
          },
          "77": {
            "partial": false,
            "source": "  _command[_index++] = 0;",
            "missing": [
              {
                "startCol": 2,
                "endCol": 25
              },
              {
                "startCol": 11,
                "endCol": 19
              }
            ]
          },
          "80": {
            "partial": false,
            "source": "  _index = _index + _command.write(this.collectionName, _index, 'utf8') + 1;",
            "missing": [
              {
                "startCol": 2,
                "endCol": 76
              },
              {
                "startCol": 11,
                "endCol": 17
              },
              {
                "startCol": 20,
                "endCol": 71
              }
            ]
          },
          "81": {
            "partial": false,
            "source": "  _command[_index - 1] = 0;    ",
            "missing": [
              {
                "startCol": 2,
                "endCol": 27
              },
              {
                "startCol": 11,
                "endCol": 17
              }
            ]
          },
          "84": {
            "partial": false,
            "source": "  _command[_index + 3] = (this.flags >> 24) & 0xff;     ",
            "missing": [
              {
                "startCol": 2,
                "endCol": 51
              },
              {
                "startCol": 11,
                "endCol": 17
              },
              {
                "startCol": 25,
                "endCol": 43
              }
            ]
          },
          "85": {
            "partial": false,
            "source": "  _command[_index + 2] = (this.flags >> 16) & 0xff;",
            "missing": [
              {
                "startCol": 2,
                "endCol": 51
              },
              {
                "startCol": 11,
                "endCol": 17
              },
              {
                "startCol": 25,
                "endCol": 43
              }
            ]
          },
          "86": {
            "partial": false,
            "source": "  _command[_index + 1] = (this.flags >> 8) & 0xff;",
            "missing": [
              {
                "startCol": 2,
                "endCol": 50
              },
              {
                "startCol": 11,
                "endCol": 17
              },
              {
                "startCol": 25,
                "endCol": 42
              }
            ]
          },
          "87": {
            "partial": false,
            "source": "  _command[_index] = this.flags & 0xff;",
            "missing": [
              {
                "startCol": 2,
                "endCol": 39
              },
              {
                "startCol": 21,
                "endCol": 38
              }
            ]
          },
          "89": {
            "partial": false,
            "source": "  _index = _index + 4;",
            "missing": [
              {
                "startCol": 2,
                "endCol": 22
              },
              {
                "startCol": 11,
                "endCol": 17
              }
            ]
          },
          "92": {
            "partial": false,
            "source": "  var documentLength = 0",
            "missing": [
              {}
            ]
          },
          "93": {
            "partial": false,
            "source": "",
            "missing": [
              {}
            ]
          },
          "94": {
            "partial": false,
            "source": "  // Serialize the selector",
            "missing": [
              {}
            ]
          },
          "95": {
            "partial": false,
            "source": "  // If we are passing a raw buffer, do minimal validation",
            "missing": [
              {}
            ]
          },
          "96": {
            "partial": false,
            "source": "  if(Buffer.isBuffer(this.selector)) {",
            "missing": [
              {},
              {
                "startCol": 5,
                "endCol": 35
              }
            ]
          },
          "97": {
            "partial": false,
            "source": "    documentLength = this.selector.length;",
            "missing": [
              {
                "startCol": 4,
                "endCol": 42
              }
            ]
          },
          "99": {
            "partial": false,
            "source": "    this.selector.copy(_command, _index);",
            "missing": [
              {
                "startCol": 4,
                "endCol": 40
              }
            ]
          },
          "101": {
            "partial": false,
            "source": "    documentLength = this.db.bson.serializeWithBufferAndIndex(this.selector, this.checkKeys, _command, _index) - _index + 1;",
            "missing": [
              {
                "startCol": 4,
                "endCol": 124
              },
              {
                "startCol": 21,
                "endCol": 110
              },
              {
                "startCol": 113,
                "endCol": 119
              }
            ]
          },
          "105": {
            "partial": false,
            "source": "  _command[_index + 3] = (documentLength >> 24) & 0xff;     ",
            "missing": [
              {
                "startCol": 2,
                "endCol": 55
              },
              {
                "startCol": 11,
                "endCol": 17
              },
              {
                "startCol": 25,
                "endCol": 47
              },
              {
                "startCol": 26,
                "endCol": 40
              }
            ]
          },
          "106": {
            "partial": false,
            "source": "  _command[_index + 2] = (documentLength >> 16) & 0xff;",
            "missing": [
              {
                "startCol": 2,
                "endCol": 55
              },
              {
                "startCol": 11,
                "endCol": 17
              },
              {
                "startCol": 25,
                "endCol": 47
              },
              {
                "startCol": 26,
                "endCol": 40
              }
            ]
          },
          "107": {
            "partial": false,
            "source": "  _command[_index + 1] = (documentLength >> 8) & 0xff;",
            "missing": [
              {
                "startCol": 2,
                "endCol": 54
              },
              {
                "startCol": 11,
                "endCol": 17
              },
              {
                "startCol": 25,
                "endCol": 46
              },
              {
                "startCol": 26,
                "endCol": 40
              }
            ]
          },
          "108": {
            "partial": false,
            "source": "  _command[_index] = documentLength & 0xff;",
            "missing": [
              {
                "startCol": 2,
                "endCol": 43
              },
              {
                "startCol": 21,
                "endCol": 35
              }
            ]
          },
          "110": {
            "partial": false,
            "source": "  _index = _index + documentLength;",
            "missing": [
              {
                "startCol": 2,
                "endCol": 35
              },
              {
                "startCol": 11,
                "endCol": 17
              },
              {
                "startCol": 20,
                "endCol": 34
              }
            ]
          },
          "112": {
            "partial": false,
            "source": "  _command[_index - 1] = 0;      ",
            "missing": [
              {
                "startCol": 2,
                "endCol": 27
              },
              {
                "startCol": 11,
                "endCol": 17
              }
            ]
          },
          "113": {
            "partial": false,
            "source": "  return _command;",
            "missing": [
              {
                "startCol": 2,
                "endCol": 18
              }
            ]
          }
        },
        "source": "var BaseCommand = require('./base_command').BaseCommand,\n  inherits = require('util').inherits;\n\n/**\n  Insert Document Command\n**/\nvar DeleteCommand = exports.DeleteCommand = function(db, collectionName, selector, flags) {\n  BaseCommand.call(this);\n\n  // Validate correctness off the selector\n  var object = selector;\n  if(Buffer.isBuffer(object)) {\n    var object_size = object[0] | object[1] << 8 | object[2] << 16 | object[3] << 24;        \n    if(object_size != object.length)  {\n      var error = new Error(\"delete raw message size does not match message header size [\" + object.length + \"] != [\" + object_size + \"]\");\n      error.name = 'MongoError';\n      throw error;\n    }\n  }\n  \n  this.flags = flags;\n  this.collectionName = collectionName;\n  this.selector = selector;\n  this.db = db;\n};\n\ninherits(DeleteCommand, BaseCommand);\n\nDeleteCommand.OP_DELETE =\t2006;\n\n/*\nstruct {\n    MsgHeader header;                 // standard message header\n    int32     ZERO;                   // 0 - reserved for future use\n    cstring   fullCollectionName;     // \"dbname.collectionname\"\n    int32     ZERO;                   // 0 - reserved for future use\n    mongo.BSON      selector;               // query object.  See below for details.\n}\n*/\nDeleteCommand.prototype.toBinary = function() {\n  // Calculate total length of the document\n  var totalLengthOfCommand = 4 + Buffer.byteLength(this.collectionName) + 1 + 4 + this.db.bson.calculateObjectSize(this.selector, false, true) + (4 * 4);\n  // Let's build the single pass buffer command\n  var _index = 0;\n  var _command = new Buffer(totalLengthOfCommand);\n  // Write the header information to the buffer\n  _command[_index + 3] = (totalLengthOfCommand >> 24) & 0xff;     \n  _command[_index + 2] = (totalLengthOfCommand >> 16) & 0xff;\n  _command[_index + 1] = (totalLengthOfCommand >> 8) & 0xff;\n  _command[_index] = totalLengthOfCommand & 0xff;\n  // Adjust index\n  _index = _index + 4;\n  // Write the request ID\n  _command[_index + 3] = (this.requestId >> 24) & 0xff;     \n  _command[_index + 2] = (this.requestId >> 16) & 0xff;\n  _command[_index + 1] = (this.requestId >> 8) & 0xff;\n  _command[_index] = this.requestId & 0xff;\n  // Adjust index\n  _index = _index + 4;\n  // Write zero\n  _command[_index++] = 0;\n  _command[_index++] = 0;\n  _command[_index++] = 0;\n  _command[_index++] = 0;\n  // Write the op_code for the command\n  _command[_index + 3] = (DeleteCommand.OP_DELETE >> 24) & 0xff;     \n  _command[_index + 2] = (DeleteCommand.OP_DELETE >> 16) & 0xff;\n  _command[_index + 1] = (DeleteCommand.OP_DELETE >> 8) & 0xff;\n  _command[_index] = DeleteCommand.OP_DELETE & 0xff;\n  // Adjust index\n  _index = _index + 4;\n\n  // Write zero\n  _command[_index++] = 0;\n  _command[_index++] = 0;\n  _command[_index++] = 0;\n  _command[_index++] = 0;\n\n  // Write the collection name to the command\n  _index = _index + _command.write(this.collectionName, _index, 'utf8') + 1;\n  _command[_index - 1] = 0;    \n\n  // Write the flags\n  _command[_index + 3] = (this.flags >> 24) & 0xff;     \n  _command[_index + 2] = (this.flags >> 16) & 0xff;\n  _command[_index + 1] = (this.flags >> 8) & 0xff;\n  _command[_index] = this.flags & 0xff;\n  // Adjust index\n  _index = _index + 4;\n\n  // Document binary length\n  var documentLength = 0\n\n  // Serialize the selector\n  // If we are passing a raw buffer, do minimal validation\n  if(Buffer.isBuffer(this.selector)) {\n    documentLength = this.selector.length;\n    // Copy the data into the current buffer\n    this.selector.copy(_command, _index);\n  } else {\n    documentLength = this.db.bson.serializeWithBufferAndIndex(this.selector, this.checkKeys, _command, _index) - _index + 1;\n  }\n  \n  // Write the length to the document\n  _command[_index + 3] = (documentLength >> 24) & 0xff;     \n  _command[_index + 2] = (documentLength >> 16) & 0xff;\n  _command[_index + 1] = (documentLength >> 8) & 0xff;\n  _command[_index] = documentLength & 0xff;\n  // Update index in buffer\n  _index = _index + documentLength;\n  // Add terminating 0 for the object\n  _command[_index - 1] = 0;      \n  return _command;\n};",
        "blocks": {
          "total": 6,
          "seen": 0,
          "missing": 6,
          "percentage": 0
        }
      },
      "hash": "169f541cce7a0d7026bcd857ca528046"
    },
    "/Users/ck/coding/projects/node-mongodb-native/lib/mongodb/commands/get_more_command.js": {
      "stats": {
        "percentage": 0.4578313253012048,
        "lines": [
          {
            "lineno": 9
          },
          {
            "lineno": 11
          },
          {
            "lineno": 12
          },
          {
            "lineno": 13
          },
          {
            "lineno": 14
          },
          {
            "lineno": 23
          },
          {
            "lineno": 25
          },
          {
            "lineno": 26
          },
          {
            "lineno": 28
          },
          {
            "lineno": 29
          },
          {
            "lineno": 30
          },
          {
            "lineno": 31
          },
          {
            "lineno": 34
          },
          {
            "lineno": 35
          },
          {
            "lineno": 36
          },
          {
            "lineno": 37
          },
          {
            "lineno": 40
          },
          {
            "lineno": 41
          },
          {
            "lineno": 42
          },
          {
            "lineno": 43
          },
          {
            "lineno": 46
          },
          {
            "lineno": 47
          },
          {
            "lineno": 48
          },
          {
            "lineno": 49
          },
          {
            "lineno": 52
          },
          {
            "lineno": 53
          },
          {
            "lineno": 54
          },
          {
            "lineno": 55
          },
          {
            "lineno": 58
          },
          {
            "lineno": 59
          },
          {
            "lineno": 62
          },
          {
            "lineno": 63
          },
          {
            "lineno": 64
          },
          {
            "lineno": 65
          },
          {
            "lineno": 68
          },
          {
            "lineno": 70
          },
          {
            "lineno": 71
          },
          {
            "lineno": 72
          },
          {
            "lineno": 73
          },
          {
            "lineno": 75
          },
          {
            "lineno": 77
          },
          {
            "lineno": 78
          },
          {
            "lineno": 79
          },
          {
            "lineno": 80
          },
          {
            "lineno": 82
          }
        ],
        "missing": 45,
        "seen": 38,
        "seen_lines": [
          {
            "s": 1,
            "e": 3
          },
          {
            "s": 1,
            "e": 1
          },
          {
            "s": 2,
            "e": 2
          },
          {
            "s": 3,
            "e": 3
          },
          {
            "s": 8,
            "e": 15
          },
          {
            "s": 17,
            "e": 17
          },
          {
            "s": 17,
            "e": 17
          },
          {
            "s": 19,
            "e": 19
          },
          {
            "s": 21,
            "e": 83
          }
        ],
        "total": 83,
        "coverage": {
          "9": {
            "partial": false,
            "source": "  BaseCommand.call(this);",
            "missing": [
              {
                "startCol": 2,
                "endCol": 24
              }
            ]
          },
          "11": {
            "partial": false,
            "source": "  this.collectionName = collectionName;",
            "missing": [
              {
                "startCol": 2,
                "endCol": 39
              }
            ]
          },
          "12": {
            "partial": false,
            "source": "  this.numberToReturn = numberToReturn;",
            "missing": [
              {
                "startCol": 2,
                "endCol": 39
              }
            ]
          },
          "13": {
            "partial": false,
            "source": "  this.cursorId = cursorId;",
            "missing": [
              {
                "startCol": 2,
                "endCol": 27
              }
            ]
          },
          "14": {
            "partial": false,
            "source": "  this.db = db;",
            "missing": [
              {
                "startCol": 2,
                "endCol": 15
              }
            ]
          },
          "23": {
            "partial": false,
            "source": "  var totalLengthOfCommand = 4 + Buffer.byteLength(this.collectionName) + 1 + 4 + 8 + (4 * 4);",
            "missing": [
              {
                "startCol": 2,
                "endCol": 94
              },
              {
                "startCol": 29,
                "endCol": 71
              },
              {
                "startCol": 33,
                "endCol": 71
              },
              {
                "startCol": 86,
                "endCol": 93
              }
            ]
          },
          "25": {
            "partial": false,
            "source": "  var _index = 0;",
            "missing": [
              {
                "startCol": 2,
                "endCol": 17
              }
            ]
          },
          "26": {
            "partial": false,
            "source": "  var _command = new Buffer(totalLengthOfCommand);",
            "missing": [
              {
                "startCol": 2,
                "endCol": 50
              }
            ]
          },
          "28": {
            "partial": false,
            "source": "  _command[_index++] = totalLengthOfCommand & 0xff;",
            "missing": [
              {
                "startCol": 2,
                "endCol": 51
              },
              {
                "startCol": 11,
                "endCol": 19
              },
              {
                "startCol": 23,
                "endCol": 43
              }
            ]
          },
          "29": {
            "partial": false,
            "source": "  _command[_index++] = (totalLengthOfCommand >> 8) & 0xff;",
            "missing": [
              {
                "startCol": 2,
                "endCol": 58
              },
              {
                "startCol": 11,
                "endCol": 19
              },
              {
                "startCol": 23,
                "endCol": 50
              },
              {
                "startCol": 24,
                "endCol": 44
              }
            ]
          },
          "30": {
            "partial": false,
            "source": "  _command[_index++] = (totalLengthOfCommand >> 16) & 0xff;",
            "missing": [
              {
                "startCol": 2,
                "endCol": 59
              },
              {
                "startCol": 11,
                "endCol": 19
              },
              {
                "startCol": 23,
                "endCol": 51
              },
              {
                "startCol": 24,
                "endCol": 44
              }
            ]
          },
          "31": {
            "partial": false,
            "source": "  _command[_index++] = (totalLengthOfCommand >> 24) & 0xff;     ",
            "missing": [
              {
                "startCol": 2,
                "endCol": 59
              },
              {
                "startCol": 11,
                "endCol": 19
              },
              {
                "startCol": 23,
                "endCol": 51
              },
              {
                "startCol": 24,
                "endCol": 44
              }
            ]
          },
          "34": {
            "partial": false,
            "source": "  _command[_index++] = this.requestId & 0xff;",
            "missing": [
              {
                "startCol": 2,
                "endCol": 45
              },
              {
                "startCol": 11,
                "endCol": 19
              },
              {
                "startCol": 23,
                "endCol": 44
              }
            ]
          },
          "35": {
            "partial": false,
            "source": "  _command[_index++] = (this.requestId >> 8) & 0xff;",
            "missing": [
              {
                "startCol": 2,
                "endCol": 52
              },
              {
                "startCol": 11,
                "endCol": 19
              },
              {
                "startCol": 23,
                "endCol": 44
              }
            ]
          },
          "36": {
            "partial": false,
            "source": "  _command[_index++] = (this.requestId >> 16) & 0xff;",
            "missing": [
              {
                "startCol": 2,
                "endCol": 53
              },
              {
                "startCol": 11,
                "endCol": 19
              },
              {
                "startCol": 23,
                "endCol": 45
              }
            ]
          },
          "37": {
            "partial": false,
            "source": "  _command[_index++] = (this.requestId >> 24) & 0xff;     ",
            "missing": [
              {
                "startCol": 2,
                "endCol": 53
              },
              {
                "startCol": 11,
                "endCol": 19
              },
              {
                "startCol": 23,
                "endCol": 45
              }
            ]
          },
          "40": {
            "partial": false,
            "source": "  _command[_index++] = 0;",
            "missing": [
              {
                "startCol": 2,
                "endCol": 25
              },
              {
                "startCol": 11,
                "endCol": 19
              }
            ]
          },
          "41": {
            "partial": false,
            "source": "  _command[_index++] = 0;",
            "missing": [
              {
                "startCol": 2,
                "endCol": 25
              },
              {
                "startCol": 11,
                "endCol": 19
              }
            ]
          },
          "42": {
            "partial": false,
            "source": "  _command[_index++] = 0;",
            "missing": [
              {
                "startCol": 2,
                "endCol": 25
              },
              {
                "startCol": 11,
                "endCol": 19
              }
            ]
          },
          "43": {
            "partial": false,
            "source": "  _command[_index++] = 0;",
            "missing": [
              {
                "startCol": 2,
                "endCol": 25
              },
              {
                "startCol": 11,
                "endCol": 19
              }
            ]
          },
          "46": {
            "partial": false,
            "source": "  _command[_index++] = GetMoreCommand.OP_GET_MORE & 0xff;",
            "missing": [
              {
                "startCol": 2,
                "endCol": 57
              },
              {
                "startCol": 11,
                "endCol": 19
              },
              {
                "startCol": 23,
                "endCol": 56
              }
            ]
          },
          "47": {
            "partial": false,
            "source": "  _command[_index++] = (GetMoreCommand.OP_GET_MORE >> 8) & 0xff;",
            "missing": [
              {
                "startCol": 2,
                "endCol": 64
              },
              {
                "startCol": 11,
                "endCol": 19
              },
              {
                "startCol": 23,
                "endCol": 56
              }
            ]
          },
          "48": {
            "partial": false,
            "source": "  _command[_index++] = (GetMoreCommand.OP_GET_MORE >> 16) & 0xff;",
            "missing": [
              {
                "startCol": 2,
                "endCol": 65
              },
              {
                "startCol": 11,
                "endCol": 19
              },
              {
                "startCol": 23,
                "endCol": 57
              }
            ]
          },
          "49": {
            "partial": false,
            "source": "  _command[_index++] = (GetMoreCommand.OP_GET_MORE >> 24) & 0xff;     ",
            "missing": [
              {
                "startCol": 2,
                "endCol": 65
              },
              {
                "startCol": 11,
                "endCol": 19
              },
              {
                "startCol": 23,
                "endCol": 57
              }
            ]
          },
          "52": {
            "partial": false,
            "source": "  _command[_index++] = 0;",
            "missing": [
              {
                "startCol": 2,
                "endCol": 25
              },
              {
                "startCol": 11,
                "endCol": 19
              }
            ]
          },
          "53": {
            "partial": false,
            "source": "  _command[_index++] = 0;",
            "missing": [
              {
                "startCol": 2,
                "endCol": 25
              },
              {
                "startCol": 11,
                "endCol": 19
              }
            ]
          },
          "54": {
            "partial": false,
            "source": "  _command[_index++] = 0;",
            "missing": [
              {
                "startCol": 2,
                "endCol": 25
              },
              {
                "startCol": 11,
                "endCol": 19
              }
            ]
          },
          "55": {
            "partial": false,
            "source": "  _command[_index++] = 0;",
            "missing": [
              {
                "startCol": 2,
                "endCol": 25
              },
              {
                "startCol": 11,
                "endCol": 19
              }
            ]
          },
          "58": {
            "partial": false,
            "source": "  _index = _index + _command.write(this.collectionName, _index, 'utf8') + 1;",
            "missing": [
              {
                "startCol": 2,
                "endCol": 76
              },
              {
                "startCol": 11,
                "endCol": 17
              },
              {
                "startCol": 20,
                "endCol": 71
              }
            ]
          },
          "59": {
            "partial": false,
            "source": "  _command[_index - 1] = 0;    ",
            "missing": [
              {
                "startCol": 2,
                "endCol": 27
              },
              {
                "startCol": 11,
                "endCol": 17
              }
            ]
          },
          "62": {
            "partial": false,
            "source": "  _command[_index++] = this.numberToReturn & 0xff;",
            "missing": [
              {
                "startCol": 2,
                "endCol": 50
              },
              {
                "startCol": 11,
                "endCol": 19
              },
              {
                "startCol": 23,
                "endCol": 49
              }
            ]
          },
          "63": {
            "partial": false,
            "source": "  _command[_index++] = (this.numberToReturn >> 8) & 0xff;",
            "missing": [
              {
                "startCol": 2,
                "endCol": 57
              },
              {
                "startCol": 11,
                "endCol": 19
              },
              {
                "startCol": 23,
                "endCol": 49
              }
            ]
          },
          "64": {
            "partial": false,
            "source": "  _command[_index++] = (this.numberToReturn >> 16) & 0xff;",
            "missing": [
              {
                "startCol": 2,
                "endCol": 58
              },
              {
                "startCol": 11,
                "endCol": 19
              },
              {
                "startCol": 23,
                "endCol": 50
              }
            ]
          },
          "65": {
            "partial": false,
            "source": "  _command[_index++] = (this.numberToReturn >> 24) & 0xff;     ",
            "missing": [
              {
                "startCol": 2,
                "endCol": 58
              },
              {
                "startCol": 11,
                "endCol": 19
              },
              {
                "startCol": 23,
                "endCol": 50
              }
            ]
          },
          "68": {
            "partial": false,
            "source": "  var low_bits = this.cursorId.getLowBits();",
            "missing": [
              {
                "startCol": 2,
                "endCol": 44
              },
              {
                "startCol": 17,
                "endCol": 43
              }
            ]
          },
          "70": {
            "partial": false,
            "source": "  _command[_index++] = low_bits & 0xff;",
            "missing": [
              {
                "startCol": 2,
                "endCol": 39
              },
              {
                "startCol": 11,
                "endCol": 19
              },
              {
                "startCol": 23,
                "endCol": 31
              }
            ]
          },
          "71": {
            "partial": false,
            "source": "  _command[_index++] = (low_bits >> 8) & 0xff;",
            "missing": [
              {
                "startCol": 2,
                "endCol": 46
              },
              {
                "startCol": 11,
                "endCol": 19
              },
              {
                "startCol": 23,
                "endCol": 38
              },
              {
                "startCol": 24,
                "endCol": 32
              }
            ]
          },
          "72": {
            "partial": false,
            "source": "  _command[_index++] = (low_bits >> 16) & 0xff;",
            "missing": [
              {
                "startCol": 2,
                "endCol": 47
              },
              {
                "startCol": 11,
                "endCol": 19
              },
              {
                "startCol": 23,
                "endCol": 39
              },
              {
                "startCol": 24,
                "endCol": 32
              }
            ]
          },
          "73": {
            "partial": false,
            "source": "  _command[_index++] = (low_bits >> 24) & 0xff;     ",
            "missing": [
              {
                "startCol": 2,
                "endCol": 47
              },
              {
                "startCol": 11,
                "endCol": 19
              },
              {
                "startCol": 23,
                "endCol": 39
              },
              {
                "startCol": 24,
                "endCol": 32
              }
            ]
          },
          "75": {
            "partial": false,
            "source": "  var high_bits = this.cursorId.getHighBits();",
            "missing": [
              {
                "startCol": 2,
                "endCol": 46
              },
              {
                "startCol": 18,
                "endCol": 45
              }
            ]
          },
          "77": {
            "partial": false,
            "source": "  _command[_index++] = high_bits & 0xff;",
            "missing": [
              {
                "startCol": 2,
                "endCol": 40
              },
              {
                "startCol": 11,
                "endCol": 19
              },
              {
                "startCol": 23,
                "endCol": 32
              }
            ]
          },
          "78": {
            "partial": false,
            "source": "  _command[_index++] = (high_bits >> 8) & 0xff;",
            "missing": [
              {
                "startCol": 2,
                "endCol": 47
              },
              {
                "startCol": 11,
                "endCol": 19
              },
              {
                "startCol": 23,
                "endCol": 39
              },
              {
                "startCol": 24,
                "endCol": 33
              }
            ]
          },
          "79": {
            "partial": false,
            "source": "  _command[_index++] = (high_bits >> 16) & 0xff;",
            "missing": [
              {
                "startCol": 2,
                "endCol": 48
              },
              {
                "startCol": 11,
                "endCol": 19
              },
              {
                "startCol": 23,
                "endCol": 40
              },
              {
                "startCol": 24,
                "endCol": 33
              }
            ]
          },
          "80": {
            "partial": false,
            "source": "  _command[_index++] = (high_bits >> 24) & 0xff;     ",
            "missing": [
              {
                "startCol": 2,
                "endCol": 48
              },
              {
                "startCol": 11,
                "endCol": 19
              },
              {
                "startCol": 23,
                "endCol": 40
              },
              {
                "startCol": 24,
                "endCol": 33
              }
            ]
          },
          "82": {
            "partial": false,
            "source": "  return _command;",
            "missing": [
              {
                "startCol": 2,
                "endCol": 18
              }
            ]
          }
        },
        "source": "var BaseCommand = require('./base_command').BaseCommand,\n  inherits = require('util').inherits,\n  binaryutils = require('../utils');\n\n/**\n  Get More Document Command\n**/\nvar GetMoreCommand = exports.GetMoreCommand = function(db, collectionName, numberToReturn, cursorId) {\n  BaseCommand.call(this);\n\n  this.collectionName = collectionName;\n  this.numberToReturn = numberToReturn;\n  this.cursorId = cursorId;\n  this.db = db;\n};\n\ninherits(GetMoreCommand, BaseCommand);\n\nGetMoreCommand.OP_GET_MORE = 2005;\n\nGetMoreCommand.prototype.toBinary = function() {\n  // Calculate total length of the document\n  var totalLengthOfCommand = 4 + Buffer.byteLength(this.collectionName) + 1 + 4 + 8 + (4 * 4);\n  // Let's build the single pass buffer command\n  var _index = 0;\n  var _command = new Buffer(totalLengthOfCommand);\n  // Write the header information to the buffer\n  _command[_index++] = totalLengthOfCommand & 0xff;\n  _command[_index++] = (totalLengthOfCommand >> 8) & 0xff;\n  _command[_index++] = (totalLengthOfCommand >> 16) & 0xff;\n  _command[_index++] = (totalLengthOfCommand >> 24) & 0xff;     \n\n  // Write the request ID\n  _command[_index++] = this.requestId & 0xff;\n  _command[_index++] = (this.requestId >> 8) & 0xff;\n  _command[_index++] = (this.requestId >> 16) & 0xff;\n  _command[_index++] = (this.requestId >> 24) & 0xff;     \n\n  // Write zero\n  _command[_index++] = 0;\n  _command[_index++] = 0;\n  _command[_index++] = 0;\n  _command[_index++] = 0;\n\n  // Write the op_code for the command\n  _command[_index++] = GetMoreCommand.OP_GET_MORE & 0xff;\n  _command[_index++] = (GetMoreCommand.OP_GET_MORE >> 8) & 0xff;\n  _command[_index++] = (GetMoreCommand.OP_GET_MORE >> 16) & 0xff;\n  _command[_index++] = (GetMoreCommand.OP_GET_MORE >> 24) & 0xff;     \n\n  // Write zero\n  _command[_index++] = 0;\n  _command[_index++] = 0;\n  _command[_index++] = 0;\n  _command[_index++] = 0;\n\n  // Write the collection name to the command\n  _index = _index + _command.write(this.collectionName, _index, 'utf8') + 1;\n  _command[_index - 1] = 0;    \n\n  // Number of documents to return\n  _command[_index++] = this.numberToReturn & 0xff;\n  _command[_index++] = (this.numberToReturn >> 8) & 0xff;\n  _command[_index++] = (this.numberToReturn >> 16) & 0xff;\n  _command[_index++] = (this.numberToReturn >> 24) & 0xff;     \n  \n  // Encode the cursor id\n  var low_bits = this.cursorId.getLowBits();\n  // Encode low bits\n  _command[_index++] = low_bits & 0xff;\n  _command[_index++] = (low_bits >> 8) & 0xff;\n  _command[_index++] = (low_bits >> 16) & 0xff;\n  _command[_index++] = (low_bits >> 24) & 0xff;     \n  \n  var high_bits = this.cursorId.getHighBits();\n  // Encode high bits\n  _command[_index++] = high_bits & 0xff;\n  _command[_index++] = (high_bits >> 8) & 0xff;\n  _command[_index++] = (high_bits >> 16) & 0xff;\n  _command[_index++] = (high_bits >> 24) & 0xff;     \n  // Return command\n  return _command;\n};",
        "blocks": {
          "total": 2,
          "seen": 0,
          "missing": 2,
          "percentage": 0
        }
      },
      "hash": "12e0a6395b55cad8adf3c5646f4d4eb5"
    },
    "/Users/ck/coding/projects/node-mongodb-native/lib/mongodb/utils.js": {
      "stats": {
        "percentage": 0.5945945945945946,
        "lines": [
          {
            "lineno": 5
          },
          {
            "lineno": 7
          },
          {
            "lineno": 11
          },
          {
            "lineno": 15
          },
          {
            "lineno": 17
          },
          {
            "lineno": 24
          },
          {
            "lineno": 26
          },
          {
            "lineno": 27
          },
          {
            "lineno": 28
          },
          {
            "lineno": 29
          },
          {
            "lineno": 31
          },
          {
            "lineno": 34
          },
          {
            "lineno": 35
          },
          {
            "lineno": 36
          },
          {
            "lineno": 37
          },
          {
            "lineno": 39
          },
          {
            "lineno": 43
          },
          {
            "lineno": 47
          },
          {
            "lineno": 48
          },
          {
            "lineno": 49
          },
          {
            "lineno": 50
          },
          {
            "lineno": 51
          },
          {
            "lineno": 52
          },
          {
            "lineno": 56
          },
          {
            "lineno": 57
          },
          {
            "lineno": 58
          },
          {
            "lineno": 59
          },
          {
            "lineno": 63
          },
          {
            "lineno": 64
          },
          {
            "lineno": 73
          }
        ],
        "missing": 30,
        "seen": 44,
        "seen_lines": [
          {
            "s": 4,
            "e": 21
          },
          {
            "s": 23,
            "e": 44
          },
          {
            "s": 46,
            "e": 55
          },
          {
            "s": 55,
            "e": 62
          },
          {
            "s": 62,
            "e": 67
          },
          {
            "s": 67,
            "e": 72
          },
          {
            "s": 68,
            "e": 68
          },
          {
            "s": 68,
            "e": 68
          },
          {
            "s": 68,
            "e": 68
          },
          {
            "s": 68,
            "e": 68
          },
          {
            "s": 68,
            "e": 68
          },
          {
            "s": 68,
            "e": 68
          },
          {
            "s": 68,
            "e": 68
          },
          {
            "s": 68,
            "e": 68
          },
          {
            "s": 68,
            "e": 68
          },
          {
            "s": 68,
            "e": 68
          },
          {
            "s": 68,
            "e": 68
          },
          {
            "s": 68,
            "e": 68
          },
          {
            "s": 68,
            "e": 68
          },
          {
            "s": 72,
            "e": 75
          }
        ],
        "total": 74,
        "coverage": {
          "5": {
            "partial": false,
            "source": "  var value = (\"\" + sortDirection).toLowerCase();",
            "missing": [
              {
                "startCol": 2,
                "endCol": 49
              },
              {
                "startCol": 14,
                "endCol": 34
              },
              {
                "startCol": 20,
                "endCol": 33
              }
            ]
          },
          "7": {
            "partial": false,
            "source": "  switch (value) {",
            "missing": [
              {
                "startCol": 10,
                "endCol": 15
              }
            ]
          },
          "11": {
            "partial": false,
            "source": "      return 1;",
            "missing": [
              {
                "startCol": 6,
                "endCol": 15
              }
            ]
          },
          "15": {
            "partial": false,
            "source": "      return -1;",
            "missing": [
              {
                "startCol": 6,
                "endCol": 16
              },
              {
                "startCol": 13,
                "endCol": 15
              }
            ]
          },
          "17": {
            "partial": false,
            "source": "      throw new Error(\"Illegal sort clause, must be of the form \"",
            "missing": [
              {}
            ]
          },
          "18": {
            "partial": false,
            "source": "                    + \"[['field1', '(ascending|descending)'], \"",
            "missing": [
              {}
            ]
          },
          "19": {
            "partial": false,
            "source": "                    + \"['field2', '(ascending|descending)']]\");",
            "missing": [
              {}
            ]
          },
          "24": {
            "partial": false,
            "source": "  var orderBy = {};",
            "missing": [
              {
                "startCol": 2,
                "endCol": 19
              }
            ]
          },
          "26": {
            "partial": false,
            "source": "  if (Array.isArray(sortValue)) {",
            "missing": [
              {
                "startCol": 6,
                "endCol": 30
              }
            ]
          },
          "27": {
            "partial": false,
            "source": "    for(var i = 0; i < sortValue.length; i++) {",
            "missing": [
              {
                "startCol": 19,
                "endCol": 20
              },
              {
                "startCol": 41,
                "endCol": 44
              }
            ]
          },
          "28": {
            "partial": false,
            "source": "      if(sortValue[i].constructor == String) {",
            "missing": [
              {
                "startCol": 9,
                "endCol": 43
              },
              {
                "startCol": 37,
                "endCol": 43
              }
            ]
          },
          "29": {
            "partial": false,
            "source": "        orderBy[sortValue[i]] = 1;",
            "missing": [
              {
                "startCol": 8,
                "endCol": 34
              }
            ]
          },
          "31": {
            "partial": false,
            "source": "        orderBy[sortValue[i][0]] = formatSortValue(sortValue[i][1]);",
            "missing": [
              {
                "startCol": 8,
                "endCol": 68
              },
              {
                "startCol": 35,
                "endCol": 67
              }
            ]
          },
          "34": {
            "partial": false,
            "source": "  } else if(Object.prototype.toString.call(sortValue) === '[object Object]') {",
            "missing": [
              {
                "startCol": 12,
                "endCol": 53
              }
            ]
          },
          "35": {
            "partial": false,
            "source": "    orderBy = sortValue;",
            "missing": [
              {
                "startCol": 4,
                "endCol": 24
              }
            ]
          },
          "36": {
            "partial": false,
            "source": "  } else if (sortValue.constructor == String) {",
            "missing": [
              {
                "startCol": 13,
                "endCol": 44
              },
              {
                "startCol": 38,
                "endCol": 44
              }
            ]
          },
          "37": {
            "partial": false,
            "source": "    orderBy[sortValue] = 1;",
            "missing": [
              {
                "startCol": 4,
                "endCol": 27
              }
            ]
          },
          "39": {
            "partial": false,
            "source": "    throw new Error(\"Illegal sort clause, must be of the form \" +",
            "missing": [
              {}
            ]
          },
          "40": {
            "partial": false,
            "source": "      \"[['field1', '(ascending|descending)'], ['field2', '(ascending|descending)']]\");",
            "missing": [
              {}
            ]
          },
          "43": {
            "partial": false,
            "source": "  return orderBy;",
            "missing": [
              {
                "startCol": 2,
                "endCol": 17
              }
            ]
          },
          "47": {
            "partial": false,
            "source": "  var buffer = new Buffer(4);",
            "missing": [
              {
                "startCol": 2,
                "endCol": 29
              }
            ]
          },
          "48": {
            "partial": false,
            "source": "  buffer[3] = (value >> 24) & 0xff;      ",
            "missing": [
              {
                "startCol": 2,
                "endCol": 35
              },
              {
                "startCol": 14,
                "endCol": 27
              },
              {
                "startCol": 15,
                "endCol": 20
              }
            ]
          },
          "49": {
            "partial": false,
            "source": "  buffer[2] = (value >> 16) & 0xff;",
            "missing": [
              {
                "startCol": 2,
                "endCol": 35
              },
              {
                "startCol": 14,
                "endCol": 27
              },
              {
                "startCol": 15,
                "endCol": 20
              }
            ]
          },
          "50": {
            "partial": false,
            "source": "  buffer[1] = (value >> 8) & 0xff;",
            "missing": [
              {
                "startCol": 2,
                "endCol": 34
              },
              {
                "startCol": 14,
                "endCol": 26
              },
              {
                "startCol": 15,
                "endCol": 20
              }
            ]
          },
          "51": {
            "partial": false,
            "source": "  buffer[0] = value & 0xff;",
            "missing": [
              {
                "startCol": 2,
                "endCol": 27
              },
              {
                "startCol": 14,
                "endCol": 19
              }
            ]
          },
          "52": {
            "partial": false,
            "source": "  return buffer;",
            "missing": [
              {
                "startCol": 2,
                "endCol": 16
              }
            ]
          },
          "56": {
            "partial": false,
            "source": "  buffer[index + 3] = (value >> 24) & 0xff;\t\t\t",
            "missing": [
              {
                "startCol": 2,
                "endCol": 43
              },
              {
                "startCol": 9,
                "endCol": 14
              },
              {
                "startCol": 22,
                "endCol": 35
              },
              {
                "startCol": 23,
                "endCol": 28
              }
            ]
          },
          "57": {
            "partial": false,
            "source": "\tbuffer[index + 2] = (value >> 16) & 0xff;",
            "missing": [
              {
                "startCol": 1,
                "endCol": 42
              },
              {
                "startCol": 8,
                "endCol": 13
              },
              {
                "startCol": 21,
                "endCol": 34
              },
              {
                "startCol": 22,
                "endCol": 27
              }
            ]
          },
          "58": {
            "partial": false,
            "source": "\tbuffer[index + 1] = (value >> 8) & 0xff;",
            "missing": [
              {
                "startCol": 1,
                "endCol": 41
              },
              {
                "startCol": 8,
                "endCol": 13
              },
              {
                "startCol": 21,
                "endCol": 33
              },
              {
                "startCol": 22,
                "endCol": 27
              }
            ]
          },
          "59": {
            "partial": false,
            "source": "\tbuffer[index] = value & 0xff;",
            "missing": [
              {
                "startCol": 1,
                "endCol": 30
              },
              {
                "startCol": 17,
                "endCol": 22
              }
            ]
          },
          "63": {
            "partial": false,
            "source": "  var buf = new Buffer(string, 'utf8');",
            "missing": [
              {
                "startCol": 2,
                "endCol": 39
              }
            ]
          },
          "64": {
            "partial": false,
            "source": "  return [buf, new Buffer([0])];",
            "missing": [
              {
                "startCol": 2,
                "endCol": 32
              }
            ]
          },
          "73": {
            "partial": false,
            "source": "  return array[index];",
            "missing": [
              {
                "startCol": 2,
                "endCol": 22
              }
            ]
          }
        },
        "source": "/**\n * Sort functions, Normalize and prepare sort parameters\n */\nvar formatSortValue = exports.formatSortValue = function(sortDirection) {\n  var value = (\"\" + sortDirection).toLowerCase();\n\n  switch (value) {\n    case 'ascending':\n    case 'asc':\n    case '1':\n      return 1;\n    case 'descending':\n    case 'desc':\n    case '-1':\n      return -1;\n    default:\n      throw new Error(\"Illegal sort clause, must be of the form \"\n                    + \"[['field1', '(ascending|descending)'], \"\n                    + \"['field2', '(ascending|descending)']]\");\n  }\n};\n\nvar formattedOrderClause = exports.formattedOrderClause = function(sortValue) {\n  var orderBy = {};\n\n  if (Array.isArray(sortValue)) {\n    for(var i = 0; i < sortValue.length; i++) {\n      if(sortValue[i].constructor == String) {\n        orderBy[sortValue[i]] = 1;\n      } else {\n        orderBy[sortValue[i][0]] = formatSortValue(sortValue[i][1]);\n      }      \n    }\n  } else if(Object.prototype.toString.call(sortValue) === '[object Object]') {\n    orderBy = sortValue;\n  } else if (sortValue.constructor == String) {\n    orderBy[sortValue] = 1;\n  } else {\n    throw new Error(\"Illegal sort clause, must be of the form \" +\n      \"[['field1', '(ascending|descending)'], ['field2', '(ascending|descending)']]\");\n  }\n\n  return orderBy;\n};\n\nexports.encodeInt = function(value) {\n  var buffer = new Buffer(4);\n  buffer[3] = (value >> 24) & 0xff;      \n  buffer[2] = (value >> 16) & 0xff;\n  buffer[1] = (value >> 8) & 0xff;\n  buffer[0] = value & 0xff;\n  return buffer;\n}\n\nexports.encodeIntInPlace = function(value, buffer, index) {\n  buffer[index + 3] = (value >> 24) & 0xff;\t\t\t\n\tbuffer[index + 2] = (value >> 16) & 0xff;\n\tbuffer[index + 1] = (value >> 8) & 0xff;\n\tbuffer[index] = value & 0xff;\n}\n\nexports.encodeCString = function(string) {\n  var buf = new Buffer(string, 'utf8');\n  return [buf, new Buffer([0])];\n}\n\nexports.decodeUInt32 = function(array, index) {\n  return array[index] | array[index + 1] << 8 | array[index + 2] << 16 | array[index + 3] << 24;\n}\n\n// Decode the int\nexports.decodeUInt8 = function(array, index) {\n  return array[index];\n}",
        "blocks": {
          "total": 17,
          "seen": 1,
          "missing": 16,
          "percentage": 0.058823529411764705
        }
      },
      "hash": "f8910ae76e0540e7a92893c62b280537"
    },
    "/Users/ck/coding/projects/node-mongodb-native/lib/mongodb/commands/kill_cursor_command.js": {
      "stats": {
        "percentage": 0.5,
        "lines": [
          {
            "lineno": 9
          },
          {
            "lineno": 11
          },
          {
            "lineno": 12
          },
          {
            "lineno": 29
          },
          {
            "lineno": 31
          },
          {
            "lineno": 32
          },
          {
            "lineno": 34
          },
          {
            "lineno": 35
          },
          {
            "lineno": 36
          },
          {
            "lineno": 37
          },
          {
            "lineno": 39
          },
          {
            "lineno": 41
          },
          {
            "lineno": 42
          },
          {
            "lineno": 43
          },
          {
            "lineno": 44
          },
          {
            "lineno": 46
          },
          {
            "lineno": 48
          },
          {
            "lineno": 49
          },
          {
            "lineno": 50
          },
          {
            "lineno": 51
          },
          {
            "lineno": 53
          },
          {
            "lineno": 54
          },
          {
            "lineno": 55
          },
          {
            "lineno": 56
          },
          {
            "lineno": 58
          },
          {
            "lineno": 61
          },
          {
            "lineno": 62
          },
          {
            "lineno": 63
          },
          {
            "lineno": 64
          },
          {
            "lineno": 67
          },
          {
            "lineno": 68
          },
          {
            "lineno": 69
          },
          {
            "lineno": 70
          },
          {
            "lineno": 71
          },
          {
            "lineno": 73
          },
          {
            "lineno": 76
          },
          {
            "lineno": 78
          },
          {
            "lineno": 80
          },
          {
            "lineno": 81
          },
          {
            "lineno": 82
          },
          {
            "lineno": 83
          },
          {
            "lineno": 85
          },
          {
            "lineno": 87
          },
          {
            "lineno": 89
          },
          {
            "lineno": 90
          },
          {
            "lineno": 91
          },
          {
            "lineno": 92
          },
          {
            "lineno": 94
          },
          {
            "lineno": 97
          }
        ],
        "missing": 49,
        "seen": 49,
        "seen_lines": [
          {
            "s": 1,
            "e": 3
          },
          {
            "s": 1,
            "e": 1
          },
          {
            "s": 2,
            "e": 2
          },
          {
            "s": 3,
            "e": 3
          },
          {
            "s": 8,
            "e": 13
          },
          {
            "s": 15,
            "e": 15
          },
          {
            "s": 15,
            "e": 15
          },
          {
            "s": 17,
            "e": 17
          },
          {
            "s": 27,
            "e": 98
          }
        ],
        "total": 98,
        "coverage": {
          "9": {
            "partial": false,
            "source": "  BaseCommand.call(this);",
            "missing": [
              {
                "startCol": 2,
                "endCol": 24
              }
            ]
          },
          "11": {
            "partial": false,
            "source": "  this.cursorIds = cursorIds;",
            "missing": [
              {
                "startCol": 2,
                "endCol": 29
              }
            ]
          },
          "12": {
            "partial": false,
            "source": "  this.db = db;",
            "missing": [
              {
                "startCol": 2,
                "endCol": 15
              }
            ]
          },
          "29": {
            "partial": false,
            "source": "  var totalLengthOfCommand = 4 + 4 + (4 * 4) + (this.cursorIds.length * 8);",
            "missing": [
              {
                "startCol": 2,
                "endCol": 75
              },
              {
                "startCol": 29,
                "endCol": 34
              },
              {
                "startCol": 37,
                "endCol": 44
              },
              {
                "startCol": 47,
                "endCol": 74
              }
            ]
          },
          "31": {
            "partial": false,
            "source": "  var _index = 0;",
            "missing": [
              {
                "startCol": 2,
                "endCol": 17
              }
            ]
          },
          "32": {
            "partial": false,
            "source": "  var _command = new Buffer(totalLengthOfCommand);",
            "missing": [
              {
                "startCol": 2,
                "endCol": 50
              }
            ]
          },
          "34": {
            "partial": false,
            "source": "  _command[_index + 3] = (totalLengthOfCommand >> 24) & 0xff;     ",
            "missing": [
              {
                "startCol": 2,
                "endCol": 61
              },
              {
                "startCol": 11,
                "endCol": 17
              },
              {
                "startCol": 25,
                "endCol": 53
              },
              {
                "startCol": 26,
                "endCol": 46
              }
            ]
          },
          "35": {
            "partial": false,
            "source": "  _command[_index + 2] = (totalLengthOfCommand >> 16) & 0xff;",
            "missing": [
              {
                "startCol": 2,
                "endCol": 61
              },
              {
                "startCol": 11,
                "endCol": 17
              },
              {
                "startCol": 25,
                "endCol": 53
              },
              {
                "startCol": 26,
                "endCol": 46
              }
            ]
          },
          "36": {
            "partial": false,
            "source": "  _command[_index + 1] = (totalLengthOfCommand >> 8) & 0xff;",
            "missing": [
              {
                "startCol": 2,
                "endCol": 60
              },
              {
                "startCol": 11,
                "endCol": 17
              },
              {
                "startCol": 25,
                "endCol": 52
              },
              {
                "startCol": 26,
                "endCol": 46
              }
            ]
          },
          "37": {
            "partial": false,
            "source": "  _command[_index] = totalLengthOfCommand & 0xff;",
            "missing": [
              {
                "startCol": 2,
                "endCol": 49
              },
              {
                "startCol": 21,
                "endCol": 41
              }
            ]
          },
          "39": {
            "partial": false,
            "source": "  _index = _index + 4;",
            "missing": [
              {
                "startCol": 2,
                "endCol": 22
              },
              {
                "startCol": 11,
                "endCol": 17
              }
            ]
          },
          "41": {
            "partial": false,
            "source": "  _command[_index + 3] = (this.requestId >> 24) & 0xff;     ",
            "missing": [
              {
                "startCol": 2,
                "endCol": 55
              },
              {
                "startCol": 11,
                "endCol": 17
              },
              {
                "startCol": 25,
                "endCol": 47
              }
            ]
          },
          "42": {
            "partial": false,
            "source": "  _command[_index + 2] = (this.requestId >> 16) & 0xff;",
            "missing": [
              {
                "startCol": 2,
                "endCol": 55
              },
              {
                "startCol": 11,
                "endCol": 17
              },
              {
                "startCol": 25,
                "endCol": 47
              }
            ]
          },
          "43": {
            "partial": false,
            "source": "  _command[_index + 1] = (this.requestId >> 8) & 0xff;",
            "missing": [
              {
                "startCol": 2,
                "endCol": 54
              },
              {
                "startCol": 11,
                "endCol": 17
              },
              {
                "startCol": 25,
                "endCol": 46
              }
            ]
          },
          "44": {
            "partial": false,
            "source": "  _command[_index] = this.requestId & 0xff;",
            "missing": [
              {
                "startCol": 2,
                "endCol": 43
              },
              {
                "startCol": 21,
                "endCol": 42
              }
            ]
          },
          "46": {
            "partial": false,
            "source": "  _index = _index + 4;",
            "missing": [
              {
                "startCol": 2,
                "endCol": 22
              },
              {
                "startCol": 11,
                "endCol": 17
              }
            ]
          },
          "48": {
            "partial": false,
            "source": "  _command[_index++] = 0;",
            "missing": [
              {
                "startCol": 2,
                "endCol": 25
              },
              {
                "startCol": 11,
                "endCol": 19
              }
            ]
          },
          "49": {
            "partial": false,
            "source": "  _command[_index++] = 0;",
            "missing": [
              {
                "startCol": 2,
                "endCol": 25
              },
              {
                "startCol": 11,
                "endCol": 19
              }
            ]
          },
          "50": {
            "partial": false,
            "source": "  _command[_index++] = 0;",
            "missing": [
              {
                "startCol": 2,
                "endCol": 25
              },
              {
                "startCol": 11,
                "endCol": 19
              }
            ]
          },
          "51": {
            "partial": false,
            "source": "  _command[_index++] = 0;",
            "missing": [
              {
                "startCol": 2,
                "endCol": 25
              },
              {
                "startCol": 11,
                "endCol": 19
              }
            ]
          },
          "53": {
            "partial": false,
            "source": "  _command[_index + 3] = (KillCursorCommand.OP_KILL_CURSORS >> 24) & 0xff;     ",
            "missing": [
              {
                "startCol": 2,
                "endCol": 74
              },
              {
                "startCol": 11,
                "endCol": 17
              },
              {
                "startCol": 25,
                "endCol": 66
              }
            ]
          },
          "54": {
            "partial": false,
            "source": "  _command[_index + 2] = (KillCursorCommand.OP_KILL_CURSORS >> 16) & 0xff;",
            "missing": [
              {
                "startCol": 2,
                "endCol": 74
              },
              {
                "startCol": 11,
                "endCol": 17
              },
              {
                "startCol": 25,
                "endCol": 66
              }
            ]
          },
          "55": {
            "partial": false,
            "source": "  _command[_index + 1] = (KillCursorCommand.OP_KILL_CURSORS >> 8) & 0xff;",
            "missing": [
              {
                "startCol": 2,
                "endCol": 73
              },
              {
                "startCol": 11,
                "endCol": 17
              },
              {
                "startCol": 25,
                "endCol": 65
              }
            ]
          },
          "56": {
            "partial": false,
            "source": "  _command[_index] = KillCursorCommand.OP_KILL_CURSORS & 0xff;",
            "missing": [
              {
                "startCol": 2,
                "endCol": 62
              },
              {
                "startCol": 21,
                "endCol": 61
              }
            ]
          },
          "58": {
            "partial": false,
            "source": "  _index = _index + 4;",
            "missing": [
              {
                "startCol": 2,
                "endCol": 22
              },
              {
                "startCol": 11,
                "endCol": 17
              }
            ]
          },
          "61": {
            "partial": false,
            "source": "  _command[_index++] = 0;",
            "missing": [
              {
                "startCol": 2,
                "endCol": 25
              },
              {
                "startCol": 11,
                "endCol": 19
              }
            ]
          },
          "62": {
            "partial": false,
            "source": "  _command[_index++] = 0;",
            "missing": [
              {
                "startCol": 2,
                "endCol": 25
              },
              {
                "startCol": 11,
                "endCol": 19
              }
            ]
          },
          "63": {
            "partial": false,
            "source": "  _command[_index++] = 0;",
            "missing": [
              {
                "startCol": 2,
                "endCol": 25
              },
              {
                "startCol": 11,
                "endCol": 19
              }
            ]
          },
          "64": {
            "partial": false,
            "source": "  _command[_index++] = 0;",
            "missing": [
              {
                "startCol": 2,
                "endCol": 25
              },
              {
                "startCol": 11,
                "endCol": 19
              }
            ]
          },
          "67": {
            "partial": false,
            "source": "  var numberOfCursors = this.cursorIds.length;",
            "missing": [
              {
                "startCol": 2,
                "endCol": 46
              }
            ]
          },
          "68": {
            "partial": false,
            "source": "  _command[_index + 3] = (numberOfCursors >> 24) & 0xff;     ",
            "missing": [
              {
                "startCol": 2,
                "endCol": 56
              },
              {
                "startCol": 11,
                "endCol": 17
              },
              {
                "startCol": 25,
                "endCol": 48
              },
              {
                "startCol": 26,
                "endCol": 41
              }
            ]
          },
          "69": {
            "partial": false,
            "source": "  _command[_index + 2] = (numberOfCursors >> 16) & 0xff;",
            "missing": [
              {
                "startCol": 2,
                "endCol": 56
              },
              {
                "startCol": 11,
                "endCol": 17
              },
              {
                "startCol": 25,
                "endCol": 48
              },
              {
                "startCol": 26,
                "endCol": 41
              }
            ]
          },
          "70": {
            "partial": false,
            "source": "  _command[_index + 1] = (numberOfCursors >> 8) & 0xff;",
            "missing": [
              {
                "startCol": 2,
                "endCol": 55
              },
              {
                "startCol": 11,
                "endCol": 17
              },
              {
                "startCol": 25,
                "endCol": 47
              },
              {
                "startCol": 26,
                "endCol": 41
              }
            ]
          },
          "71": {
            "partial": false,
            "source": "  _command[_index] = numberOfCursors & 0xff;",
            "missing": [
              {
                "startCol": 2,
                "endCol": 44
              },
              {
                "startCol": 21,
                "endCol": 36
              }
            ]
          },
          "73": {
            "partial": false,
            "source": "  _index = _index + 4;",
            "missing": [
              {
                "startCol": 2,
                "endCol": 22
              },
              {
                "startCol": 11,
                "endCol": 17
              }
            ]
          },
          "76": {
            "partial": false,
            "source": "  for(var i = 0; i < this.cursorIds.length; i++) {",
            "missing": [
              {
                "startCol": 17,
                "endCol": 18
              },
              {
                "startCol": 44,
                "endCol": 47
              }
            ]
          },
          "78": {
            "partial": false,
            "source": "    var low_bits = this.cursorIds[i].getLowBits();",
            "missing": [
              {
                "startCol": 4,
                "endCol": 50
              },
              {
                "startCol": 19,
                "endCol": 49
              }
            ]
          },
          "80": {
            "partial": false,
            "source": "    _command[_index + 3] = (low_bits >> 24) & 0xff;     ",
            "missing": [
              {
                "startCol": 4,
                "endCol": 51
              },
              {
                "startCol": 13,
                "endCol": 19
              },
              {
                "startCol": 27,
                "endCol": 43
              },
              {
                "startCol": 28,
                "endCol": 36
              }
            ]
          },
          "81": {
            "partial": false,
            "source": "    _command[_index + 2] = (low_bits >> 16) & 0xff;",
            "missing": [
              {
                "startCol": 4,
                "endCol": 51
              },
              {
                "startCol": 13,
                "endCol": 19
              },
              {
                "startCol": 27,
                "endCol": 43
              },
              {
                "startCol": 28,
                "endCol": 36
              }
            ]
          },
          "82": {
            "partial": false,
            "source": "    _command[_index + 1] = (low_bits >> 8) & 0xff;",
            "missing": [
              {
                "startCol": 4,
                "endCol": 50
              },
              {
                "startCol": 13,
                "endCol": 19
              },
              {
                "startCol": 27,
                "endCol": 42
              },
              {
                "startCol": 28,
                "endCol": 36
              }
            ]
          },
          "83": {
            "partial": false,
            "source": "    _command[_index] = low_bits & 0xff;",
            "missing": [
              {
                "startCol": 4,
                "endCol": 39
              },
              {
                "startCol": 23,
                "endCol": 31
              }
            ]
          },
          "85": {
            "partial": false,
            "source": "    _index = _index + 4;",
            "missing": [
              {
                "startCol": 4,
                "endCol": 24
              },
              {
                "startCol": 13,
                "endCol": 19
              }
            ]
          },
          "87": {
            "partial": false,
            "source": "    var high_bits = this.cursorIds[i].getHighBits();",
            "missing": [
              {
                "startCol": 4,
                "endCol": 52
              },
              {
                "startCol": 20,
                "endCol": 51
              }
            ]
          },
          "89": {
            "partial": false,
            "source": "    _command[_index + 3] = (high_bits >> 24) & 0xff;     ",
            "missing": [
              {
                "startCol": 4,
                "endCol": 52
              },
              {
                "startCol": 13,
                "endCol": 19
              },
              {
                "startCol": 27,
                "endCol": 44
              },
              {
                "startCol": 28,
                "endCol": 37
              }
            ]
          },
          "90": {
            "partial": false,
            "source": "    _command[_index + 2] = (high_bits >> 16) & 0xff;",
            "missing": [
              {
                "startCol": 4,
                "endCol": 52
              },
              {
                "startCol": 13,
                "endCol": 19
              },
              {
                "startCol": 27,
                "endCol": 44
              },
              {
                "startCol": 28,
                "endCol": 37
              }
            ]
          },
          "91": {
            "partial": false,
            "source": "    _command[_index + 1] = (high_bits >> 8) & 0xff;",
            "missing": [
              {
                "startCol": 4,
                "endCol": 51
              },
              {
                "startCol": 13,
                "endCol": 19
              },
              {
                "startCol": 27,
                "endCol": 43
              },
              {
                "startCol": 28,
                "endCol": 37
              }
            ]
          },
          "92": {
            "partial": false,
            "source": "    _command[_index] = high_bits & 0xff;",
            "missing": [
              {
                "startCol": 4,
                "endCol": 40
              },
              {
                "startCol": 23,
                "endCol": 32
              }
            ]
          },
          "94": {
            "partial": false,
            "source": "    _index = _index + 4;",
            "missing": [
              {
                "startCol": 4,
                "endCol": 24
              },
              {
                "startCol": 13,
                "endCol": 19
              }
            ]
          },
          "97": {
            "partial": false,
            "source": "  return _command;",
            "missing": [
              {
                "startCol": 2,
                "endCol": 18
              }
            ]
          }
        },
        "source": "var BaseCommand = require('./base_command').BaseCommand,\n  inherits = require('util').inherits,\n  binaryutils = require('../utils');\n\n/**\n  Insert Document Command\n**/\nvar KillCursorCommand = exports.KillCursorCommand = function(db, cursorIds) {\n  BaseCommand.call(this);\n\n  this.cursorIds = cursorIds;\n  this.db = db;\n};\n\ninherits(KillCursorCommand, BaseCommand);\n\nKillCursorCommand.OP_KILL_CURSORS = 2007;\n\n/*\nstruct {\n    MsgHeader header;                 // standard message header\n    int32     ZERO;                   // 0 - reserved for future use\n    int32     numberOfCursorIDs;      // number of cursorIDs in message\n    int64[]   cursorIDs;                // array of cursorIDs to close\n}\n*/\nKillCursorCommand.prototype.toBinary = function() {\n  // Calculate total length of the document\n  var totalLengthOfCommand = 4 + 4 + (4 * 4) + (this.cursorIds.length * 8);\n  // Let's build the single pass buffer command\n  var _index = 0;\n  var _command = new Buffer(totalLengthOfCommand);\n  // Write the header information to the buffer\n  _command[_index + 3] = (totalLengthOfCommand >> 24) & 0xff;     \n  _command[_index + 2] = (totalLengthOfCommand >> 16) & 0xff;\n  _command[_index + 1] = (totalLengthOfCommand >> 8) & 0xff;\n  _command[_index] = totalLengthOfCommand & 0xff;\n  // Adjust index\n  _index = _index + 4;\n  // Write the request ID\n  _command[_index + 3] = (this.requestId >> 24) & 0xff;     \n  _command[_index + 2] = (this.requestId >> 16) & 0xff;\n  _command[_index + 1] = (this.requestId >> 8) & 0xff;\n  _command[_index] = this.requestId & 0xff;\n  // Adjust index\n  _index = _index + 4;\n  // Write zero\n  _command[_index++] = 0;\n  _command[_index++] = 0;\n  _command[_index++] = 0;\n  _command[_index++] = 0;\n  // Write the op_code for the command\n  _command[_index + 3] = (KillCursorCommand.OP_KILL_CURSORS >> 24) & 0xff;     \n  _command[_index + 2] = (KillCursorCommand.OP_KILL_CURSORS >> 16) & 0xff;\n  _command[_index + 1] = (KillCursorCommand.OP_KILL_CURSORS >> 8) & 0xff;\n  _command[_index] = KillCursorCommand.OP_KILL_CURSORS & 0xff;\n  // Adjust index\n  _index = _index + 4;\n\n  // Write zero\n  _command[_index++] = 0;\n  _command[_index++] = 0;\n  _command[_index++] = 0;\n  _command[_index++] = 0;\n\n  // Number of cursors to kill\n  var numberOfCursors = this.cursorIds.length;\n  _command[_index + 3] = (numberOfCursors >> 24) & 0xff;     \n  _command[_index + 2] = (numberOfCursors >> 16) & 0xff;\n  _command[_index + 1] = (numberOfCursors >> 8) & 0xff;\n  _command[_index] = numberOfCursors & 0xff;\n  // Adjust index\n  _index = _index + 4;\n\n  // Encode all the cursors\n  for(var i = 0; i < this.cursorIds.length; i++) {\n    // Encode the cursor id\n    var low_bits = this.cursorIds[i].getLowBits();\n    // Encode low bits\n    _command[_index + 3] = (low_bits >> 24) & 0xff;     \n    _command[_index + 2] = (low_bits >> 16) & 0xff;\n    _command[_index + 1] = (low_bits >> 8) & 0xff;\n    _command[_index] = low_bits & 0xff;\n    // Adjust index\n    _index = _index + 4;\n      \n    var high_bits = this.cursorIds[i].getHighBits();\n    // Encode high bits\n    _command[_index + 3] = (high_bits >> 24) & 0xff;     \n    _command[_index + 2] = (high_bits >> 16) & 0xff;\n    _command[_index + 1] = (high_bits >> 8) & 0xff;\n    _command[_index] = high_bits & 0xff;\n    // Adjust index\n    _index = _index + 4;\n  }\n  \n  return _command;\n};",
        "blocks": {
          "total": 3,
          "seen": 0,
          "missing": 3,
          "percentage": 0
        }
      },
      "hash": "160e40f4f2dace97f7abd6dbb04b60e0"
    },
    "/Users/ck/coding/projects/node-mongodb-native/lib/mongodb/commands/update_command.js": {
      "stats": {
        "percentage": 0.4827586206896552,
        "lines": [
          {
            "lineno": 8
          },
          {
            "lineno": 10
          },
          {
            "lineno": 11
          },
          {
            "lineno": 12
          },
          {
            "lineno": 13
          },
          {
            "lineno": 14
          },
          {
            "lineno": 15
          },
          {
            "lineno": 16
          },
          {
            "lineno": 20
          },
          {
            "lineno": 21
          },
          {
            "lineno": 22
          },
          {
            "lineno": 23
          },
          {
            "lineno": 24
          },
          {
            "lineno": 25
          },
          {
            "lineno": 26
          },
          {
            "lineno": 30
          },
          {
            "lineno": 31
          },
          {
            "lineno": 32
          },
          {
            "lineno": 33
          },
          {
            "lineno": 34
          },
          {
            "lineno": 37
          },
          {
            "lineno": 38
          },
          {
            "lineno": 39
          },
          {
            "lineno": 40
          },
          {
            "lineno": 43
          },
          {
            "lineno": 45
          },
          {
            "lineno": 46
          },
          {
            "lineno": 66
          },
          {
            "lineno": 67
          },
          {
            "lineno": 70
          },
          {
            "lineno": 71
          },
          {
            "lineno": 73
          },
          {
            "lineno": 74
          },
          {
            "lineno": 75
          },
          {
            "lineno": 76
          },
          {
            "lineno": 78
          },
          {
            "lineno": 80
          },
          {
            "lineno": 81
          },
          {
            "lineno": 82
          },
          {
            "lineno": 83
          },
          {
            "lineno": 85
          },
          {
            "lineno": 87
          },
          {
            "lineno": 88
          },
          {
            "lineno": 89
          },
          {
            "lineno": 90
          },
          {
            "lineno": 92
          },
          {
            "lineno": 93
          },
          {
            "lineno": 94
          },
          {
            "lineno": 95
          },
          {
            "lineno": 97
          },
          {
            "lineno": 100
          },
          {
            "lineno": 101
          },
          {
            "lineno": 102
          },
          {
            "lineno": 103
          },
          {
            "lineno": 106
          },
          {
            "lineno": 107
          },
          {
            "lineno": 110
          },
          {
            "lineno": 111
          },
          {
            "lineno": 112
          },
          {
            "lineno": 113
          },
          {
            "lineno": 115
          },
          {
            "lineno": 118
          },
          {
            "lineno": 119
          },
          {
            "lineno": 123
          },
          {
            "lineno": 124
          },
          {
            "lineno": 125
          },
          {
            "lineno": 126
          },
          {
            "lineno": 128
          },
          {
            "lineno": 130
          },
          {
            "lineno": 134
          },
          {
            "lineno": 135
          },
          {
            "lineno": 136
          },
          {
            "lineno": 137
          },
          {
            "lineno": 139
          },
          {
            "lineno": 141
          },
          {
            "lineno": 144
          },
          {
            "lineno": 145
          },
          {
            "lineno": 149
          },
          {
            "lineno": 150
          },
          {
            "lineno": 151
          },
          {
            "lineno": 152
          },
          {
            "lineno": 154
          },
          {
            "lineno": 156
          },
          {
            "lineno": 160
          },
          {
            "lineno": 161
          },
          {
            "lineno": 162
          },
          {
            "lineno": 163
          },
          {
            "lineno": 165
          },
          {
            "lineno": 167
          },
          {
            "lineno": 169
          }
        ],
        "missing": 90,
        "seen": 84,
        "seen_lines": [
          {
            "s": 1,
            "e": 2
          },
          {
            "s": 1,
            "e": 1
          },
          {
            "s": 2,
            "e": 2
          },
          {
            "s": 7,
            "e": 48
          },
          {
            "s": 50,
            "e": 50
          },
          {
            "s": 50,
            "e": 50
          },
          {
            "s": 52,
            "e": 52
          },
          {
            "s": 64,
            "e": 170
          },
          {
            "s": 173,
            "e": 173
          },
          {
            "s": 174,
            "e": 174
          }
        ],
        "total": 174,
        "coverage": {
          "8": {
            "partial": false,
            "source": "  BaseCommand.call(this);",
            "missing": [
              {
                "startCol": 2,
                "endCol": 24
              }
            ]
          },
          "10": {
            "partial": false,
            "source": "  var object = spec;",
            "missing": [
              {
                "startCol": 2,
                "endCol": 20
              }
            ]
          },
          "11": {
            "partial": false,
            "source": "  if(Buffer.isBuffer(object)) {",
            "missing": [
              {
                "startCol": 5,
                "endCol": 28
              }
            ]
          },
          "12": {
            "partial": false,
            "source": "    var object_size = object[0] | object[1] << 8 | object[2] << 16 | object[3] << 24;    ",
            "missing": [
              {
                "startCol": 4,
                "endCol": 85
              },
              {
                "startCol": 22,
                "endCol": 48
              },
              {
                "startCol": 34,
                "endCol": 48
              },
              {
                "startCol": 51,
                "endCol": 66
              },
              {
                "startCol": 69,
                "endCol": 84
              }
            ]
          },
          "13": {
            "partial": false,
            "source": "    if(object_size != object.length)  {",
            "missing": [
              {
                "startCol": 7,
                "endCol": 18
              }
            ]
          },
          "14": {
            "partial": false,
            "source": "      var error = new Error(\"update spec raw message size does not match message header size [\" + object.length + \"] != [\" + object_size + \"]\");",
            "missing": [
              {
                "startCol": 6,
                "endCol": 144
              },
              {
                "startCol": 28,
                "endCol": 111
              },
              {
                "startCol": 125,
                "endCol": 136
              }
            ]
          },
          "15": {
            "partial": false,
            "source": "      error.name = 'MongoError';",
            "missing": [
              {
                "startCol": 6,
                "endCol": 32
              }
            ]
          },
          "16": {
            "partial": false,
            "source": "      throw error;",
            "missing": [
              {
                "startCol": 6,
                "endCol": 18
              }
            ]
          },
          "20": {
            "partial": false,
            "source": "  var object = document;",
            "missing": [
              {
                "startCol": 2,
                "endCol": 24
              }
            ]
          },
          "21": {
            "partial": false,
            "source": "  if(Buffer.isBuffer(object)) {",
            "missing": [
              {
                "startCol": 5,
                "endCol": 28
              }
            ]
          },
          "22": {
            "partial": false,
            "source": "    var object_size = object[0] | object[1] << 8 | object[2] << 16 | object[3] << 24;    ",
            "missing": [
              {
                "startCol": 4,
                "endCol": 85
              },
              {
                "startCol": 22,
                "endCol": 48
              },
              {
                "startCol": 34,
                "endCol": 48
              },
              {
                "startCol": 51,
                "endCol": 66
              },
              {
                "startCol": 69,
                "endCol": 84
              }
            ]
          },
          "23": {
            "partial": false,
            "source": "    if(object_size != object.length)  {",
            "missing": [
              {
                "startCol": 7,
                "endCol": 18
              }
            ]
          },
          "24": {
            "partial": false,
            "source": "      var error = new Error(\"update document raw message size does not match message header size [\" + object.length + \"] != [\" + object_size + \"]\");",
            "missing": [
              {
                "startCol": 6,
                "endCol": 148
              },
              {
                "startCol": 28,
                "endCol": 115
              },
              {
                "startCol": 129,
                "endCol": 140
              }
            ]
          },
          "25": {
            "partial": false,
            "source": "      error.name = 'MongoError';",
            "missing": [
              {
                "startCol": 6,
                "endCol": 32
              }
            ]
          },
          "26": {
            "partial": false,
            "source": "      throw error;",
            "missing": [
              {
                "startCol": 6,
                "endCol": 18
              }
            ]
          },
          "30": {
            "partial": false,
            "source": "  this.collectionName = collectionName;",
            "missing": [
              {
                "startCol": 2,
                "endCol": 39
              }
            ]
          },
          "31": {
            "partial": false,
            "source": "  this.spec = spec;",
            "missing": [
              {
                "startCol": 2,
                "endCol": 19
              }
            ]
          },
          "32": {
            "partial": false,
            "source": "  this.document = document;",
            "missing": [
              {
                "startCol": 2,
                "endCol": 27
              }
            ]
          },
          "33": {
            "partial": false,
            "source": "  this.db = db;",
            "missing": [
              {
                "startCol": 2,
                "endCol": 15
              }
            ]
          },
          "34": {
            "partial": false,
            "source": "  this.serializeFunctions = false;",
            "missing": [
              {
                "startCol": 2,
                "endCol": 34
              }
            ]
          },
          "37": {
            "partial": false,
            "source": "  var db_upsert = 0;",
            "missing": [
              {
                "startCol": 2,
                "endCol": 20
              }
            ]
          },
          "38": {
            "partial": false,
            "source": "  var db_multi_update = 0;",
            "missing": [
              {
                "startCol": 2,
                "endCol": 26
              }
            ]
          },
          "39": {
            "partial": false,
            "source": "  db_upsert = options != null && options['upsert'] != null ? (options['upsert'] == true ? 1 : 0) : db_upsert;",
            "missing": [
              {
                "startCol": 2,
                "endCol": 109
              },
              {
                "startCol": 14,
                "endCol": 21
              },
              {
                "startCol": 33,
                "endCol": 58
              },
              {
                "startCol": 61,
                "endCol": 96
              },
              {
                "startCol": 62,
                "endCol": 87
              },
              {
                "startCol": 90,
                "endCol": 91
              },
              {
                "startCol": 94,
                "endCol": 95
              },
              {
                "startCol": 99,
                "endCol": 108
              }
            ]
          },
          "40": {
            "partial": false,
            "source": "  db_multi_update = options != null && options['multi'] != null ? (options['multi'] == true ? 1 : 0) : db_multi_update;",
            "missing": [
              {
                "startCol": 2,
                "endCol": 119
              },
              {
                "startCol": 20,
                "endCol": 27
              },
              {
                "startCol": 39,
                "endCol": 63
              },
              {
                "startCol": 66,
                "endCol": 100
              },
              {
                "startCol": 67,
                "endCol": 91
              },
              {
                "startCol": 94,
                "endCol": 95
              },
              {
                "startCol": 98,
                "endCol": 99
              },
              {
                "startCol": 103,
                "endCol": 118
              }
            ]
          },
          "43": {
            "partial": false,
            "source": "  this.flags = parseInt(db_multi_update.toString() + db_upsert.toString(), 2);",
            "missing": [
              {
                "startCol": 2,
                "endCol": 78
              },
              {
                "startCol": 15,
                "endCol": 77
              },
              {
                "startCol": 24,
                "endCol": 50
              },
              {
                "startCol": 53,
                "endCol": 73
              }
            ]
          },
          "45": {
            "partial": false,
            "source": "  if(options['serializeFunctions'] != null && options['serializeFunctions']) {",
            "missing": [
              {
                "startCol": 5,
                "endCol": 42
              }
            ]
          },
          "46": {
            "partial": false,
            "source": "    this.serializeFunctions = true;",
            "missing": [
              {
                "startCol": 4,
                "endCol": 35
              }
            ]
          },
          "66": {
            "partial": false,
            "source": "  var totalLengthOfCommand = 4 + Buffer.byteLength(this.collectionName) + 1 + 4 + this.db.bson.calculateObjectSize(this.spec, false, true) +",
            "missing": [
              {
                "startCol": 29,
                "endCol": 138
              },
              {},
              {
                "startCol": 82,
                "endCol": 138
              },
              {
                "startCol": 33,
                "endCol": 71
              }
            ]
          },
          "67": {
            "partial": false,
            "source": "      this.db.bson.calculateObjectSize(this.document, this.serializeFunctions, true) + (4 * 4);",
            "missing": [
              {},
              {
                "startCol": 6,
                "endCol": 84
              },
              {
                "startCol": 87,
                "endCol": 94
              }
            ]
          },
          "70": {
            "partial": false,
            "source": "  var _index = 0;",
            "missing": [
              {
                "startCol": 2,
                "endCol": 17
              }
            ]
          },
          "71": {
            "partial": false,
            "source": "  var _command = new Buffer(totalLengthOfCommand);",
            "missing": [
              {
                "startCol": 2,
                "endCol": 50
              }
            ]
          },
          "73": {
            "partial": false,
            "source": "  _command[_index + 3] = (totalLengthOfCommand >> 24) & 0xff;     ",
            "missing": [
              {
                "startCol": 2,
                "endCol": 61
              },
              {
                "startCol": 11,
                "endCol": 17
              },
              {
                "startCol": 25,
                "endCol": 53
              },
              {
                "startCol": 26,
                "endCol": 46
              }
            ]
          },
          "74": {
            "partial": false,
            "source": "  _command[_index + 2] = (totalLengthOfCommand >> 16) & 0xff;",
            "missing": [
              {
                "startCol": 2,
                "endCol": 61
              },
              {
                "startCol": 11,
                "endCol": 17
              },
              {
                "startCol": 25,
                "endCol": 53
              },
              {
                "startCol": 26,
                "endCol": 46
              }
            ]
          },
          "75": {
            "partial": false,
            "source": "  _command[_index + 1] = (totalLengthOfCommand >> 8) & 0xff;",
            "missing": [
              {
                "startCol": 2,
                "endCol": 60
              },
              {
                "startCol": 11,
                "endCol": 17
              },
              {
                "startCol": 25,
                "endCol": 52
              },
              {
                "startCol": 26,
                "endCol": 46
              }
            ]
          },
          "76": {
            "partial": false,
            "source": "  _command[_index] = totalLengthOfCommand & 0xff;",
            "missing": [
              {
                "startCol": 2,
                "endCol": 49
              },
              {
                "startCol": 21,
                "endCol": 41
              }
            ]
          },
          "78": {
            "partial": false,
            "source": "  _index = _index + 4;",
            "missing": [
              {
                "startCol": 2,
                "endCol": 22
              },
              {
                "startCol": 11,
                "endCol": 17
              }
            ]
          },
          "80": {
            "partial": false,
            "source": "  _command[_index + 3] = (this.requestId >> 24) & 0xff;     ",
            "missing": [
              {
                "startCol": 2,
                "endCol": 55
              },
              {
                "startCol": 11,
                "endCol": 17
              },
              {
                "startCol": 25,
                "endCol": 47
              }
            ]
          },
          "81": {
            "partial": false,
            "source": "  _command[_index + 2] = (this.requestId >> 16) & 0xff;",
            "missing": [
              {
                "startCol": 2,
                "endCol": 55
              },
              {
                "startCol": 11,
                "endCol": 17
              },
              {
                "startCol": 25,
                "endCol": 47
              }
            ]
          },
          "82": {
            "partial": false,
            "source": "  _command[_index + 1] = (this.requestId >> 8) & 0xff;",
            "missing": [
              {
                "startCol": 2,
                "endCol": 54
              },
              {
                "startCol": 11,
                "endCol": 17
              },
              {
                "startCol": 25,
                "endCol": 46
              }
            ]
          },
          "83": {
            "partial": false,
            "source": "  _command[_index] = this.requestId & 0xff;",
            "missing": [
              {
                "startCol": 2,
                "endCol": 43
              },
              {
                "startCol": 21,
                "endCol": 42
              }
            ]
          },
          "85": {
            "partial": false,
            "source": "  _index = _index + 4;",
            "missing": [
              {
                "startCol": 2,
                "endCol": 22
              },
              {
                "startCol": 11,
                "endCol": 17
              }
            ]
          },
          "87": {
            "partial": false,
            "source": "  _command[_index++] = 0;",
            "missing": [
              {
                "startCol": 2,
                "endCol": 25
              },
              {
                "startCol": 11,
                "endCol": 19
              }
            ]
          },
          "88": {
            "partial": false,
            "source": "  _command[_index++] = 0;",
            "missing": [
              {
                "startCol": 2,
                "endCol": 25
              },
              {
                "startCol": 11,
                "endCol": 19
              }
            ]
          },
          "89": {
            "partial": false,
            "source": "  _command[_index++] = 0;",
            "missing": [
              {
                "startCol": 2,
                "endCol": 25
              },
              {
                "startCol": 11,
                "endCol": 19
              }
            ]
          },
          "90": {
            "partial": false,
            "source": "  _command[_index++] = 0;",
            "missing": [
              {
                "startCol": 2,
                "endCol": 25
              },
              {
                "startCol": 11,
                "endCol": 19
              }
            ]
          },
          "92": {
            "partial": false,
            "source": "  _command[_index + 3] = (UpdateCommand.OP_UPDATE >> 24) & 0xff;     ",
            "missing": [
              {
                "startCol": 2,
                "endCol": 64
              },
              {
                "startCol": 11,
                "endCol": 17
              },
              {
                "startCol": 25,
                "endCol": 56
              }
            ]
          },
          "93": {
            "partial": false,
            "source": "  _command[_index + 2] = (UpdateCommand.OP_UPDATE >> 16) & 0xff;",
            "missing": [
              {
                "startCol": 2,
                "endCol": 64
              },
              {
                "startCol": 11,
                "endCol": 17
              },
              {
                "startCol": 25,
                "endCol": 56
              }
            ]
          },
          "94": {
            "partial": false,
            "source": "  _command[_index + 1] = (UpdateCommand.OP_UPDATE >> 8) & 0xff;",
            "missing": [
              {
                "startCol": 2,
                "endCol": 63
              },
              {
                "startCol": 11,
                "endCol": 17
              },
              {
                "startCol": 25,
                "endCol": 55
              }
            ]
          },
          "95": {
            "partial": false,
            "source": "  _command[_index] = UpdateCommand.OP_UPDATE & 0xff;",
            "missing": [
              {
                "startCol": 2,
                "endCol": 52
              },
              {
                "startCol": 21,
                "endCol": 51
              }
            ]
          },
          "97": {
            "partial": false,
            "source": "  _index = _index + 4;",
            "missing": [
              {
                "startCol": 2,
                "endCol": 22
              },
              {
                "startCol": 11,
                "endCol": 17
              }
            ]
          },
          "100": {
            "partial": false,
            "source": "  _command[_index++] = 0;",
            "missing": [
              {
                "startCol": 2,
                "endCol": 25
              },
              {
                "startCol": 11,
                "endCol": 19
              }
            ]
          },
          "101": {
            "partial": false,
            "source": "  _command[_index++] = 0;",
            "missing": [
              {
                "startCol": 2,
                "endCol": 25
              },
              {
                "startCol": 11,
                "endCol": 19
              }
            ]
          },
          "102": {
            "partial": false,
            "source": "  _command[_index++] = 0;",
            "missing": [
              {
                "startCol": 2,
                "endCol": 25
              },
              {
                "startCol": 11,
                "endCol": 19
              }
            ]
          },
          "103": {
            "partial": false,
            "source": "  _command[_index++] = 0;",
            "missing": [
              {
                "startCol": 2,
                "endCol": 25
              },
              {
                "startCol": 11,
                "endCol": 19
              }
            ]
          },
          "106": {
            "partial": false,
            "source": "  _index = _index + _command.write(this.collectionName, _index, 'utf8') + 1;",
            "missing": [
              {
                "startCol": 2,
                "endCol": 76
              },
              {
                "startCol": 11,
                "endCol": 17
              },
              {
                "startCol": 20,
                "endCol": 71
              }
            ]
          },
          "107": {
            "partial": false,
            "source": "  _command[_index - 1] = 0;    ",
            "missing": [
              {
                "startCol": 2,
                "endCol": 27
              },
              {
                "startCol": 11,
                "endCol": 17
              }
            ]
          },
          "110": {
            "partial": false,
            "source": "  _command[_index + 3] = (this.flags >> 24) & 0xff;     ",
            "missing": [
              {
                "startCol": 2,
                "endCol": 51
              },
              {
                "startCol": 11,
                "endCol": 17
              },
              {
                "startCol": 25,
                "endCol": 43
              }
            ]
          },
          "111": {
            "partial": false,
            "source": "  _command[_index + 2] = (this.flags >> 16) & 0xff;",
            "missing": [
              {
                "startCol": 2,
                "endCol": 51
              },
              {
                "startCol": 11,
                "endCol": 17
              },
              {
                "startCol": 25,
                "endCol": 43
              }
            ]
          },
          "112": {
            "partial": false,
            "source": "  _command[_index + 1] = (this.flags >> 8) & 0xff;",
            "missing": [
              {
                "startCol": 2,
                "endCol": 50
              },
              {
                "startCol": 11,
                "endCol": 17
              },
              {
                "startCol": 25,
                "endCol": 42
              }
            ]
          },
          "113": {
            "partial": false,
            "source": "  _command[_index] = this.flags & 0xff;",
            "missing": [
              {
                "startCol": 2,
                "endCol": 39
              },
              {
                "startCol": 21,
                "endCol": 38
              }
            ]
          },
          "115": {
            "partial": false,
            "source": "  _index = _index + 4;",
            "missing": [
              {
                "startCol": 2,
                "endCol": 22
              },
              {
                "startCol": 11,
                "endCol": 17
              }
            ]
          },
          "118": {
            "partial": false,
            "source": "  var documentLength = 0",
            "missing": [
              {}
            ]
          },
          "119": {
            "partial": false,
            "source": "  var object = this.spec;",
            "missing": [
              {},
              {
                "startCol": 2,
                "endCol": 25
              }
            ]
          },
          "123": {
            "partial": false,
            "source": "  if(Buffer.isBuffer(object)) {",
            "missing": [
              {
                "startCol": 5,
                "endCol": 28
              }
            ]
          },
          "124": {
            "partial": false,
            "source": "    var object_size = object[0] | object[1] << 8 | object[2] << 16 | object[3] << 24;",
            "missing": [
              {
                "startCol": 4,
                "endCol": 85
              },
              {
                "startCol": 22,
                "endCol": 48
              },
              {
                "startCol": 34,
                "endCol": 48
              },
              {
                "startCol": 51,
                "endCol": 66
              },
              {
                "startCol": 69,
                "endCol": 84
              }
            ]
          },
          "125": {
            "partial": false,
            "source": "    if(object_size != object.length) throw new Error(\"raw message size does not match message header size [\" + object.length + \"] != [\" + object_size + \"]\");",
            "missing": [
              {
                "startCol": 7,
                "endCol": 18
              },
              {
                "startCol": 37,
                "endCol": 157
              },
              {
                "startCol": 53,
                "endCol": 124
              },
              {
                "startCol": 138,
                "endCol": 149
              }
            ]
          },
          "126": {
            "partial": false,
            "source": "    documentLength = object.length;",
            "missing": [
              {
                "startCol": 4,
                "endCol": 35
              }
            ]
          },
          "128": {
            "partial": false,
            "source": "    object.copy(_command, _index);",
            "missing": [
              {
                "startCol": 4,
                "endCol": 33
              }
            ]
          },
          "130": {
            "partial": false,
            "source": "    documentLength = this.db.bson.serializeWithBufferAndIndex(object, this.checkKeys, _command, _index, false) - _index + 1;",
            "missing": [
              {
                "startCol": 4,
                "endCol": 124
              },
              {
                "startCol": 21,
                "endCol": 110
              },
              {
                "startCol": 113,
                "endCol": 119
              }
            ]
          },
          "134": {
            "partial": false,
            "source": "  _command[_index + 3] = (documentLength >> 24) & 0xff;     ",
            "missing": [
              {
                "startCol": 2,
                "endCol": 55
              },
              {
                "startCol": 11,
                "endCol": 17
              },
              {
                "startCol": 25,
                "endCol": 47
              },
              {
                "startCol": 26,
                "endCol": 40
              }
            ]
          },
          "135": {
            "partial": false,
            "source": "  _command[_index + 2] = (documentLength >> 16) & 0xff;",
            "missing": [
              {
                "startCol": 2,
                "endCol": 55
              },
              {
                "startCol": 11,
                "endCol": 17
              },
              {
                "startCol": 25,
                "endCol": 47
              },
              {
                "startCol": 26,
                "endCol": 40
              }
            ]
          },
          "136": {
            "partial": false,
            "source": "  _command[_index + 1] = (documentLength >> 8) & 0xff;",
            "missing": [
              {
                "startCol": 2,
                "endCol": 54
              },
              {
                "startCol": 11,
                "endCol": 17
              },
              {
                "startCol": 25,
                "endCol": 46
              },
              {
                "startCol": 26,
                "endCol": 40
              }
            ]
          },
          "137": {
            "partial": false,
            "source": "  _command[_index] = documentLength & 0xff;",
            "missing": [
              {
                "startCol": 2,
                "endCol": 43
              },
              {
                "startCol": 21,
                "endCol": 35
              }
            ]
          },
          "139": {
            "partial": false,
            "source": "  _index = _index + documentLength;",
            "missing": [
              {
                "startCol": 2,
                "endCol": 35
              },
              {
                "startCol": 11,
                "endCol": 17
              },
              {
                "startCol": 20,
                "endCol": 34
              }
            ]
          },
          "141": {
            "partial": false,
            "source": "  _command[_index - 1] = 0;    ",
            "missing": [
              {
                "startCol": 2,
                "endCol": 27
              },
              {
                "startCol": 11,
                "endCol": 17
              }
            ]
          },
          "144": {
            "partial": false,
            "source": "  var documentLength = 0",
            "missing": [
              {}
            ]
          },
          "145": {
            "partial": false,
            "source": "  var object = this.document;",
            "missing": [
              {},
              {
                "startCol": 2,
                "endCol": 29
              }
            ]
          },
          "149": {
            "partial": false,
            "source": "  if(Buffer.isBuffer(object)) {",
            "missing": [
              {
                "startCol": 5,
                "endCol": 28
              }
            ]
          },
          "150": {
            "partial": false,
            "source": "    var object_size = object[0] | object[1] << 8 | object[2] << 16 | object[3] << 24;",
            "missing": [
              {
                "startCol": 4,
                "endCol": 85
              },
              {
                "startCol": 22,
                "endCol": 48
              },
              {
                "startCol": 34,
                "endCol": 48
              },
              {
                "startCol": 51,
                "endCol": 66
              },
              {
                "startCol": 69,
                "endCol": 84
              }
            ]
          },
          "151": {
            "partial": false,
            "source": "    if(object_size != object.length) throw new Error(\"raw message size does not match message header size [\" + object.length + \"] != [\" + object_size +